{"version":3,"sources":["webpack://tg-editable-grid/webpack/universalModuleDefinition","webpack://tg-editable-grid/webpack/bootstrap","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/Feature.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellEditors/Textfield.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/CellRenderer.js","webpack://tg-editable-grid/./node_modules/rectangular/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/Base.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellEditors/CellEditor.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/error.js","webpack://tg-editable-grid/./node_modules/object-iterators/index.js","webpack://tg-editable-grid/./node_modules/overrider/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/images/index.js","webpack://tg-editable-grid/./node_modules/synonomous/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/Registry.js","webpack://tg-editable-grid/./node_modules/datasaur-base/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/Hypergrid/index.js","webpack://tg-editable-grid/./node_modules/extend-me/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/defaults.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/bundle-columns.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/Localization.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/assignOrDelete.js","webpack://tg-editable-grid/./node_modules/synonomous/transformers.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/dispatchGridEvent.js","webpack://tg-editable-grid/./node_modules/inspire-tree/dist/inspire-tree.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/dynamicProperties.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/InclusiveRectangle.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/by-columns-and-rows.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/bundle-rows.js","webpack://tg-editable-grid/./node_modules/sparse-boolean-array/index.js","webpack://tg-editable-grid/(webpack)/buildin/module.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Behavior.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/rowProperties.js","webpack://tg-editable-grid/./node_modules/datasaur-local/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Local/events.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Local/columnEnum.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/Button.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/Hypergrid/modules.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/Hypergrid/themes.js","webpack://tg-editable-grid/(webpack)/buildin/global.js","webpack://tg-editable-grid/./node_modules/lodash/lodash.js","webpack://tg-editable-grid/./node_modules/flatpickr/dist/flatpickr.js","webpack://tg-editable-grid/./node_modules/inspire-tree-dom/dist/inspire-tree-dom.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/polyfills.js","webpack://tg-editable-grid/./node_modules/inject-stylesheet-template/index.js","webpack://tg-editable-grid/./node_modules/automat/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/css/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/deprecated.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/Canvas.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/graphics.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/images/images.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/layer-props.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/by-cells.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/by-columns.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/by-columns-discrete.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/renderer/by-rows.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/SelectionModel.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Column.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/toFunction.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/cellProperties.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/columnProperties.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/cellEventFactory.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/fields.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/CellClick.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/CellEditing.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/DOM/effects.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/CellSelection.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/ColumnMoving.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/ColumnResizing.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/ColumnSelection.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/ColumnSorting.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/Filters.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/KeyPaging.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/OnHover.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/RowSelection.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/features/ThumbwheelScrolling.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/gridCellProperties.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/dataModel.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/subgrids.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/dataModels/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/dataModels/HeaderSubgrid.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Local/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Local/decorators.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Local/hooks.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Local/fallbacks.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Local/polyfills.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/behaviors/Local/dispatchDataModelEvent.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/SimpleCell.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/SliderCell.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/SparkBar.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/LastSelection.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/SparkLine.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/ErrorCell.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/Tag.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellRenderers/TreeCell.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellEditors/index.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellEditors/Color.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellEditors/Date.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellEditors/Number.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellEditors/Slider.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/cellEditors/Spinner.js","webpack://tg-editable-grid/./node_modules/finbars/index.js","webpack://tg-editable-grid/./node_modules/css-injector/index.js","webpack://tg-editable-grid/./node_modules/mustache/mustache.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/Hypergrid/events.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/Hypergrid/selection.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/lib/SelectionRectangle.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/Hypergrid/stash-selections.js","webpack://tg-editable-grid/./node_modules/fin-hypergrid/src/Hypergrid/scrolling.js","webpack://tg-editable-grid/./node_modules/process/browser.js","webpack://tg-editable-grid/./src/editors/queueless.js","webpack://tg-editable-grid/./src/editors/ComboBox.js","webpack://tg-editable-grid/./src/editors/Datetime.js","webpack://tg-editable-grid/./src/editors/Tree.js","webpack://tg-editable-grid/./src/excel.js","webpack://tg-editable-grid/./src/utils.js","webpack://tg-editable-grid/./src/main.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Feature","extend","next","detached","cursor","currentHoverCell","setNext","nextFeature","this","detachChain","attachChain","handleMouseMove","grid","event","handleMouseExit","handleMouseEnter","handleMouseDown","handleMouseUp","handleKeyDown","handleKeyUp","handleWheelMoved","handleDoubleClick","handleClick","handleMouseDrag","handleContextMenu","moveSingleSelect","x","y","isFirstFixedRow","gridCell","isFirstFixedColumn","setCursor","beCursor","initializeOn","CellEditor","Localization","Textfield","template","initialize","input","style","textAlign","properties","halign","font","localizer","string","selectAll","setSelectionRange","length","CellRenderer","paint","gc","config","roundRect","width","height","radius","fill","stroke","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","addReadOnlyProperty","writable","configurable","Point","Number","Rectangle","plus","offset","plusXY","offsetX","offsetY","minus","min","point","Math","max","distance","deltaX","deltaY","sqrt","equals","result","greaterThan","lessThan","greaterThanOrEqualTo","lessThanOrEqualTo","within","rect","minX","origin","maxX","extent","minY","maxY","EQ","GT","LT","GE","LE","top","left","bottom","corner","right","area","flattenXAt","flattenYAt","contains","pointOrRect","growBy","padding","shrinkBy","union","forEach","iteratee","context","x2","y2","intersect","ifNoneAction","intersects","Base","version","atLeastVersion","neededVersion","delta","neededParts","split","thisParts","find","neededPart","deprecated","HypergridError","notify","message","onerror","console","warn","alert","unwrap","mixIn","createApply","Constructor","variableArgArray","discreteArgs","discreteArgArray","Array","slice","arguments","args","concat","apply","effects","options","cellEditor","locale","localization","format","initialValue","container","document","createElement","innerHTML","templater","render","el","firstChild","errors","self","addEventListener","keyup","e","keyCode","preventDefault","fireSyntheticEditorKeyDownEvent","fireSyntheticEditorKeyPressEvent","onmousedown","stopPropagation","null","specialKeyups","9","13","27","specialKeyup","stopped","cellProps","feedbackCount","keyChar","canvas","getKeyChar","repaint","mappedNavKey","ctrlKey","stopEditing","finEvent","newEvent","alt","altKey","ctrl","char","legacyChar","legacyKey","code","charCode","meta","metaKey","shift","shiftKey","identifier","editor","delegateKeyDown","fireSyntheticEditorKeyUpEvent","checkEditorPositionFlag","gridRenderedNotification","checkEditor","scrollValueChangedNotification","moveEditor","setBounds","bounds","beginEditing","fireRequestCellEdit","setEditorValue","showEditor","display","hideEditor","feedback","str","error","validateEditorValue","getEditorValue","err","fireSyntheticEditorDataChangeEvent","saveEditorValue","errorEffectBegin","cancelEditing","remove","effecting","spec","feedbackEffect","effect","assign","callback","errorEffectEnd","msg","expectation","test","replace","setTimeout","save","fireBeforeCellEdit","fireAfterCellEdit","parse","invalid","takeFocus","leftWas","topWas","scrollX","scrollY","focus","scrollTo","cellBounds","px","isCellVisible","attachEditor","div","appendChild","Error","Wrapper","originalValue","chain","wrapped","chaining","each","keys","predicate","undefined","filter","push","map","reduce","memo","idx","source","extendOwn","val","TypeError","list","thisArg","overrider","target","sources","descriptor","getOwnPropertyDescriptor","mixInTo","_","images","image","element","Image","src","type","data","checked","unchecked","add","img","checkbox","state","transformers","REGEXP_INTEGER","optionNames","Synonomous","drilldown","collection","breadcrumbs","crumb","newBreadcrumbs","crumbs","isArray","toString","crumbsToString","join","constructor","transformations","propPath","_propPath","dictPath","_dictPath","getSynonyms","synonyms","ReferenceError","synonym","decorate","obj","propNames","item","drilldownContext","decoratingObjectItself","force","propName","decorateList","index","elements","transformation","transformer","path","pathList","splice","drillDownContext","decorateObject","decorateArray","Registry","items","getClassName","friendlyName","toLowerCase","addSynonym","synonymName","existingName","lowerName","foundName","BaseClass","trim","endings","ending","plural","singular","singularOf","indefArtOf","DatasaurBase","isNullObject","drillDownCharMap","true","false","DataError","handlers","install","getPrototypeOf","api","dataModel","whitelist","blacklist","blacklistAlways","indexOf","getFilteredKeys","injectable","inject","link","findMethod","dispatchEvent","nameOrEvent","handler","addListener","removeListener","removeAllListeners","dump","getRowCount","schema","getSchema","fields","cs","getHeaders","cCount","getColumnCount","viewMakesSense","row","getValue","fixIndentForTableDisplay","table","injectCSS","defaults","dynamicPropertyDescriptors","Canvas","Renderer","SelectionModel","Behavior","behaviorJSON","cellRenderers","cellEditors","EDGE_STYLES","RECT_STYLES","Hypergrid","selectionInitialize","HTMLElement","clearState","setContainer","boundingRect","getElementById","firstElementChild","setStyles","body","findOrCreateContainer","installPlugins","plugins","lastEdgeSelection","isWebkit","navigator","userAgent","selectionModel","renderOverridesCache","allowEventHandlers","dragExtent","numRows","numColumns","clearMouseDown","setFormatter","listeners","props","initCanvas","setData","DataModel","setBehavior","loadState","mouseCatcher","abortEditing","grids","resetGridBorder","terminate","removeEventListener","behavior","boundDispatchEvent","removeAllEventListeners","stop","hasChildNodes","removeChild","edge","styleName","border","lineWidth","lineColor","mouseDown","hoverCell","setAttribute","attribute","defineProperties","initThemeLayer","var","gridRenderer","rowHeaderCheckboxes","rowHeaderNumbers","gridBorder","gridBorderTop","gridBorderRight","gridBorderBottom","gridBorderLeft","deepClone","getOwnPropertyDescriptors","clone","reset","vScrollValue","hScrollValue","sbPrevVScrollValue","sbPrevHScrollValue","scrollingNow","subgrids","renderer","resize","behaviorChanged","refreshProperties","shared","plugin","hash","$$CLASS_NAME","substr","preinstall","uninstallPlugins","pluginNames","uninstall","computeCellsBounds","numberOptions","dateOptions","getFormatter","localizerName","formatValue","formatter","setHoverCell","cellEvent","fireSyntheticOnCellExitEvent","fireSyntheticOnCellEnterEvent","addProperties","behaviorShapeChanged","defaultRowHeight","autosizeAllColumns","setState","addState","settingState","getState","saveState","space","calculators","compact","columns","getColumns","column","calculator","toJSON","stringifyFunctions","headerify","json","JSON","stringify","getMouseDown","popMouseDown","pop","setMouseDown","getDragExtent","setDragExtent","checkColumnAutosizing","paintNow","fireSyntheticGridRenderedEvent","tickNotification","fireSyntheticTickEvent","autoSized","checkClipboardCopy","hasFocus","csvData","getSelectionAsTSV","clipboardData","initScrollbars","reindex","getActiveColumnCount","getRow","setValue","dataRows","setInfo","noDataMessage","shapeChanged","messages","paintLoopRunning","needsReindex","divCanvas","behaviorStateChanged","needsShapeChanged","requestRepaint","synchronizeScrollingBoundaries","needsStateChanged","deferredBehaviorChange","getBounds","repaintImmediately","columnsCreated","initContainer","initRenderer","querySelector","position","clientHeight","oncontextmenu","removeAttribute","classList","id","querySelectorAll","margin","contextAttributes","delegateCanvasEvents","convertViewPointToDataPoint","unscrolled","convertDataPointToViewPoint","dataPoint","cursorName","getDataBounds","b","editAt","isDataColumn","isDataRow","getCellEditorAt","isColumnVisible","columnIndex","isDataRowVisible","isDataVisible","rn","insureModelColIsVisible","colIndex","maxCols","indexToCheck","sign","visible","scrollBy","insureModelRowIsVisible","rowIndex","maxRows","getGridCellFromMousePoint","mouse","getBoundsOfCell","resized","cellClicked","windowOpen","url","features","open","begin","end","getActiveColumns","getHiddenColumns","wasCellEditor","editorTakeFocus","getVisibleRows","getVisibleColumns","getColumnWidth","setColumnWidth","columnWidth","getFixedColumnsWidth","getRowHeight","setRowHeight","rowHeight","getFixedRowsHeight","getFixedColumnCount","getFixedRowCount","topLeftClicked","rowHeaderClicked","columnHeaderClicked","onEditorActivate","toggleHiDPI","useHiDPI","getHiDPI","ctx","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","getRenderedWidth","getRenderedHeight","updateCursor","getCursorAt","getHScrollValue","getVScrollValue","repaintCell","isDraggingColumn","dragger","getRenderedData","getVisibleCellMatrix","autosizeColumn","columnOrIndex","getActiveColumn","setFocusable","canReceiveFocus","getVisibleColumnsCount","getVisibleRowsCount","updateSize","checksize","stopPaintThread","stopResizeThread","restartResizeThread","restartPaintThread","swapColumns","endDragColumnNotification","getFixedColumnsMaxWidth","isMouseDownInHeaderArea","headerRowCount","getHeaderRowCount","getColumnProperties","setColumnProperties","clearAllCellProperties","resetAllCellPropertiesCaches","isGridRow","CellEvent","getFooterRowCount","getLogicalRowCount","hasTreeColumn","lookupFeature","newPoint","newRectangle","charMap","decorateColumnArray","array","columnArrayDecorations","findWithNeg","leftMostColIndex","forEachWithNeg","elStyle","pleaseUse","requireString","warned","match","maximumFractionDigits","sharedMixin","mixin","extendedClassName","prototypeAdditions","preInitialize","term","recur","proto","postInitialize","parent","parentConstructor","postExtend","ancestorConstructorName","super","superMember","memberName","superMethod","methodName","method","callSuperMethod","propClassEnum","COLUMNS","STRIPES","ROWS","CELLS","propClassLayersMap","DEFAULT","NO_ROWS","themeName","wheelHFactor","wheelVFactor","color","backgroundColor","foregroundSelectionFont","foregroundSelectionColor","backgroundSelectionColor","columnHeaderFont","columnHeaderColor","columnHeaderForegroundSelectionFont","columnHeaderBackgroundColor","columnHeaderForegroundSelectionColor","columnHeaderBackgroundSelectionColor","columnHeaderHalign","columnHeaderRenderer","columnHeaderFormat","rowHeaderFont","rowHeaderColor","rowHeaderBackgroundColor","rowHeaderForegroundSelectionColor","rowHeaderForegroundSelectionFont","rowHeaderBackgroundSelectionColor","backgroundColor2","treeHeaderFont","treeHeaderColor","treeHeaderBackgroundColor","treeHeaderForegroundSelectionColor","treeHeaderForegroundSelectionFont","treeHeaderBackgroundSelectionColor","filterFont","filterColor","filterBackgroundColor","filterForegroundSelectionColor","filterBackgroundSelectionColor","filterHalign","filterRenderer","filterEditor","filterable","showFilterRow","voffset","scrollbarHoverOver","scrollbarHoverOff","scrollingEnabled","vScrollbarClassPrefix","hScrollbarClassPrefix","cellPadding","iconPadding","leftIcon","centerIcon","rightIcon","renderFalsy","gridLinesH","gridLinesHWidth","gridLinesHColor","gridLinesV","gridLinesVWidth","gridLinesVColor","gridLinesColumnHeader","gridLinesRowHeader","gridLinesUserDataArea","fixedLinesHWidth","fixedLinesHEdge","fixedLinesHColor","fixedLinesVWidth","fixedLinesVEdge","fixedLinesVColor","boxSizing","defaultColumnWidth","minimumColumnWidth","resizeColumnInPlace","repaintIntervalRate","useBitBlit","navKeyMap","RETURN","RETURNSHIFT","TAB","TABSHIFT","readOnly","fixedColumnCount","fixedRowCount","showTreeColumn","treeRenderer","showHeaderRow","cellSelection","columnSelection","rowSelection","singleRowSelectionMode","selectionRegionOverlayColor","selectionRegionOutlineColor","columnAutosizing","rowNumberAutosizing","treeColumnAutosizing","columnAutosizingMax","treeColumnAutosizingMax","headerTextWrapping","rowResize","editable","editOnDoubleClick","editOnKeydown","editOnNextCell","unsortable","sortOnDoubleClick","maxSortColumns","sortOnHiddenColumns","checkboxOnlyRowSelections","autoSelectRows","autoSelectColumns","collapseCellSelections","hoverCellHighlight","enabled","hoverRowHighlight","hoverColumnHighlight","linkTarget","linkOnHover","linkColor","linkVisitedColor","linkColorOnHover","strikeThrough","multipleSelections","enableContinuousRepaint","columnsReorderable","columnGrabMargin","columnClip","rowStripes","propClassLayers","restoreRowSelections","restoreColumnSelections","truncateTextWithEllipsis","rowPropertiesDeprecationWarning","rowProperties","columnOnlyError","set","delete","navKey","reapplyCellProperties","exec","vf","dataRow","subrow","resetCellEvents","vr","pool","gridProps","visibleRows","R","cellEventPool","visibleColumns","vc","bundle","columnBundles","gridPrefillColor","Formatter","defaultLocale","Intl","NumberFormat","useGrouping","dp","DateTimeFormat","date","Date","getMonth","getDate","getFullYear","NumberFormatter","mapper","demapper","acceptStandardDigits","invalids","RegExp","number","formattedLocalizedNumber","isNaN","DateFormatter","localizeNumber","localizedDigits","digitFormatter","digitParser","YY","transformNumber","MM","DD","testDate","mm","localizedDate","localizeDate","missingDigits","localizedNumberPattern","parts","partsMap","yy","dd","digitTransformer","int","float","construct","factoryOptions","constructorName","toUpperCase","BoundConstructor","chromeDate","dest","REGEX_CAMEL_CASE_OR_UNDERSCORE","REGEX_ALL_PUNC_RUN","REGEX_ALL_PUNC_RUN_BEFORE_LETTER","WITH_UPPER_CASE","REGEX_INITIAL_DIGIT","REGEX_INITIAL_CAPITAL","WITH_LOWER_CASE","REGEXP_LOWER_CASE_LETTER","REGEXP_WORD_SEPARATORS","WITH_CAPTIAL_LETTER","a","REGEXP_CAPITAL_LETTERS","REGEXP_OVER_CAPITALIZED_WORDS","verbatim","toCamelCase","toAllCaps","toTitle","details","eventName","cancelable","primitiveEvent","detail","CustomEvent","time","now","global","process","commonjsGlobal","commonjsRequire","createCommonjsModule","fn","rngBrowser","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rnds","random","byteToHex","bytesToUuid_1","buf","bth","v4_1","rng","ii","baseStateChange","prop","verb","node","deep","_tree","batch","nodes","resetStateOnRestore","defaultState","resetState","emit","hasChildren","children","recurseDown","child","markDirty","es6Promise_1","isFunction","len","vertxNext","customSchedulerFn","asap","arg","queue","flush","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useSetTimeout","globalSetTimeout","then","onFulfillment","onRejection","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve$1","promise","resolve","nextTick","iterations","observer","createTextNode","observe","characterData","useMutationObserver","channel","port1","onmessage","port2","postMessage","useMessageChannel","vertx","runOnLoop","runOnContext","attemptVertx","substring","PENDING","FULFILLED","REJECTED","GET_THEN_ERROR","ErrorObject","getThen","handleMaybeThenable","maybeThenable","then$$1","thenable","fulfill","reject","reason","handleOwnThenable","sealed","fulfillmentHandler","rejectionHandler","tryThen","_label","handleForeignThenable","objectOrFunction","publishRejection","_onerror","publish","_subscribers","subscribers","settled","TRY_CATCH_ERROR","hasCallback","succeeded","failed","tryCatch","Enumerator","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","resolve$$1","_then","_settledAt","Promise$1","_willSettleAt","enumerator","Promise","resolver","needsResolver","initializePromise","needsNew","catch","finally","all","entries","race","_$$1","_setScheduler","scheduleFn","_setAsap","asapFn","_asap","polyfill","local","Function","P","promiseToString","cast","classCallCheck","instance","createClass","protoProps","staticProps","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","baseStatePredicate","full","extract","getPredicateFunction","flatten","removed","baseInvoke","methods","castArray","isString","TreeNodes","_extendableBuiltin2","tree","_this","isTree","_pagination","limit","pagination","total","TreeNode","addNode","sort","sortedIndexBy","insertAt","invoke","invokeDeep","newNodes","_context","pusher","hierarchy","copy","matches","_this2","waitCount","done","expand","expandDeep","flat","copyHierarchy","existingNode","restore","show","isArrayLike","isBoolean","applyChanges","isTreeNode","objectToNode","itree","refreshIndeterminateState","isArrayLikeObject","tail","_this3","_loading","deferredLoading","loadChildren","load","newIndex","oldNode","refs","results","sorter","_this4","sorted","sortBy","comparator","sortDeep","node1","node2","n1Context","n2Context","n1Index","n2Index","move","toObject","cls","ExtendableBuiltin","_extendableBuiltin","res","standardizePromise","isObject","baseState","currentVal","excludeKeys","includes","v","k","cloneDeep","cloneItree","addChild","isDynamic","hidden","shallow","autoCheckChildren","hasParent","getParent","recurseUp","hasVisibleChildren","hide","model","excludeNode","parents","getParents","reverse","filterBy","toArray","pointer","selected","selection","require","autoSelectChildren","editing","edit","collapsed","focused","blurDeep","paths","unshift","text","hasAncestor","Boolean","allowDynamicLoad","indices","found","findLast","lastDeepestVisibleChild","complete","totalNodes","collectionToModel","parseInt","select","isTreeNodes","loader","loadMore","dirty","nextVisibleSiblingNode","nextVisibleAncestralSiblingNode","nextVisibleChildNode","findIndex","prev","previousVisibleSiblingNode","oldValue","indeterminate","childrenCount","collapse","includeState","exported","selectable","canAutoDeselect","oldVal","deselectDeep","_lastSelectedNode","allow","_this5","oldState","names","newVal","_this6","swap","uncheck","check","deselect","_this7","excludeChildren","pull","keyName","icon","li","usesNativeDOM","rendered","attributes","draggable","loading","allowsLoadEvents","allowLoadEvents","eventemitter2_1","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","_maxListeners","maxListeners","wildcard","newListener","_newListener","_removeListener","verboseMemoryLeak","listenerTree","logPossibleMemoryLeak","count","errorMsg","emitWarning","emitter","trace","EventEmitter","searchListenerTree","leaf","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","**","EventEmitter2","setMaxListeners","once","_once","prependOnceListener","prepend","_many","many","ttl","prependMany","listener","off","_origin","_on","j","al","_all","emitAsync","promises","on","prependListener","onAny","_onAny","prependAny","leafs","iLeaf","recursivelyGarbageCollect","offAny","fns","eventNames","listenerCount","listenersAny","_map","_EventEmitter","InspireTree","opts","_muted","batching","initialized","preventDeselection","defaultsDeep","contextMenu","search","matcher","matchProcessor","autoDeselect","disableDirectDeselection","multiple","showCheckboxes","drop-target","matched","isEventMuted","treeDefaultPrevented","preventTreeDefault","pathMap","transform","indexPath","_$sortBy2","arr","from","head","muted","newModel","selectFirstAvailableNode","resp","_loader","events","removeAll","query","_config$search","isEmpty","clearSearch","isRegExp","expandParents","showDeep","startNode","endNode","nextVisibleNode","difference","warnedDoubleClickDelay","theme","getTheme","applyTheme","sbHScroller","deltaXFactor","factor","sbVScroller","deltaYFactor","initializeFeatureChain","allowEvents","rendererName","setGridRenderer","columnIndexes","setColumnOrder","changed","columnNames","setColumnOrderByName","rows","rowCount","rowProps","getRowProperties","getOwnPropertyNames","definedProp","rowsHash","subgridName","subgrid","lookup","subgridHash","header","columnsHash","addAllColumnProperties","cells","copyCellOwnProperties","getCellOwnProperties","cellsHash","columnProps","columnName","resetRowHeaderColumnWidth","showRowNumbers","doubleClickDelay","delay","getGridBorderDescriptor","columnProperties","InclusiveRectangle","bundleColumns","bundleRows","paintCellsByColumnsAndRows","prefillColor","rowPrefillColors","rowBundle","rowBundles","columnBundle","preferredWidth","C","cLast","viewWidth","viewHeight","clearRect","alpha","cache","fillStyle","fillRect","resetAllGridRenderers","rebundle","clearFill","visibleColumn","clipSave","_paintCell","renderErrorCell","visibleRow","clipRestore","round","paintGridlines","stripe","isData","RangeSelectionModel","states","storeState","sels","makeRun","start","overlaps","run1","run2","run","splicer","abuts","merge","pieces","minuend","subtrahend","m0","m1","s0","s1","subtract","clear","clearMostRecentSelection","isSelected","cell","some","getSelections","webpackPolyfill","deprecate","Column","cellEventFactory","featureRegistry","ArrayDecorator","assignOrDelete","dispatchGridEvent","noExportProperties","constructors","featureChain","featureMap","getFeatureConstructor","featureNames","unregisteredFeatures","FeatureConstructor","className","featureName","params","sampleCode","feature","dataModelChanged","resetDataModel","scrollPositionX","scrollPositionY","rowPropertiesPrototype","rowPropertiesPrototypeDescriptors","clearColumns","createColumns","setHeaders","headers","allColumns","renderedColumnCount","renderedRowCount","rowColumnIndex","treeColumnIndex","tc","rc","treeColumnNameDefault","treeColumnHeaderDefault","rowColumnNameDefault","newColumn","getActiveColumnIndex","columnOrIndexOrName","getColumn","addColumn","arrayDecorator","realImplementation","normalizeSchema","decorateSchema","decorateColumnSchema","createDataRowProxy","getWidth","setWidth","stateChanged","clearObjectProperties","exportProps","setAllColumnProperties","setColumnIndexes","silent","fireSyntheticOnColumnsChangedEvent","showColumns","isActiveColumnIndexes","referenceIndex","allowDuplicateColumns","activeColumns","sourceColumnList","newColumns","hideColumns","resolveProperty","contentBox","onMouseMove","onClick","onContextMenu","onWheelMoved","onMouseUp","onMouseDrag","onKeyDown","onKeyUp","onDoubleClick","isColumnReorderable","X","getHiddenColumnDescriptors","indexes","labels","columnCount","field","setFixedColumnCount","setFixedRowCount","setScrollPositionX","getScrollPositionX","setScrollPositionY","getScrollPositionY","highlightCellOnHover","isColumnHovered","isRowHovered","cellPropertiesPrePaintNotification","tmp","getSelectionMatrixFunction","selectedRows","getRowHeaderColumn","getTreeColumn","autoSizeRowNumberColumn","autoSizeTreeColumn","getSelectedRows","getSelectedColumns","getIndexedData","prefix","suffix","applyAnalytics","yOrCellEvent","dataCell","metadata","getRowMetadata","__ROW","setRowProperties","addRowProperties","setRowProperty","isHeight","hasHeight","_height","ceil","DatasaurLocal","datasaur","setSchema","newSchema","getFirstRow","setRow","__META","setRowMetadata","addRow","delRow","fin-hypergrid-schema-loaded","fin-hypergrid-data-loaded","fin-hypergrid-data-shape-changed","fin-hypergrid-data-prereindex","stashRowSelections","stashColumnSelections","fin-hypergrid-data-postreindex","unstashRowSelections","unstashColumnSelections","warnColumnEnumDeprecation","columnEnumSynchronize","_columnEnumKey","columnEnum","_columnEnum","dict","columnEnumKey","mixInShared","columnEnumDecorators","Button","arcGradient","createLinearGradient","addColorStop","strokeStyle","ox","getTextWidth","oy","getTextHeight","descent","textBaseline","fillText","Scrollbar","datasaur-base","datasaur-local","extend-me","object-iterators","rectangular","sparse-boolean-array","synonomous","styles","stylesWithHalign","stylers","dynamicCosmetics","defaultTheme","styler","registry","default","pseudopropAdvice","themeLayer","_theme","registerTheme","registerThemes","themeCollection","g","eval","__WEBPACK_AMD_DEFINE_RESULT__","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","PLACEHOLDER","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","NAN","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","\\","'","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","nodeType","freeModule","moduleExports","freeProcess","nodeUtil","types","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","arrayAggregator","setter","accumulator","arrayEach","arrayEachRight","arrayEvery","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","arrayMap","arrayPush","values","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","basePropertyOf","baseReduce","current","baseTimes","baseUnary","baseValues","cacheHas","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","escapeHtmlChar","&","<",">","\"","escapeStringChar","chr","hasUnicode","mapToArray","size","overArg","replaceHolders","placeholder","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","unicodeToArray","asciiToArray","unescapeHtmlChar","&amp;","&lt;","&gt;","&quot;","&#39;","runInContext","pick","String","arrayProto","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","uid","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","allocUnsafe","getPrototype","objectCreate","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","ctxSetTimeout","nativeCeil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","nativeReverse","DataView","Map","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","skip","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","cloneSymbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","escape","evaluate","interpolate","variable","imports","getMapData","pairs","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","baseGet","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","baseSortBy","criteria","objCriteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","basePullAt","previous","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","guard","isIterateeCall","iterable","createCaseFirst","charAt","trailing","createCompounder","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","arrLength","oldArray","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setWrapToString","createRound","precision","toInteger","pair","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrValue","otherFunc","isKeyable","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","insertWrapDetails","updateWrapDetails","getWrapDetails","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","differenceBy","differenceWith","findLastIndex","intersection","mapped","intersectionBy","intersectionWith","pullAll","pullAt","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","interceptor","wrapperAt","countBy","forEachRight","groupBy","invokeMap","keyBy","partition","before","bindKey","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","defer","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","lt","lte","iteratorToArray","remainder","toLength","isBinary","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","mergeWith","invert","invertBy","omit","basePick","pickBy","toPairs","toPairsIn","camelCase","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","methodOf","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","after","chunk","cond","conforms","baseConforms","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matchesProperty","nthArg","omitBy","orderBy","propertyOf","pullAllBy","pullAllWith","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","spread","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extendWith","clamp","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isElement","isEqual","isEqualWith","isMatch","isMatchWith","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduceRight","repeat","sample","sortedIndex","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","times","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","newEnd","unescape","uniqueId","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","bool","immediate","timeout","arrayify","do_nothing","monthToStr","monthNumber","shorthand","months","revFormat","D","F","dateObj","monthName","setMonth","longhand","G","hour","setHours","H","J","day","setDate","K","amPM","getHours","M","shortMonth","S","seconds","setSeconds","U","unixSeconds","W","weekNum","weekNumber","Y","year","setFullYear","Z","ISODate","h","minutes","setMinutes","month","w","tokenRegex","formats","toISOString","weekdays","ordinal","getSeconds","getTime","getWeek","getMinutes","getDay","english","daysInMonth","firstDayOfWeek","rangeSeparator","weekAbbreviation","scrollTitle","toggleTitle","yearAriaLabel","createDateFormatter","_ref","_ref$config","_ref$l10n","l10n","frmt","overrideLocale","formatDate","createDateParser","_ref2","_ref2$config","_ref2$l10n","givenFormat","timeless","customLocale","parsedDate","date_orig","toFixed","dateFormat","datestr","parseDate","noCalendar","ops","matchIndex","regexStr","token","isBackSlash","escaped","_ref3","errorHandler","compareDates","date1","date2","isBetween","ts","ts1","ts2","duration","DAY","HOOKS","_disable","_enable","allowInput","altFormat","altInput","altInputClass","animate","ariaDateFormat","clickOpens","closeOnSelect","conjunction","defaultHour","defaultMinute","defaultSeconds","disable","disableMobile","enable","enableSeconds","enableTime","givenDate","week1","hourIncrement","ignoredFocusElements","inline","minuteIncrement","nextArrow","onChange","onClose","onDayCreate","onDestroy","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","positionElement","prevArrow","shorthandCurrentMonth","showMonths","static","time_24hr","weekNumbers","toggleClass","elem","content","textContent","clearNode","createNumberInput","inputClassName","numInput","arrowUp","arrowDown","_len","_key","_loop","_i","DEBOUNCED_CHANGE_MS","FlatpickrInstance","instanceConfig","flatpickr","defaultConfig","bindToInstance","setCalendarWidth","requestAnimationFrame","calendarContainer","visibility","daysContainer","daysWidth","days","offsetWidth","weekWrapper","removeProperty","updateTime","selectedDates","isKeyDown","getAttribute","curValue","which","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","abs","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","hours","secondElement","ampm2military","limitMinHours","minTime","minDate","minDateHasTime","latestSelectedDateObj","limitMaxHours","maxTime","maxDate","maxDateHasTime","setHoursFromDate","setDefaultHours","min_hr","min_minutes","max_hr","max_minutes","isMobile","onYearInput","changeYear","ev","_handlers","evt","triggerChange","triggerEvent","bindEvents","inputType","mobileInput","tabIndex","disabled","required","mobileFormatStr","parentNode","insertBefore","nextSibling","_a","setupMobile","debouncedResize","onResize","onMouseOver","ontouchstart","documentClick","capture","monthNav","onMonthNavClick","selectDate","timeContainer","timeIncrement","jumpToDate","jumpDate","jumpTo","currentYear","currentMonth","redraw","inputElem","createEvent","build","fragment","createDocumentFragment","yearElements","monthElements","prevMonthNav","nextMonthNav","buildMonths","__hidePrevMonthArrow","__hideNextMonthArrow","currentYearElement","updateNavigationCurrentMonth","innerContainer","_buildWeeks","buildWeeks","rContainer","buildWeekdays","buildDays","hourInput","getElementsByTagName","minuteInput","military2ampm","secondInput","title","buildTime","customAppend","appendTo","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","$i","todayDateElem","isDateSelected","selectedDateElem","isDateInRange","insertAdjacentHTML","focusOnDayElem","targetNode","getFirstAvailableDay","startMonth","endMonth","startIndex","endIndex","focusOnDay","dayFocused","isInView","activeElement","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","prevMonthDays","utils","getDaysInMonth","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","frag","buildMonth","monthNavFragment","monthElement","yearInput","tabindex","yearElement","weekdayContainer","updateWeekdays","is_offset","_hidePrevMonthArrow","_hideNextMonthArrow","isCalendarElem","isOpen","isCalendarElement","isInput","lostFocus","relatedTarget","isIgnored","close","newYear","newYearNum","isNewYear","dateToCheck","parsed","to","allowKeydown","allowInlineKeydown","blur","isTimeObj","focusAndClose","_delta","elems","hoverDate","initialDate","rangeStartDate","rangeEndDate","lastDate","lastChild","containsDisabled","minRange","maxRange","prevMonth","dayElem","timestamp","outOfRange","positionCalendar","minMaxDateSetter","inverseDateObj","setupLocale","l10ns","customPositionElement","_positionElement","calendarHeight","acc","offsetHeight","calendarWidth","configPos","configPosVertical","configPosHorizontal","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","showOnTop","pageYOffset","pageXOffset","rightMost","msMaxTouchPoints","findParent","condition","selectedDate","shouldChangeMonth","selectedIndex","showTimeInput","single","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","_createElement","destroy","_type","click","wasOpen","option","CALLBACKS","setSelectedDate","toggle","inputDate","dates","parseDateRules","rule","hooks","initEvent","getDateStr","dObj","isPrevMonth","isNextMonth","boolOpts","userConfig","dataset","formats$$1","timeMode","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","hook","pluginConf","parseConfig","nodeName","preloadedDate","defaultDate","_showTimeInput","setupDates","yr","isSafari","_flatpickr","nodeList","instances","HTMLCollection","NodeList","selector","en","localize","setDefaults","jQuery","fp_incr","NO_OP","ERROR_MSG","isBrowser","isStringOrNumber","isNullOrUndef","isInvalid","isTrue","combineFrom","second","out","key$1","keyPrefix","getVNode","childFlags","flags","ref","dom","parentVNode","createVNode","childFlag","vNode","normalizeChildren","createComponentVNode","defaultProps","defaultHooks","prop$1","optsVNode","createTextVNode","normalizeProps","directClone","vNodeToClone","newVNode","propsToClone","createVoidVNode","_normalizeVNodes","currentKey","newKey","oldKey","isPrefixedKey","newChildren","newChildFlags","isFrozen","isNullDom","isNullKey","isPrefixed","$","afterRender","beforeRender","renderComplete","xlinkNS","xmlNS","svgNS","namespaces","xlink:actuate","xlink:arcrole","xlink:href","xlink:role","xlink:show","xlink:title","xlink:type","xml:base","xml:lang","xml:space","EMPTY_OBJ","LIFECYCLE","parentDom","insertOrAppend","newNode","nextNode","replaceChild","newDom","lastDom","callAll","arrayFn","attachedEventCounts","attachedEvents","handleEvent","nextEvent","eventsLeft","eventsObject","$EV","docEvent","isClick","button","eventData","currentEvent","cancelBubble","dispatchEvents","normalizeEventName","attachEventToDocument","immediatePropagationStopped","stopImmediatePropagation","isSameInnerHTML","tempdom","triggerEventListener","nativeListenerName","createWrappedFunction","applyValue","fnMethod","$V","newProps","isCheckedType","onTextInputChange","applyValueInput","wrappedOnChange","emptywrapper","nextPropsOrEmpty","hasValue","updateChildOptionGroup","updateChildOption","onSelectChange","applyValueSelect","mounting","multiplePropInBoolean","onTextareaInputChange","applyValueTextArea","wrappedOnChange$1","domValue","processElement","isControlled","addFormElementEventHandlers","onchange","onclick","oninput","inputEvents","selectEvents","textAreaEvents","isControlledFormElement","unmount","unmountAllChildren","children$1","ref$1","componentWillUnmount","$UN","$LI","onComponentWillUnmount","removeAllChildren","getNumberStyleValue","patchProp","lastValue","nextValue","isSVG","hasControlledValue","lastVNode","autofocus","lastHtml","__html","nextHtml","nameLowerCase","domEvent","linkEvent","createLinkEvent","patchEvent","lastAttrValue","nextAttrValue","domStyle","cssText","patchStyle","setAttributeNS","mountProps","isFormElement","createClassComponentInstance","Component","$BS","componentWillMount","$BR","$PSS","pending","$PS","childContext","handleComponentInput","getChildContext","$CX","componentVNode","mount","mountElement","isClass","mountClassComponentCallbacks","$UPD","mountFunctionalComponentCallbacks","mountComponent","mountText","createElementNS","documentCreateElement","childrenIsSVG","mountArrayChildren","mountRef","componentDidMount","createClassMountCallback","onComponentWillMount","onComponentDidMount","createOnMountCallback","hydrateElement","tagName","childNode","hydrateVNode","dangerouslySetInnerHTML","isSamePropsInnerHTML","input$1","hydrateComponent","nodeValue","hydrateText","throwError","replaceWithNewNode","lastNode","patch","nextVNode","nextFlags","nextTag","lastProps","nextProps","lastPropsOrEmpty","lastChildren","nextChildren","nextRef","lastClassName","nextClassName","patchChildren","patchElement","lastKey","nextKey","updateClassComponent","shouldUpdate","nextHooks","nextHooksDefined","lastInput","onComponentShouldUpdate","onComponentWillUpdate","nextInput","onComponentDidUpdate","patchComponent","nextText","patchText","lastContainer","nextContainer","patchPortal","lastChildFlags","nextChildFlags","parentDOM","lastLength","nextLength","aLength","bLength","nextPos","aEnd","bEnd","aNode","bNode","aStart","bStart","aLeft","bLeft","canRemoveWholeContent","moved","pos","patched","keyIndex","seq","u","arrI","lis_algorithm","patchKeyedChildren","lastChildrenLength","nextChildrenLength","nextChild","commonLength","patchNonKeyedChildren","nextState","fromSetState","renderOutput","lastState","componentWillReceiveProps","hasSCU","shouldComponentUpdate","componentWillUpdate","didUpdate","componentDidUpdate","rootInput","hydrate","resolvedPromise","fallbackMethod","queueStateChanges","component","newState","stateKey","$QU","applyState","promiseCallback","pendingState","prevState","forceUpdate","nextContext","freeze","ENTER","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","_extends","Checkbox","_Component","toggleCheck","classlist","nodeAttrs","classNames","customClasses","class","EditToolbar","toggleEditing","buttons","EmptyList","stateComparator","previousState","currentState","isDirty","EditForm","getStateFromNodes","originalText","newText","onInput","onKeyPress","keypress","onsubmit","NodeAnchor","_props","disableDeselection","clearSelection","lastSelectedNode","selectBetween","boundingNodes","enableDeselection","_props2","_props3","toggleCollapse","isDragDropEnabled","isMouseHeld","unselectable","folder","expanded","hasOrWillHaveChildren","data-uid","onBlur","onDblClick","dblclick","onFocus","onMouseDown","mousedown","ToggleAnchor","ListItem","stateFromNode","getClassNames","dragAndDrop","onDragEnd","onDragEnter","onDragLeave","onDragStart","onDragOver","onDrop","clientY","targetRect","yThresholdForAbove","yThresholdForBelow","dataTransfer","effectAllowed","dropEffect","_activeDragNode","stateDeep","validateOn","validator","validate","validateCallable","recursor","valid","unhighlightTarget","dragNode","getTargetDirection","treeId","nodeId","sourceTree","inspireTree","targetIndex","List","hasLoadedChildren","renderEditToolbar","renderToggle","renderCheckbox","renderChildren","getAttributes","deferredRendering","renderNodes","isDeferred","renderLoadingTextNode","renderLoadMoreNode","Tree","renderAddLink","InspireDOM","dropTargets","$scrollLayer","dndDefaults","autoLoadMore","nodeHeight","attach","initialRender","scrollSelectedIntoView","$target","getElement","getScrollableAncestor","keyboardListener","scrollListener","empty","getSelection","removeAllRanges","$element","Element","getComputedStyle","overflow","focusedNodes","moveFocusDownFrom","toggleSelect","moveFocusUpFrom","startingNode","previousVisibleNode","getTreeById","rendering","links","overlap","$parent","$selected","scrollTop","offsetTop","descriptors","automat","injectStylesheetTemplate","optionalArgsStartAt","stylesheet","refNode","css","append","replacements","hasReplacements","replacersRegex","encodersRegex","htmlEncoderNode","elOmitted","referenceNode","replacementsStartAt","childNodes","firstElement","log","regexIsMethod","dotProps","since","notes","memberType","warning","$$DEPRECATION_WARNED","isSimpleWarning","isMethodCall","warnings","formalArgList","argList","mapToFormalArg","argName","linkIsMethodCall","actualArgList","actualArgs","bubbles","initCustomEvent","Event","paintRequest","resizeInterval","RESIZE_POLLING_INTERVAL","paintables","resizables","makeCharMap","dragEndtime","infoDiv","getCachedContext","bc","outline","mouseLocation","dragstart","hasMouse","isDragging","finmousemove","finmouseup","finwheelmoved","finkeydown","finkeyup","onmouseover","finfocusgained","finfocuslost","finmousedown","finmouseout","finclick","findblclick","fincontextmenu","beginResizing","beginPainting","paintLoopFunction","paintable","tickPainter","restartPaintLoop","resizablesLoopFunction","tickResizer","restartResizeLoop","setInterval","canvasElement","getContext","makeStub","conditionalsStack","graphicsContextAliases","alias","focuser","dragging","repeatKeyCount","repeatKey","repeatKeyStartTime","currentKeys","dragEndTime","lastRepaintTime","currentPaintCount","currentFPS","lastFPSComputeTime","stopPaintLoop","cancelAnimationFrame","stopResizeLoop","clearInterval","stopPainting","stopResizing","getCurrentFPS","tickPaint","isContinuousRepaint","fps","interval","getDivBoundingClientRect","sizeNow","box","ratio","isHIDPI","scale","resizeNotification","dispatchNewEvent","flushBuffer","drawImage","dispatchNewMouseKeysEvent","beDragging","isRightClick","getLocal","mouseDownLocation","beNotDragging","getCharMap","repeatCount","repeatStartTime","getMouseLocation","getOrigin","clientX","disableDocumentElementSelection","enableDocumentElementSelection","truthy","isRightMB","innerText","simpleText","API","ALPHA_REGEX","cssColorSpec","fontMetrics","ELLIPSIS","fontData","metrics","measureText","getTextWidthTruncated","abort","truncString","truncWidth","truncAt","truncating","charWidth","block","verticalAlign","blockRect","textRect","ascent","conditional","clip","layerProps","paintCellsFunctions","scrollHeight","insertionBounds","gridRenderers","paintCellsFunction","registerGridRenderer","paintCells","blackList","rebundleGridRenderers","lastKnowRowCount","needsComputeCellsBounds","renderGrid","getVisibleScrollHeight","footerHeight","getColumnFromPixelX","pixelX","scrollLeft","isPseudoRow","isPseudoCol","vrs","vcs","firstColumn","fake","cellEventFromPool","findCell","mousePoint","adjust","getVisibleColumn","getMinimumLeftPositionToShowColumn","targetColIdx","fixedColumnsWidth","viewportWidth","targetRight","lastFixedColumn","rowNumbersWidth","filtersWidth","leftColIdx","computedCols","col","isDataColumnVisible","getVisibleDataColumn","getFinalVisibleColumnBoundary","chop","isLastColumnVisible","colWall","isRowVisible","getVisibleRow","getVisibleDataRow","newWidth","cellProperties","rowHeader","handleColumnWidth","fetchData","dw","dataWindow","fetchSubregions","orderedColumnIndexes","intComparator","xMin","fetchError","renderOverrides","renderLastSelection","sm","getLastSelectionType","columnSelections","columnSelectionModel","lastColumnSelection","rowSelections","rowSelectionModel","lastRowSelection","getLastSelection","vci","visibleColumnsByIndex","vri","visibleRowsByDataRowIndex","lastScrollableColumn","lastScrollableRow","firstScrollableColumn","firstScrollableRow","vcOrigin","vrOrigin","vcCorner","vrCorner","override","renderOverride","hdpiRatio","hdpiratio","startX","targetCTX","imgData","getImageData","putImageData","getScrollTop","getScrollLeft","lastColumnIndex","getPageUpRow","scanHeight","getPageDownRow","edgeWidth","gap","C1","R1","borderBox","lastHeaderRow","firstDataRow","userDataAreaTop","lineTop","isHandleColumn","isTreeColumn","isColumnSelected","isRowSelected","isCellSelected","isHeaderRow","isFilterRow","isRowHandleOrHierarchyColumn","isUserDataArea","assignProps","isCellSelectedInRow","isCellSelectedInColumn","allRowsSelected","areAllRowsSelected","isCellHovered","isInCurrentSelectionRectangle","mouseDownState","subrows","cellRenderer","getCell","snapshot","minWidth","subrenderer","clickRect","colIndexOrCellEvent","resetCellPropertiesCache","xOrCellEvent","_cellOwnProperties","vcEd","xEd","vrEd","yEd","sgEd","isSubgridEd","base","fixedWidthV","fixedGapV","fixedOverlapV","fixedWidthH","fixedGapH","fixedOverlapH","scrollableSubgrid","vx","vy","firstVX","lastVX","firstVY","lastVY","topR","editorCellEvent","insertionBoundsCursor","previousInsertionBoundsCursorValue","lineWidthV","lineGapV","lineWidthH","lineGapH","numOfInternalCols","fixedColumnIndex","fixedRowIndex","_bounds","previousLength","calendar","down-rectangle","filter-off","filter-on","up-down-spin","up-down","propClassGet","cellOwnProperties","rowOwnProperties","assignments","propLayers","paintCellsAsNeeded","paintCellsByColumns","paintCellsByColumnsDiscrete","paintCellsByRows","drawLines","selections","flattenedX","flattenedY","lastSelectionType","setLastSelectionType","ex","ey","newSelection","firstSelectedCell","lastSelectedCell","selectionChanged","keepRowSelections","setAllRowsSelected","clearMostRecentColumnSelection","clearMostRecentRowSelection","clearRowSelection","hasSelections","hasRowSelections","hasColumnSelections","_isCellSelected","rectangleContains","isRectangleSelected","selectColumn","x1","selectAllRows","isIt","selectRow","y1","deselectColumn","deselectRow","headerRows","isColumnOrRowSelected","getFlattenedYs","ti","selectRowsFromCells","selectColumnsFromCells","toFunction","columnSchema","treeHeader","forColumnName","REGEX_NAMED_FUNC","REGEX_ANON_FUNC","REGEX_ARROW_FUNC","columnAutosized","getCellType","typeOf","getType","computeColumnType","eachType","something","_properties","createColumnProperties","setBackgroundColor","editorName","getCellPropertiesObject","newCellPropertiesObject","filterProperties","getCellProperties","setCellProperties","addCellProperties","deleteCellOwnProperties","getCellProperty","setCellProperty","deleteCellProperty","tableState","rowHeaderDescriptors","treeHeaderDescriptors","columnHeader","columnHeaderDescriptors","filterDescriptors","cellEventProperties","formattedValue","cp","_columnProperties","getRowProperty","resetGridCY","gridC","gridY","resetGridXY","gridX","resetDataXY","dataX","dataY","resetGridXDataY","useAllCells","editPoint","mousePointInClickRect","isDataCell","isRowFixed","isColumnFixed","isCellFixed","isHandleCell","isHeader","isHeaderHandle","isHeaderCell","isFilterHandle","isFilterCell","isSummaryRow","isSummary","isSummaryHandle","isSummaryCell","isTopTotalsRow","topTotals","isTopTotalsHandle","isTopTotalsCell","isBottomTotalsRow","bottomTotals","isBottomTotalsHandle","isBottomTotalsCell","WritablePoint","writableDescriptor","enumerableDescriptor","Decorator","REGEXP_META_PREFIX","headerifierName","decorator","getFieldNames","fieldName","titleize","Features","CellClick","CellEditing","CellSelection","ColumnMoving","ColumnResizing","ColumnSelection","ColumnSorting","Filters","KeyPaging","OnHover","RowSelection","ThumbwheelScrolling","isActionableLink","openLink","linkProp","isVisibleChar","isDeleteChar","getGridCellFromLastSelection","shaker","computedStyle","transitions","transition","dx","shakes","propertyName","defaultGlowerStyles","background-color","box-shadow","glower","styleWas","undo","was","currentDrag","lastDragCell","sbLastAuto","sbAutoStart","dy","dCell","extendSelection","checkDragScroll","handleMouseDragCellSelection","previousDragExtent","newX","newY","isScrollingNow","setScrollingNow","scrollDrag","dragStartedInHeaderArea","xOffset","yOffset","numFixedColumns","numFixedRows","dragEndInFixedAreaX","dragEndInFixedAreaY","dragCellOffsetX","dragCellOffsetY","hasCTRL","hasSHIFT","clearSelections","handleDOWNSHIFT","moveShiftSelect","handleUPSHIFT","handleLEFTSHIFT","handleRIGHTSHIFT","handleDOWN","getAutoScrollAcceleration","handleUP","handleLEFT","handleRIGHT","elapsed","getAutoScrollDuration","setAutoScrollStartTime","pingAutoScroll","extendSelect","draggerCTX","floatColumn","floatColumnCTX","GRAB","GRABBING","setName","floaterAnimationQueue","columnDragAutoScrollingRight","columnDragAutoScrollingLeft","dragArmed","dragCol","dragOffset","isFloatingNow","initializeAnimationSupport","createDragColumn","dragColumn","endDragColumn","floatColumnTo","draggedToTheRight","floatingNow","draggerStartX","floaterStartX","floaterIndex","floater","draggerIndex","draggerWidth","floaterWidth","doffset","foffset","doColumnMoveAnimation","doFloaterAnimation","setCrossBrowserProperty","columnAnimationTime","animation","createFloatColumn","colHeight","location","boxShadow","borderTop","zIndex","uProperty","setProp","opacity","autoScrollingNow","dragColumnIndex","atMin","atMax","overCol","doAFloat","checkAutoScrollToLeft","checkAutoScrollToRight","_checkAutoScrollToRight","draggedIndex","_checkAutoScrollToLeft","dragStart","dragStartWidth","getMouseValue","overAreaDivider","leftMostColumnIndex","getCursorName","dragWidth","nextColumn","nextStartWidth","nextWidth","gridColumnIndex","lastDragColumn","doubleClickTimer","isColumnDragging","mouseX","toggleSelectColumn","maxViewableColumns","maxColumns","fireSyntheticColumnSortEvent","moveLaterally","moveDown","originX","selectViewportCell","commands","PAGEDOWN","pageDown","PAGEUP","pageUp","PAGELEFT","pageLeft","PAGERIGHT","pageRight","moveCellSelection","fireSyntheticRowSelectionChangedEvent","leftClick","rowNumberClick","fireSyntheticRowHeaderClickedEvent","rowSelectable","toggleSelectAllRows","lastDragRow","mouseY","toggleSelectRow","mouseCorner","lastSelection","firstOffsetY","scrollToMakeVisible","isSingleRowSelection","primEvent","wheelDeltaX","wheelDeltaY","dataModels","derefSubgridRef","subgridSpecs","_subgrids","createSubgrid","decorateDataModel","gotData","DataModels","HeaderSubgrid","nextDataSource","DefaultDataModel","decorators","dispatchDataModelEvent","Local","dataModelEventHandlers","dataRowProxy","$y$","$rowProxy$","getNewDataModel","newDataModel","addDeprecationWarnings","addFriendlierDrillDownMapKeys","injectPolyfills","injectCode","injectDefaulthooks","setMetadataStore","toggleRow","fallbacks","polyfills","friendlierDrillDownMapKeys","dataSource","friendlierKey","isTreeCol","metadataFieldName","getRowIndex","getMetadataStore","newMetadataStore","REGEX_DATA_EVENT_STRING","nativeHandler","dispatched","warnedBaseClass","CellRenderers","emptycell","WHITESPACE","SimpleCell","textColor","textFont","ixoffset","iyoffset","leftPadding","rightPadding","hover","hoverColor","selectColor","foundationColor","inheritsBackgroundColor","colors","partialRender","same","valWidth","naturalWidth","renderValue","layerColors","cleanVal","lines","findLines","stillFits","line","renderSingleLineText","halignOffset","valignOffset","textHeight","vMin","renderMultiLineText","hotIcon","rightX","cellBorderThickness","cellBorderStyle","thickness","textWidth","underline","Slider","bgColor","btnGradient","arc","PI","SparkBar","eWidth","fgColor","barheight","LastSelection","visOverlay","visOutline","SparkLine","ErrorCell","Tag","tagbands","tagband","TreeCell","indent","CellEditors","Color","isChromium","chrome","winNav","vendorName","vendor","isOpera","isIEedge","isChrome","lastCharPlusOne","Spinner","cssInjector","FinBar","bound","_bound","handlersToBeBound","thumb","shortStop","onmouseout","bar","paging","orientation","_min","_index","_max","validRange","contentSize","cssFinBars","cssStylesheetReferenceElement","_orientation","oh","orientationHashes","deltaProp","classPrefix","_classPrefix","increment","deltaZFactor","barStyles","objn","_auxStyles","barRect","containerRect","parentElement","oriented","axis","margins","marginLeading","marginTrailing","_setScroll","scaled","testPanelItem","_thumbMax","scrollRealContent","sizeProp","maxScroll","scroll","containerSize","_addTestPanelItem","_setThumbSize","onwheel","shortenBy","otherFinBar","shortenEndBy","foreshortenBy","whichEnd","otherStyle","ooh","thumbComp","thumbMarginLeading","thumbMargins","barSize","thumbSize","_thumbMarginLeading","_removeEvt","transitionend","testPanelElement","testPanelItemPartNames","partName","getElementsByClassName","_addEvt","evtName","spy","thumbBox","goingUp","coordinate","waitForIt","onmouseup","pinOffset","documentElement","onmousemove","vertical","outside","inside","horizontal","cssRules","ID","referenceElement","idPrefix","styleSheet","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","mustache","hasProperty","regExpTest","nonSpaceRe","isWhitespace","re","testRegExp","entityMap","/","`","=","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","Scanner","Context","parentContext",".","Writer","eos","scan","scanUntil","lookupHit","clearCache","tags","tokens","openingTagRe","closingTagRe","closingCurlyRe","sections","spaces","hasTag","nonSpace","stripSpace","compileTags","tagsToCompile","openSection","scanner","valueLength","nestedTokens","collector","numTokens","nestTokens","lastToken","squashedTokens","squashTokens","parseTemplate","renderTokens","originalTemplate","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","defaultWriter","typeStr","to_html","send","internal","info","addInternalEventListener","listenerList","inputControl","keyEvent","selectionDetailGetters","fireSyntheticColumnSelectionChangedEvent","fireSyntheticContextMenuEvent","selectionDetailGetterDescriptors","fireSyntheticMouseUpEvent","fireSyntheticMouseDownEvent","fireSyntheticMouseMoveEvent","fireSyntheticButtonPressedEvent","subheight","fireSyntheticKeydownEvent","fireSyntheticKeyupEvent","fireSyntheticFilterAppliedEvent","fireSyntheticClickEvent","fireSyntheticDoubleClickEvent","fireSyntheticGridResizedEvent","fireScrollEvent","control","handleMouseEvent","cb","decoratedEvent","mouseEvent","delegateMouseMove","delegateMouseDown","delegateClick","columnDragAutoScrolling","delegateMouseUp","delegateDoubleClick","delegateMouseDrag","delegateKeyUp","delegateWheelMoved","delegateMouseExit","delegateContextMenu","mouseDetails","SelectionRectangle","hiddenColumns","normalizeRect","cx","cy","valOrFunc","getSelectionModel","getSelectionMatrix","getMatrixSelectionAsTSV","getRowSelectionMatrix","getColumnSelectionMatrix","lastCol","whiteSpaceDelimiterForRow","getRowSelection","selectedRowIndexes","selectedRowIndex","selectedColumnIndexes","selectedColumnIndex","getColumnSelection","rects","selectionRect","colCount","selectCell","alreadySelected","singleSelect","selectToViewportCell","selectToFinalCellOfCurrentRow","selectFinalCellOfCurrentRow","selectToFirstCellOfCurrentRow","selectFirstCellOfCurrentRow","setHScrollValue","selectFinalCell","selectCellAndScrollToMakeVisible","selectToFinalCell","getSelectedRow","topRow","moveToSingleSelect","maxViewableRows","colScrolled","rowScrolled","sel","selectedDataRowIndexes","dataRowIndexes","selectedRowCount","gridRowIndexes","gridRowIndex","selectedColumnNames","sourceColumnNames","reselectedCount","activeColumnIndex","isItNow","scrollHBy","scrollVBy","setVScrollValue","oldY","oldX","horzBar","vertBar","up","down","hPrefix","vPrefix","resizeScrollbars","setVScrollbarValues","setHScrollbarValues","scrollableWidth","lineGap","columnsWidth","lastPageColumnCount","scrollableHeight","rowsHeight","lastPageRowCount","hMax","vMax","rowNum","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","browser","env","argv","versions","cwd","chdir","umask","Queueless","transitioning","transEvent","TOGGLE_MODE_PREFIX","stateToActionMap","selectionStart","selectionEnd","dropdown","dropDownTopMargin","getFloat","dropDownRows","optionHeight","slideUpBound","slideUp","optionsTransition","setModeIconAndOptgroup","optgroup","modes","appendOptions","label","controllable","mustBeChildren","ComboBox","dropper","menuModesSource","menuModes","schemaOptions","toggleDropDown","insertText","distinct","Option","built","modeName","tooltip","that","datas","loaddata","InspireTreeDOM","isLoadEvent","excel","topLeftBackgroundColor","fontFamily","topLeftColor","fixedColumnBackgroundSelectionColor","parent_id","opt","ukey","pkey","toCKey","toTreeData","TG_EDITABLE_GRID","_classCallCheck","displayFieldFormat","Datetime","newField","caption","xtype","code_name","onEditorLoadData"],"mappings":"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","file":"./tg-editable-grid.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tg-editable-grid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tg-editable-grid\"] = factory();\n\telse\n\t\troot[\"tg-editable-grid\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 111);\n","'use strict';\n\nvar Base = require('../Base');\n\n/**\n * Instances of features are connected to one another to make a chain of responsibility for handling all the input to the hypergrid.\n * @constructor\n */\nvar Feature = Base.extend('Feature', {\n\n    /**\n     * the next feature to be given a chance to handle incoming events\n     * @type {Feature}\n     * @default null\n     * @memberOf Feature.prototype\n     */\n    next: null,\n\n    /**\n     * a temporary holding field for my next feature when I'm in a disconnected state\n     * @type {Feature}\n     * @default null\n     * @memberOf Feature.prototype\n     */\n    detached: null,\n\n    /**\n     * the cursor I want to be displayed\n     * @type {string}\n     * @default null\n     * @memberOf Feature.prototype\n     */\n    cursor: null,\n\n    /**\n     * the cell location where the cursor is currently\n     * @type {Point}\n     * @default null\n     * @memberOf Feature.prototype\n     */\n    currentHoverCell: null,\n\n    /**\n     * @memberOf Feature.prototype\n     * @desc set my next field, or if it's populated delegate to the feature in my next field\n     * @param {Feature} nextFeature - this is how we build the chain of responsibility\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    setNext: function(nextFeature) {\n        if (this.next) {\n            this.next.setNext(nextFeature);\n        } else {\n            this.next = nextFeature;\n            this.detached = nextFeature;\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @desc disconnect my child\n     */\n    detachChain: function() {\n        this.next = null;\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @desc reattach my child from the detached reference\n     */\n    attachChain: function() {\n        this.next = this.detached;\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @desc handle mouse move down the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleMouseMove: function(grid, event) {\n        if (this.next) {\n            this.next.handleMouseMove(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleMouseExit: function(grid, event) {\n        if (this.next) {\n            this.next.handleMouseExit(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleMouseEnter: function(grid, event) {\n        if (this.next) {\n            this.next.handleMouseEnter(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleMouseDown: function(grid, event) {\n        if (this.next) {\n            this.next.handleMouseDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleMouseUp: function(grid, event) {\n        if (this.next) {\n            this.next.handleMouseUp(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleKeyDown: function(grid, event) {\n        if (this.next) {\n            this.next.handleKeyDown(grid, event);\n        } else {\n            return true;\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleKeyUp: function(grid, event) {\n        if (this.next) {\n            this.next.handleKeyUp(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleWheelMoved: function(grid, event) {\n        if (this.next) {\n            this.next.handleWheelMoved(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleDoubleClick: function(grid, event) {\n        if (this.next) {\n            this.next.handleDoubleClick(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleClick: function(grid, event) {\n        if (this.next) {\n            this.next.handleClick(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleMouseDrag: function(grid, event) {\n        if (this.next) {\n            this.next.handleMouseDrag(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    handleContextMenu: function(grid, event) {\n        if (this.next) {\n            this.next.handleContextMenu(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @desc toggle the column picker\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    moveSingleSelect: function(grid, x, y) {\n        if (this.next) {\n            this.next.moveSingleSelect(grid, x, y);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    isFirstFixedRow: function(grid, event) {\n        return event.gridCell.y < 1;\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    isFirstFixedColumn: function(grid, event) {\n        return event.gridCell.x === 0;\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    setCursor: function(grid) {\n        if (this.next) {\n            this.next.setCursor(grid);\n        }\n        if (this.cursor) {\n            grid.beCursor(this.cursor);\n        }\n    },\n\n    /**\n     * @memberOf Feature.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @private\n     * @comment Not really private but was cluttering up all the feature doc pages.\n     */\n    initializeOn: function(grid) {\n        if (this.next) {\n            this.next.initializeOn(grid);\n        }\n    }\n\n});\n\n\nmodule.exports = Feature;\n","'use strict';\n\nvar CellEditor = require('./CellEditor');\nvar Localization = require('../lib/Localization');\n\n\n/**\n * As of spring 2016:\n * Functions well in Chrome, Safari, Firefox, and Internet Explorer.\n * @constructor\n * @extends CellEditor\n */\nvar Textfield = CellEditor.extend('Textfield', {\n\n    template: '<input type=\"text\" lang=\"{{locale}}\" class=\"hypergrid-textfield\" style=\"{{style}}\">',\n\n    initialize: function() {\n        this.input.style.textAlign = this.event.properties.halign;\n        this.input.style.font = this.event.properties.font;\n    },\n\n    localizer: Localization.prototype.string,\n\n    selectAll: function() {\n        this.input.setSelectionRange(0, this.input.value.length);\n    }\n});\n\nmodule.exports = Textfield;\n","'use strict';\n\n/** @typedef {object} CellRenderer#renderConfig\n *\n * This is the renderer config object, which is:\n * 1. First passed to a {@link DataModel#getCell getCell} method implementation, which may override (most of) its values before returning.\n * 2. Then passed to the specified cell renderers' {@link CellRenderer#paint paint} function for rendering.\n *\n * #### Standard Properties\n *\n * On each render of every visible cell, this a fresh instance of an object created from (whose prototype is) a properties object as defined by layer-props.js. It therefore has all the standard properties defined in {@link module:defaults}.\n *\n * #### Additional Properties\n *\n * In addition, the config object has the following additional properties.\n *\n * Properties marked **_read-only_** may in fact be writable, but should be considered **off limits** to overriding. Do not attempt to change these properties inside a {@link DataModel#getCell getCell} method override.\n *\n * Properties marked **_write-only_** are to be defined the cell renderer for use by the caller (the grid renderer).\n *\n * @property {boolean} config.allRowsSelected\n *\n * @property {BoundingRect} config.bounds - Bounding rect of the cell or subcell to be rendered.\n *\n * @property {object} [config.clickRect] - **_Write-only._** The Cell renderer may return in this property a subrect in the cell's local coordinates that represents a click region. If defined by the cell renderer, the CellClick feature will ignore clicks outside the click region. If not defined by the cell renderer, the entire cell is clickable.\n *\n * @property {dataCellCoords} config.dataCell - **_Read-only._** Data coordinates of the cell.\n *\n * @property {dataRowObject} config.dataRow - Access to other column values in the same row.\n *\n * @property {function} config.formatValue - _For cell renderer use only. Not available in `getCell` override._ The cell's value formatter function (based on the formatter name in `config.format`, as possibly mutated by `getCell`).\n *\n * @property {gridCellCoords} config.gridCell - **_Read-only._** Grid coordinates of the cell.\n *\n * @property {string} config.halign - The cell's horizontal alignment property, as interpreted by it's cell renderer.\n *\n * @property {boolean} config.isCellHovered -\n *\n * @property {boolean} config.isCellSelected -\n *\n * @property {boolean} config.isColumnHovered -\n *\n * @property {boolean} config.isColumnSelected -\n *\n * @property {boolean} config.isDataColumn -\n *\n * @property {boolean} config.isDataRow -\n *\n * @property {boolean} config.isFilterRow -\n *\n * @property {boolean} config.isHandleColumn -\n *\n * @property {boolean} config.isHeaderRow -\n *\n * @property {boolean} config.isInCurrentSelectionRectangle -\n *\n * @property {boolean} config.isRowHovered -\n *\n * @property {boolean} config.isRowSelected -\n *\n * @property {boolean} config.isSelected -\n *\n * @property {boolean} config.isTreeColumn -\n *\n * @property {boolean} config.isUserDataArea -\n *\n * @property {number} config.minWidth - **_Write-only._** The Cell renderer should return the pixel width of the rendered contents in this property.\n *\n * @property {boolean} config.mouseDown - The last mousedown event occurred over this cell and the mouse is still down. Note, however, that the mouse may no longer be hovering over this cell when it has been dragged away.\n *\n * @property {} [config.prefillColor] - **_Write-only._** This is the color _already painted_ by the grid renderer behind the cell to be rendered. If the cell's specified background color is the same, renderer may (and should!) skip painting it. If `undefined`, this signals a \"partial render\"; cell renderers that support partial rendering can use `config.snapshot` to determine whether or not to rerender the cell.\n *\n * @property {object} [config.snapshot] - **_Write-only._** Supports _partial render._ In support of the {@link Renderer#paintCellsAsNeeded by-cells} \"partial\" grid renderer, cell renderers can save the essential render parameters in this property so that on subsequent calls, when the parameters are the same, cell renderers can skip the actual rendering. Only when the parameters have changed is the cell rendered and this property reset (with the new parameters). This object would typically include at the very least the (formatted) `value`, plus additional properties as needed to fully describe the appearance of the render, such as color, _etc._ This property is undefined the first time a cell is rendered by the `by-cells` grid renderer. See also the {@link DataModel#configObject}'s `prefillColor` property.\n *\n * @property config.value - Value to be rendered.\n *\n * The renderer has available to it the `.formatValue()` function for formatting the value. The function comes from the localizer named in the `.format` property. If there is no localizer with that name, the function defaults to the `string` localizer's formatter (which simply invokes the value's `toString()` method).\n *\n * Typically a Local primitive value, values can be any type, including objects and arrays. The specified cell renderer is expected to know how to determine the value's type and render it.\n */\n\nvar Base = require('../Base');\n\n/** @constructor\n * @desc Instances of `CellRenderer` are used to render the 2D graphics context within the bound of a cell.\n *\n * Extend this base class to implement your own cell renderer.\n *\n * @tutorial cell-renderer\n */\nvar CellRenderer = Base.extend('CellRenderer', {\n    /**\n     * @desc An empty implementation of a cell renderer, see [the null object pattern](http://c2.com/cgi/wiki?NullObject).\n     *\n     * @this {CellEditor}\n     *\n     * @param {CanvasRenderingContext2D} gc\n     *\n     * @param {CellRenderer#renderConfig} config\n     *\n     * @returns {number} Preferred pixel width of content. The content may or may not be rendered at that width depending on whether or not `config.bounds` was respected and whether or not the grid renderer is using clipping. (Clipping is generally not used due to poor performance.)\n     *\n     * @memberOf CellRenderer.prototype\n     */\n    paint: function(gc, config) {},\n\n    /**\n     * @desc A simple implementation of rounding a cell.\n     * @param {CanvasRenderingContext2D} gc\n     * @param {number} x - the x grid coordinate of my origin\n     * @param {number} y - the y grid coordinate of my origin\n     * @param {number} width - the width I'm allowed to draw within\n     * @param {number} height - the height I'm allowed to draw within\n     * @param {number} radius\n     * @param {number} fill\n     * @param {number} stroke\n     * @memberOf CellRenderer.prototype\n     */\n    roundRect: function(gc, x, y, width, height, radius, fill, stroke) {\n\n        if (!stroke) {\n            stroke = true;\n        }\n        if (!radius) {\n            radius = 5;\n        }\n        gc.beginPath();\n        gc.moveTo(x + radius, y);\n        gc.lineTo(x + width - radius, y);\n        gc.quadraticCurveTo(x + width, y, x + width, y + radius);\n        gc.lineTo(x + width, y + height - radius);\n        gc.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        gc.lineTo(x + radius, y + height);\n        gc.quadraticCurveTo(x, y + height, x, y + height - radius);\n        gc.lineTo(x, y + radius);\n        gc.quadraticCurveTo(x, y, x + radius, y);\n        gc.closePath();\n        if (stroke) {\n            gc.stroke();\n        }\n        if (fill) {\n            gc.fill();\n        }\n        gc.closePath();\n    }\n});\n\nmodule.exports = CellRenderer;\n","'use strict';\n\n/* eslint-env node, browser */\n\n/**\n * Creates a new read-only property and attaches it to the provided context.\n * @private\n * @param {string} name - Name for new property.\n * @param {*} [value] - Value of new property.\n */\nfunction addReadOnlyProperty(name, value) {\n    Object.defineProperty(this, name, {\n        value: value,\n        writable: false,\n        enumerable: true,\n        configurable: false\n    });\n}\n\n/**\n * @constructor Point\n *\n * @desc This object represents a single point in an abstract 2-dimensional matrix.\n *\n * The unit of measure is typically pixels.\n * (If used to model computer graphics, vertical coordinates are typically measured downwards\n * from the top of the window. This convention however is not inherent in this object.)\n *\n * Note: This object should be instantiated with the `new` keyword.\n *\n * @param {number} x - the new point's `x` property\n * @param {number} y - the new point's `y` property\n */\nfunction Point(x, y) {\n\n    /**\n     * @name x\n     * @type {number}\n     * @summary This point's horizontal coordinate.\n     * @desc Created upon instantiation by the {@link Point|constructor}.\n     * @memberOf Point.prototype\n     * @abstract\n     */\n    addReadOnlyProperty.call(this, 'x', Number(x) || 0);\n\n    /**\n     * @name y\n     * @type {number}\n     * @summary This point's vertical coordinate.\n     * @desc Created upon instantiation by the {@link Point|constructor}.\n     * @memberOf Point.prototype\n     * @abstract\n     */\n    addReadOnlyProperty.call(this, 'y', Number(y) || 0);\n\n}\n\nPoint.prototype = {\n\n    /**\n     * @returns {Point} A new point which is this point's position increased by coordinates of given `offset`.\n     * @param {Point} offset - Horizontal and vertical values to add to this point's coordinates.\n     * @memberOf Point.prototype\n     */\n    plus: function(offset) {\n        return new Point(\n            this.x + offset.x,\n            this.y + offset.y\n        );\n    },\n\n    /**\n     * @returns {Point} A new point which is this point's position increased by given offsets.\n     * @param {number} [offsetX=0] - Value to add to this point's horizontal coordinate.\n     * @param {number} [offsetY=0] - Value to add to this point's horizontal coordinate.\n     * @memberOf Point.prototype\n     */\n    plusXY: function(offsetX, offsetY) {\n        return new Point(\n            this.x + (offsetX || 0),\n            this.y + (offsetY || 0)\n        );\n    },\n\n    /**\n     * @returns {Point} A new point which is this point's position decreased by coordinates of given `offset`.\n     * @param {Point} offset - Horizontal and vertical values to subtract from this point's coordinates.\n     * @memberOf Point.prototype\n     */\n    minus: function(offset) {\n        return new Point(\n            this.x - offset.x,\n            this.y - offset.y\n        );\n    },\n\n    /**\n     * @returns {Point} A new `Point` positioned to least x and least y of this point and given `offset`.\n     * @param {Point} point - A point to compare to this point.\n     * @memberOf Point.prototype\n     */\n    min: function(point) {\n        return new Point(\n            Math.min(this.x, point.x),\n            Math.min(this.y, point.y)\n        );\n    },\n\n    /**\n     * @returns {Point} A new `Point` positioned to greatest x and greatest y of this point and given `point`.\n     * @param {Point} point - A point to compare to this point.\n     * @memberOf Point.prototype\n     */\n    max: function(point) {\n        return new Point(\n            Math.max(this.x, point.x),\n            Math.max(this.y, point.y)\n        );\n    },\n\n    /**\n     * @returns {number} Distance between given `point` and this point using Pythagorean Theorem formula.\n     * @param {Point} point - A point from which to compute the distance to this point.\n     * @memberOf Point.prototype\n     */\n    distance: function(point) {\n        var deltaX = point.x - this.x,\n            deltaY = point.y - this.y;\n\n        return Math.sqrt(\n            deltaX * deltaX +\n            deltaY * deltaY\n        );\n    },\n\n    /**\n     * _(Formerly: `equal`.)_\n     * @returns {boolean} `true` iff _both_ coordinates of this point are exactly equal to those of given `point`.\n     * @param {Point} point - A point to compare to this point.\n     * @memberOf Point.prototype\n     */\n    equals: function(point) {\n        var result = false;\n\n        if (point) {\n            result =\n                this.x === point.x &&\n                this.y === point.y;\n        }\n\n        return result;\n    },\n\n    /**\n     * @returns {boolean} `true` iff _both_ coordinates of this point are greater than those of given `point`.\n     * @param {Point} point - A point to compare to this point\n     * @memberOf Point.prototype\n     */\n    greaterThan: function(point) {\n        return (\n            this.x > point.x &&\n            this.y > point.y\n        );\n    },\n\n    /**\n     * @returns {boolean} `true` iff _both_ coordinates of this point are less than those of given `point`.\n     * @param {Point} point - A point to compare to this point\n     * @memberOf Point.prototype\n     */\n    lessThan: function(point) {\n        return (\n            this.x < point.x &&\n            this.y < point.y\n        );\n    },\n\n    /**\n     * _(Formerly `greaterThanEqualTo`.)_\n     * @returns {boolean} `true` iff _both_ coordinates of this point are greater than or equal to those of given `point`.\n     * @param {Point} point - A point to compare to this point\n     * @memberOf Point.prototype\n     */\n    greaterThanOrEqualTo: function(point) {\n        return (\n            this.x >= point.x &&\n            this.y >= point.y\n        );\n    },\n\n    /**\n     * _(Formerly `lessThanEqualTo`.)_\n     * @returns {boolean} `true` iff _both_ coordinates of this point are less than or equal to those of given `point`.\n     * @param {Point} point - A point to compare to this point.\n     * @memberOf Point.prototype\n     */\n    lessThanOrEqualTo: function(point) {\n        return (\n            this.x <= point.x &&\n            this.y <= point.y\n        );\n    },\n\n    /**\n     * _(Formerly `isContainedWithinRectangle`.)_\n     * @param rect {Rectangle} - Rectangle to test this point against.\n     * @returns {boolean} `true` iff this point is within given `rect`.\n     * @memberOf Point.prototype\n     */\n    within: function(rect) {\n        var minX = rect.origin.x,\n            maxX = minX + rect.extent.x;\n        var minY = rect.origin.y,\n            maxY = minY + rect.extent.y;\n\n        if (rect.extent.x < 0) {\n            minX = maxX;\n            maxX = rect.origin.x;\n        }\n\n        if (rect.extent.y < 0) {\n            minY = maxY;\n            maxY = rect.origin.y;\n        }\n\n        return (\n            minX <= this.x && this.x < maxX &&\n            minY <= this.y && this.y < maxY\n        );\n    }\n};\n\nPoint.prototype.EQ = Point.prototype.equals;\nPoint.prototype.GT = Point.prototype.greaterThan;\nPoint.prototype.LT = Point.prototype.lessThan;\nPoint.prototype.GE = Point.prototype.greaterThanOrEqualTo;\nPoint.prototype.LE = Point.prototype.lessThanOrEqualTo;\n\n\n/**\n * @constructor Rectangle\n *\n * @desc This object represents a rectangular area within an abstract 2-dimensional matrix.\n *\n * The unit of measure is typically pixels.\n * (If used to model computer graphics, vertical coordinates are typically measured downwards\n * from the top of the window. This convention however is not inherent in this object.)\n *\n * Normally, the `x` and `y` parameters to the constructor describe the upper left corner of the rect.\n * However, negative values of `width` and `height` will be added to the given `x` and `y`. That is,\n * a negative value of the `width` parameter will extend the rect to the left of the given `x` and\n * a negative value of the `height` parameter will extend the rect above the given `y`.\n * In any case, after instantiation the following are guaranteed to always be true:\n * * The `extent`, `width`, and `height` properties _always_ give positive values.\n * * The `origin`, `top`, and `left` properties _always_ reflect the upper left corner.\n * * The `corner`, `bottom`, and `right` properties _always_ reflect the lower right corner.\n *\n * Note: This object should be instantiated with the `new` keyword.\n *\n * @param {number} [x=0] - Horizontal coordinate of some corner of the rect.\n * @param {number} [y=0] - Vertical coordinate of some corner of the rect.\n * @param {number} [width=0] - Width of the new rect. May be negative (see above).\n * @param {number} [height=0] - Height of the new rect. May be negative (see above).\n */\nfunction Rectangle(x, y, width, height) {\n\n    x = Number(x) || 0;\n    y = Number(y) || 0;\n    width = Number(width) || 0;\n    height = Number(height) || 0;\n\n    if (width < 0) {\n        x += width;\n        width = -width;\n    }\n\n    if (height < 0) {\n        y += height;\n        height = -height;\n    }\n\n    /**\n     * @name origin\n     * @type {Point}\n     * @summary Upper left corner of this rect.\n     * @desc Created upon instantiation by the {@linkplain Rectangle|constructor}.\n     * @memberOf Rectangle.prototype\n     * @abstract\n     */\n    addReadOnlyProperty.call(this, 'origin', new Point(x, y));\n\n    /**\n     * @name extent\n     * @type {Point}\n     * @summary this rect's width and height.\n     * @desc Unlike the other `Point` properties, `extent` is not a global coordinate pair; rather it consists of a _width_ (`x`, always positive) and a _height_ (`y`, always positive).\n     *\n     * This object might be more legitimately typed as something like `Area` with properties `width` and `height`; however we wanted it to be able to use it efficiently with a point's `plus` and `minus` methods (that is, without those methods having to check and branch on the type of its parameter).\n     *\n     * Created upon instantiation by the {@linkplain Rectangle|constructor}.\n     * @see The {@link Rectangle#corner|corner} method.\n     * @memberOf Rectangle.prototype\n     * @abstract\n     */\n    addReadOnlyProperty.call(this, 'extent', new Point(width, height));\n\n    /**\n     * @name corner\n     * @type {Point}\n     * @summary Lower right corner of this rect.\n     * @desc This is a calculated value created upon instantiation by the {@linkplain Rectangle|constructor}. It is `origin` offset by `extent`.\n     *\n     * **Note:** These coordinates actually point to the pixel one below and one to the right of the rect's actual lower right pixel.\n     * @memberOf Rectangle.prototype\n     * @abstract\n     */\n    addReadOnlyProperty.call(this, 'corner', new Point(x + width, y + height));\n\n    /**\n     * @name center\n     * @type {Point}\n     * @summary Center of this rect.\n     * @desc Created upon instantiation by the {@linkplain Rectangle|constructor}.\n     * @memberOf Rectangle.prototype\n     * @abstract\n     */\n    addReadOnlyProperty.call(this, 'center', new Point(x + (width / 2), y + (height / 2)));\n\n}\n\nRectangle.prototype = {\n\n    /**\n     * @type {number}\n     * @desc _(Formerly a function; now a getter.)_\n     * @summary Minimum vertical coordinate of this rect.\n     * @memberOf Rectangle.prototype\n     */\n    get top() {\n        return this.origin.y;\n    },\n\n    /**\n     * @type {number}\n     * @desc _(Formerly a function; now a getter.)_\n     * @summary Minimum horizontal coordinate of this rect.\n     * @memberOf Rectangle.prototype\n     */\n    get left() {\n        return this.origin.x;\n    },\n\n    /**\n     * @type {number}\n     * @desc _(Formerly a function; now a getter.)_\n     * @summary Maximum vertical coordinate of this rect + 1.\n     * @memberOf Rectangle.prototype\n     */\n    get bottom() {\n        return this.corner.y;\n    },\n\n    /**\n     * @type {number}\n     * @desc _(Formerly a function; now a getter.)_\n     * @summary Maximum horizontal coordinate of this rect + 1.\n     * @memberOf Rectangle.prototype\n     */\n    get right() {\n        return this.corner.x;\n    },\n\n    /**\n     * @type {number}\n     * @desc _(Formerly a function; now a getter.)_\n     * @summary Width of this rect (always positive).\n     * @memberOf Rectangle.prototype\n     */\n    get width() {\n        return this.extent.x;\n    },\n\n    /**\n     * @type {number}\n     * @desc _(Formerly a function; now a getter.)_\n     * @summary Height of this rect (always positive).\n     * @memberOf Rectangle.prototype\n     */\n    get height() {\n        return this.extent.y;\n    },\n\n    /**\n     * @type {number}\n     * @desc _(Formerly a function; now a getter.)_\n     * @summary Area of this rect.\n     * @memberOf Rectangle.prototype\n     */\n    get area() {\n        return this.width * this.height;\n    },\n\n    /**\n     * @returns {Rectangle} A copy of this rect but with horizontal position reset to given `x` and no width.\n     * @param {number} x - Horizontal coordinate of the new rect.\n     * @memberOf Rectangle.prototype\n     */\n    flattenXAt: function(x) {\n        return new Rectangle(x, this.origin.y, 0, this.extent.y);\n    },\n\n    /**\n     * @returns {Rectangle} A copy of this rect but with vertical position reset to given `y` and no height.\n     * @param {number} y - Vertical coordinate of the new rect.\n     * @memberOf Rectangle.prototype\n     */\n    flattenYAt: function(y) {\n        return new Rectangle(this.origin.x, y, this.extent.x, 0);\n    },\n\n    /**\n     * @returns {boolean} `true` iff given `point` entirely contained within this rect.\n     * @param {Point} pointOrRect - The point or rect to test for containment.\n     * @memberOf Rectangle.prototype\n     */\n    contains: function(pointOrRect) {\n        return pointOrRect.within(this);\n    },\n\n    /**\n     * _(Formerly `isContainedWithinRectangle`.)_\n     * @returns {boolean} `true` iff `this` rect is entirely contained within given `rect`.\n     * @param {Rectangle} rect - Rectangle to test against this rect.\n     * @memberOf Rectangle.prototype\n     */\n    within: function(rect) {\n        return (\n            rect.origin.lessThanOrEqualTo(this.origin) &&\n            rect.corner.greaterThanOrEqualTo(this.corner)\n        );\n    },\n\n    /**\n     * _(Formerly: `insetBy`.)_\n     * @returns {Rectangle} That is enlarged/shrunk by given `padding`.\n     * @param {number} padding - Amount by which to increase (+) or decrease (-) this rect\n     * @see The {@link Rectangle#shrinkBy|shrinkBy} method.\n     * @memberOf Rectangle.prototype\n     */\n    growBy: function(padding) {\n        return new Rectangle(\n            this.origin.x + padding,\n            this.origin.y + padding,\n            this.extent.x - padding - padding,\n            this.extent.y - padding - padding);\n    },\n\n    /**\n     * @returns {Rectangle} That is enlarged/shrunk by given `padding`.\n     * @param {number} padding - Amount by which to decrease (+) or increase (-) this rect.\n     * @see The {@link Rectangle#growBy|growBy} method.\n     * @memberOf Rectangle.prototype\n     */\n    shrinkBy: function(padding) {\n        return this.growBy(-padding);\n    },\n\n    /**\n     * @returns {Rectangle} Bounding rect that contains both this rect and the given `rect`.\n     * @param {Rectangle} rect - The rectangle to union with this rect.\n     * @memberOf Rectangle.prototype\n     */\n    union: function(rect) {\n        var origin = this.origin.min(rect.origin),\n            corner = this.corner.max(rect.corner),\n            extent = corner.minus(origin);\n\n        return new Rectangle(\n            origin.x, origin.y,\n            extent.x, extent.y\n        );\n    },\n\n    /**\n     * iterate over all points within this rect, invoking `iteratee` for each.\n     * @param {function(number,number)} iteratee - Function to call for each point.\n     * Bound to `context` when given; otherwise it is bound to this rect.\n     * Each invocation of `iteratee` is called with two arguments:\n     * the horizontal and vertical coordinates of the point.\n     * @param {object} [context=this] - Context to bind to `iteratee` (when not `this`).\n     * @memberOf Rectangle.prototype\n     */\n    forEach: function(iteratee, context) {\n        context = context || this;\n        for (var x = this.origin.x, x2 = this.corner.x; x < x2; x++) {\n            for (var y = this.origin.y, y2 = this.corner.y; y < y2; y++) {\n                iteratee.call(context, x, y);\n            }\n        }\n    },\n\n    /**\n     * @returns {Rectangle} One of:\n     * * _If this rect intersects with the given `rect`:_\n     *      a new rect representing that intersection.\n     * * _If it doesn't intersect and `ifNoneAction` defined:_\n     *      result of calling `ifNoneAction`.\n     * * _If it doesn't intersect and `ifNoneAction` undefined:_\n     *      `null`.\n     * @param {Rectangle} rect - The rectangle to intersect with this rect.\n     * @param {function(Rectangle)} [ifNoneAction] - When no intersection, invoke and return result.\n     * Bound to `context` when given; otherwise bound to this rect.\n     * Invoked with `rect` as sole parameter.\n     * @param {object} [context=this] - Context to bind to `ifNoneAction` (when not `this`).\n     * @memberOf Rectangle.prototype\n     */\n    intersect: function(rect, ifNoneAction, context) {\n        var result = null,\n            origin = this.origin.max(rect.origin),\n            corner = this.corner.min(rect.corner),\n            extent = corner.minus(origin);\n\n        if (extent.x > 0 && extent.y > 0) {\n            result = new Rectangle(\n                origin.x, origin.y,\n                extent.x, extent.y\n            );\n        } else if (typeof ifNoneAction === 'function') {\n            result = ifNoneAction.call(context || this, rect);\n        }\n\n        return result;\n    },\n\n    /**\n     * @returns {boolean} `true` iff this rect overlaps with given `rect`.\n     * @param {Rectangle} rect - The rectangle to intersect with this rect.\n     * @memberOf Rectangle.prototype\n     */\n    intersects: function(rect) {\n        return (\n            rect.corner.x > this.origin.x &&\n            rect.corner.y > this.origin.y &&\n            rect.origin.x < this.corner.x &&\n            rect.origin.y < this.corner.y\n        );\n    }\n};\n\n// Interface\nexports.Point = Point;\nexports.Rectangle = Rectangle;\n","/* globals alert */\n\n'use strict';\n\n/**\n * @constructor\n * @desc Extend from this base class using `Base.extend` per example.\n * @example\n * var prototype = { ... };\n * var descendantClass = Base.extend(prototype};\n * @classdesc This is an abstract base class available for all Hypergrid classes.\n */\nvar Base = require('extend-me').Base;\n\nObject.defineProperty(Base.prototype, 'version', {\n    enumerable: true,\n    writable: false, // read-only\n    configurable: false,\n    value: require('../package.json').version\n});\n\nBase.prototype.atLeastVersion = function(neededVersion) {\n    var neededParts = neededVersion.split('.'),\n        thisParts = this.version.split('.'),\n        delta;\n    neededParts.find(function(neededPart, i) {\n        return (delta = neededPart - thisParts[i]);\n    });\n    return delta >= 0;\n};\n\nBase.prototype.deprecated = require('./lib/deprecated');\nBase.prototype.HypergridError = require('./lib/error');\n\nBase.prototype.notify = function(message, onerror) {\n    switch (onerror) {\n        case 'warn': console.warn(message); break;\n        case 'alert': alert(message); break; // eslint-disable-line no-alert\n        default: throw new this.HypergridError(message);\n    }\n};\n\n/**\n * Convenience function for getting the value when that value can be defined as a function that needs to be called to get the actual (primitive) value.\n * @param value\n * @returns {*}\n */\nBase.prototype.unwrap = function(value) {\n    if ((typeof value)[0] === 'f') {\n        value = value();\n    }\n    return value;\n};\n\n/**\n * @method\n * @summary Mixes source members into calling context.\n * @desc Context is typically either an instance or the (shared) prototype of a \"class\" extended from {@link Base} (see examples).\n *\n * Typically used by plug-ins.\n * @example\n * // define instance members: myGrid.fix(), etc.\n * myGrid.mixIn({ fix: function() {...}, ... });\n * @example\n * // define prototype members: Hypergrid.prototype.fix(), etc.\n * Hypergrid.prototype.mixIn({ fix: function() {...}, ... });\n * @See {@link https://joneit.github.io/overrider/module-overrider.htm#.mixIn}\n * @param {object} source\n */\nBase.prototype.mixIn = require('overrider').mixIn;\n\n\n/**\n * @method\n * @summary Instantiate an object with discrete + variable args.\n * @desc The discrete args are passed first, followed by the variable args.\n * @param {function} Constructor\n * @param {Array} variableArgArray\n * @param {...*} discreteArgs\n * @returns {object} Object of type `Constructor` newly constructor using the arguments in `arrayOfArgs`.\n */\nBase.prototype.createApply = function(Constructor, variableArgArray, discreteArgs) {\n    var discreteArgArray = Array.prototype.slice.call(arguments, 2),\n        args = [null] // null is context for `bind` call below\n            .concat(discreteArgArray) // discrete arguments\n            .concat(variableArgArray), // variable arguments\n        BoundConstructor = Constructor.bind.apply(Constructor, args);\n\n    return new BoundConstructor;\n};\n\n\nmodule.exports = Base;\n","/* eslint-env browser */\n\n'use strict';\n\nvar Base = require('../Base');\nvar effects = require('../lib/DOM/effects');\nvar Localization = require('../lib/Localization');\n\n/**\n * @constructor\n * @desc Displays a cell editor and handles cell editor interactions.\n *\n * > This constructor (actually `initialize`) will be called upon instantiation of this class or of any class that extends from this class. See {@link https://github.com/joneit/extend-me|extend-me} for more info.\n *\n * Instances of `CellEditor` are used to render an HTML element on top of the grid exactly within the bound of a cell for purposes of editing the cell value.\n *\n * Extend this base class to implement your own cell editor.\n *\n * @param {Hypergrid} grid\n * @param {object} options - Properties listed below + arbitrary mustache \"variables\" for merging into template.\n * @param {Point} options.editPoint - Deprecated; use `options.gridCell`.\n * @param {string} [options.format] - Name of a localizer with which to override prototype's `localizer` property.\n */\nvar CellEditor = Base.extend('CellEditor', {\n\n    initialize: function(grid, options) {\n        // Mix in all enumerable properties for mustache use, typically `column` and `format`.\n        for (var key in options) {\n            this[key] = options[key];\n        }\n\n        this.event = options;\n\n        var value = this.event.value;\n        if (value instanceof Array) {\n            value = value[1]; //it's a nested object\n        }\n\n        /**\n         * my instance of hypergrid\n         * @type {Hypergrid}\n         * @memberOf CellEditor.prototype\n         */\n        this.grid = grid;\n\n        this.grid.cellEditor = this;\n\n        this.locale = grid.localization.locale; // for template's `lang` attribute\n\n        // Only override cell editor's default 'null' localizer if the custom localizer lookup succeeds.\n        // Failure is when it returns the default ('string') localizer when 'string' is not what was requested.\n        var localizer = this.grid.localization.get(options.format); // try to get named localizer\n        if (!(localizer === Localization.prototype.string || options.format === 'string')) {\n            this.localizer = localizer;\n        }\n\n        this.initialValue = value;\n\n        var container = document.createElement('DIV');\n        container.innerHTML = this.grid.modules.templater.render(this.template, this);\n\n        /**\n         * This object's input control, one of:\n         * * *input element* - an `HTMLElement` that has a `value` attribute, such as `HTMLInputElement`, `HTMLButtonElement`, etc.\n         * * *container element* - an `HTMLElement` containing one or more input elements, only one of which contains the editor value.\n         *\n         * For access to the input control itself (which may or may not be the same as `this.el`), see `this.input`.\n         *\n         * @type {HTMLElement}\n         * @default null\n         * @memberOf CellEditor.prototype\n         */\n        this.el = container.firstChild;\n\n        this.input = this.el;\n\n        this.errors = 0;\n\n        var self = this;\n        this.el.addEventListener('keyup', this.keyup.bind(this));\n        this.el.addEventListener('keydown', function(e) {\n            if (e.keyCode === 9) {\n                // prevent TAB from leaving input control\n                e.preventDefault();\n            }\n            grid.fireSyntheticEditorKeyDownEvent(self, e);\n        });\n        this.el.addEventListener('keypress', function(e) {\n            grid.fireSyntheticEditorKeyPressEvent(self, e);\n        });\n        this.el.addEventListener('mousedown', function(e) {\n            self.onmousedown(e);\n        });\n    },\n\n    // If you override this method, be sure to call it as a final step (or call stopPropagation yourself).\n    onmousedown: function(event) {\n        event.stopPropagation(); // Catch mousedown here before it gets to the document listener defined in Hypergrid().\n    },\n\n    localizer: Localization.prototype.null,\n\n    specialKeyups: {\n        //0x08: 'clearStopEditing', // backspace\n        0x09: 'stopEditing', // tab\n        0x0d: 'stopEditing', // return/enter\n        0x1b: 'cancelEditing' // escape\n    },\n\n    keyup: function(e) {\n        var grid = this.grid,\n            cellProps = this.event.properties,\n            feedbackCount = cellProps.feedbackCount,\n            keyChar = grid.canvas.getKeyChar(e),\n            specialKeyup,\n            stopped;\n\n        // STEP 1: Call the special key handler as needed\n        if (\n            (specialKeyup = this.specialKeyups[e.keyCode]) &&\n            (stopped = this[specialKeyup](feedbackCount))\n        ) {\n            grid.repaint();\n        }\n\n        // STEP 2: If this is a possible \"nav key\" consumable by CellSelection#handleKeyDown, try to stop editing and send it along\n        if (cellProps.mappedNavKey(keyChar, e.ctrlKey)) {\n            if (\n                !specialKeyup &&\n                // We didn't try to stop editing above so try to stop it now\n                (stopped = this.stopEditing(feedbackCount))\n            ) {\n                grid.repaint();\n            }\n\n            if (stopped) {\n                // Editing successfully stopped\n                // -> send the event down the feature chain\n                var finEvent = grid.canvas.newEvent(e, 'fin-editor-keydown', {\n                    grid: grid,\n                    alt: e.altKey,\n                    ctrl: e.ctrlKey,\n                    char: keyChar,\n                    legacyChar: e.legacyKey, // decorated by getKeyChar\n                    code: e.charCode,\n                    key: e.keyCode,\n                    meta: e.metaKey,\n                    shift: e.shiftKey,\n                    identifier: e.key,\n                    editor: this\n                });\n                grid.delegateKeyDown(finEvent);\n            }\n        }\n\n        this.grid.fireSyntheticEditorKeyUpEvent(this, e);\n\n        return stopped;\n    },\n\n    /**\n     * if true, check that the editor is in the right location\n     * @type {boolean}\n     * @default false\n     * @memberOf CellEditor.prototype\n     */\n    checkEditorPositionFlag: false,\n\n    /**\n     * @memberOf CellEditor.prototype\n     * @desc This function is a callback from the fin-hypergrid.   It is called after each paint of the canvas.\n     */\n    gridRenderedNotification: function() {\n        this.checkEditor();\n    },\n\n    /**\n     * @memberOf CellEditor.prototype\n     * @desc scroll values have changed, we've been notified\n     */\n    scrollValueChangedNotification: function() {\n        this.checkEditorPositionFlag = true;\n    },\n\n    /**\n     * @memberOf CellEditor.prototype\n     * @desc move the editor to the current editor point\n     */\n    moveEditor: function() {\n        this.setBounds(this.event.bounds);\n    },\n\n    beginEditing: function() {\n        if (this.grid.fireRequestCellEdit(this.event, this.initialValue)) {\n            this.checkEditorPositionFlag = true;\n            this.checkEditor();\n        }\n    },\n\n    /**\n     * @summary Put the value into our editor.\n     * @desc Formats the value and displays it.\n     * The localizer's {@link localizerInterface#format|format} method will be called.\n     *\n     * Override this method if your editor has additional or alternative GUI elements.\n     *\n     * @param {object} value - The raw unformatted value from the data source that we want to edit.\n     * @memberOf CellEditor.prototype\n     */\n    setEditorValue: function(value) {\n        this.input.value = this.localizer.format(value);\n    },\n\n    /**\n     * @memberOf CellEditor.prototype\n     * @desc display the editor\n     */\n    showEditor: function() {\n        this.el.style.display = 'inline';\n    },\n\n    /**\n     * @memberOf CellEditor.prototype\n     * @desc hide the editor\n     */\n    hideEditor: function() {\n        this.el.style.display = 'none';\n    },\n\n    /** @summary Stops editing.\n     * @desc Before saving, validates the edited value in two phases as follows:\n     * 1. Call `validateEditorValue`. (Calls the localizer's `invalid()` function, if available.)\n     * 2. Catch any errors thrown by the {@link CellEditor#getEditorValue|getEditorValue} method.\n     *\n     * **If the edited value passes both phases of the validation:**\n     * Saves the edited value by calling the {@link CellEditor#saveEditorValue|saveEditorValue} method.\n     *\n     * **On validation failure:**\n     * 1. If `feedback` was omitted, cancels editing, discarding the edited value.\n     * 2. If `feedback` was provided, gives the user some feedback (see `feedback`, below).\n     *\n     * @param {number} [feedback] What to do on validation failure. One of:\n     * * **`undefined`** - Do not show the error effect or the end effect. Just discard the value and close the editor (as if `ESC` had been typed).\n     * * **`0`** - Just shows the error effect (see the {@link CellEditor#errorEffect|errorEffect} property).\n     * * **`1`** - Shows the error feedback effect followed by the detailed explanation.\n     * * `2` or more:\n     *   1. Shows the error feedback effect\n     *   2. On every `feedback` tries, shows the detailed explanation.\n     * * If `undefined` (omitted), simply cancels editing without saving edited value.\n     * * If 0, shows the error feedback effect (see the {@link CellEditor#errorEffect|errorEffect} property).\n     * * If > 0, shows the error feedback effect _and_ calls the {@link CellEditor#errorEffectEnd|errorEffectEnd} method) every `feedback` call(s) to `stopEditing`.\n     * @returns {boolean} Truthy means successful stop. Falsy means syntax error prevented stop. Note that editing is canceled when no feedback requested and successful stop includes (successful) cancel.\n     * @memberOf CellEditor.prototype\n     */\n    stopEditing: function(feedback) {\n        var str = this.input.value;\n\n        try {\n            var error = this.validateEditorValue(str);\n            if (!error) {\n                var value = this.getEditorValue(str);\n            }\n        } catch (err) {\n            error = err;\n        }\n\n        if (!error && this.grid.fireSyntheticEditorDataChangeEvent(this, this.initialValue, value)) {\n            try {\n                this.saveEditorValue(value);\n            } catch (err) {\n                error = err;\n            }\n        }\n\n        if (!error) {\n            this.hideEditor();\n            this.grid.cellEditor = null;\n            this.el.remove();\n        } else if (feedback >= 0) { // false when `feedback` undefined\n            this.errorEffectBegin(++this.errors % feedback === 0 && error);\n        } else { // invalid but no feedback\n            this.cancelEditing();\n        }\n\n        return !error;\n    },\n\n    /** @summary Cancels editing.\n     * @returns {boolean} Successful. (Cancel is always successful.)\n     */\n    cancelEditing: function() {\n        this.setEditorValue(this.initialValue);\n        this.hideEditor();\n        this.grid.cellEditor = null;\n        this.el.remove();\n\n        return true;\n    },\n\n    /**\n     * Calls the effect function indicated in the {@link module:defaults.feedbackEffect|feedbackEffect} property, which triggers a series of CSS transitions.\n     * @param {boolean|string|Error} [error] - If defined, call the {@link CellEditor#errorEffectEnd|errorEffectEnd} method at the end of the last effect transition with this error.\n     * @memberOf CellEditor.prototype\n     */\n    errorEffectBegin: function(error) {\n        if (this.effecting) {\n            return;\n        }\n\n        var spec = this.grid.properties.feedbackEffect, // spec may e a string or an object with name and options props\n            effect = effects[spec.name || spec]; // if spec is a string, spec.name will be undefined\n\n        if (effect) {\n            var options = Object.assign({}, spec.options); // if spec is a string, spec.options will be undefined\n            options.callback = this.errorEffectEnd.bind(this, error);\n            this.effecting = true;\n            effect.call(this, options);\n        }\n    },\n\n    /**\n     * This function expects to be passed an error. There is no point in calling this function if there is no error. Nevertheless, if called with a falsy `error`, returns without doing anything.\n     * @this {CellEditor}\n     * @param {boolean|string|Error} [error]\n     */\n    errorEffectEnd: function(error, options) {\n        if (error) {\n            var msg =\n                'Invalid value. To resolve, do one of the following:\\n\\n' +\n                '   * Correct the error and try again.\\n' +\n                '         - or -\\n' +\n                '   * Cancel editing by pressing the \"esc\" (escape) key.';\n\n            error = error.message || error;\n\n            if (typeof error !== 'string') {\n                error = '';\n            }\n\n            if (this.localizer.expectation) {\n                error = error ? error + '\\n' + this.localizer.expectation : this.localizer.expectation;\n            }\n\n            if (error) {\n                if (/[\\n\\r]/.test(error)) {\n                    error = '\\n' + error;\n                    error = error.replace(/[\\n\\r]+/g, '\\n\\n   * ');\n                }\n                msg += '\\n\\nAdditional information about this error: ' + error;\n            }\n\n            setTimeout(function() { // allow animation to complete\n                alert(msg); // eslint-disable-line no-alert\n            });\n        }\n        this.effecting = false;\n    },\n\n    /**\n     * @desc save the new value into the behavior (model)\n     * @returns {boolean} Data changed and pre-cell-edit event was not canceled.\n     * @memberOf CellEditor.prototype\n     */\n    saveEditorValue: function(value) {\n        var save = (\n            !(value && value === this.initialValue) && // data changed\n            this.grid.fireBeforeCellEdit(this.event.gridCell, this.initialValue, value, this) // proceed\n        );\n\n        if (save) {\n            this.event.value = value;\n            this.grid.fireAfterCellEdit(this.event.gridCell, this.initialValue, value, this);\n        }\n\n        return save;\n    },\n\n    /**\n     * @summary Extract the edited value from the editor.\n     * @desc De-format the edited string back into a primitive value.\n     *\n     * The localizer's {@link localizerInterface#parse|parse} method will be called on the text box contents.\n     *\n     * Override this method if your editor has additional or alternative GUI elements. The GUI elements will influence the primitive value, either by altering the edited string before it is parsed, or by transforming the parsed value before returning it.\n     * @param {string} str - current editors input string\n     * @returns {object} the current editor's value\n     * @throws {boolean|string|Error} Throws an error on parse failure. If the error's `message` is defined, the message will eventually be displayed (every `feedbackCount`th attempt).\n     * @memberOf CellEditor.prototype\n     */\n    getEditorValue: function(str) {\n        return this.localizer.parse(str || this.input.value);\n    },\n\n    /**\n     * If there is no validator on the localizer, returns falsy (not invalid; possibly valid).\n     * @param {string} str - current editors input string\n     * @returns {boolean|string} Truthy value means invalid. If a string, this will be an error message. If not a string, it merely indicates a generic invalid result.\n     * @throws {boolean|string|Error} May throw an error on syntax failure as an alternative to returning truthy. Define the error's `message` field as an alternative to returning string.\n     * @memberOf CellEditor.prototype\n     */\n    validateEditorValue: function(str) {\n        return this.localizer.invalid && this.localizer.invalid(str || this.input.value);\n    },\n\n    /**\n     * @summary Request focus for my input control.\n     * @desc See GRID-95 \"Scrollbar moves inward\" for issue and work-around explanation.\n     * @memberOf CellEditor.prototype\n     */\n    takeFocus: function() {\n        var el = this.el,\n            leftWas = el.style.left,\n            topWas = el.style.top;\n\n        el.style.left = el.style.top = 0; // work-around: move to upper left\n\n        var x = window.scrollX, y = window.scrollY;\n        this.input.focus();\n        window.scrollTo(x, y);\n        this.selectAll();\n\n        el.style.left = leftWas;\n        el.style.top = topWas;\n    },\n\n    /**\n     * @memberOf CellEditor.prototype\n     * @desc select everything\n     */\n    selectAll: nullPattern,\n\n    /**\n     * @memberOf CellEditor.prototype\n     * @desc set the bounds of my input control\n     * @param {rectangle} rectangle - the bounds to move to\n     */\n    setBounds: function(cellBounds) {\n        var style = this.el.style;\n\n        style.left = px(cellBounds.x);\n        style.top = px(cellBounds.y);\n        style.width = px(cellBounds.width);\n        style.height = px(cellBounds.height);\n    },\n\n    /**\n     * @desc check that the editor is in the correct location, and is showing/hidden appropriately\n     * @memberOf CellEditor.prototype\n     */\n    checkEditor: function() {\n        if (this.checkEditorPositionFlag) {\n            this.checkEditorPositionFlag = false;\n            if (this.event.isCellVisible) {\n                this.setEditorValue(this.initialValue);\n                this.attachEditor();\n                this.moveEditor();\n                this.showEditor();\n                this.takeFocus();\n            } else {\n                this.hideEditor();\n            }\n        }\n    },\n\n    attachEditor: function() {\n        this.grid.div.appendChild(this.el);\n    },\n\n    template: ''\n\n});\n\nfunction nullPattern() {}\nfunction px(n) { return n + 'px'; }\n\n\nmodule.exports = CellEditor;\n","'use strict';\n\nfunction HypergridError(message) {\n    this.message = message;\n}\n\n// extend from `Error`\nHypergridError.prototype = Object.create(Error.prototype);\n\n// override error name displayed in console\nHypergridError.prototype.name = 'HypergridError';\n\nmodule.exports = HypergridError;\n","/* object-iterators.js - Mini Underscore library\n * by Jonathan Eiten\n *\n * The methods below operate on objects (but not arrays) similarly\n * to Underscore (http://underscorejs.org/#collections).\n *\n * For more information:\n * https://github.com/joneit/object-iterators\n */\n\n'use strict';\n\n/**\n * @constructor\n * @summary Wrap an object for one method call.\n * @Desc Note that the `new` keyword is not necessary.\n * @param {object|null|undefined} object - `null` or `undefined` is treated as an empty plain object.\n * @return {Wrapper} The wrapped object.\n */\nfunction Wrapper(object) {\n    if (object instanceof Wrapper) {\n        return object;\n    }\n    if (!(this instanceof Wrapper)) {\n        return new Wrapper(object);\n    }\n    this.originalValue = object;\n    this.o = object || {};\n}\n\n/**\n * @name Wrapper.chain\n * @summary Wrap an object for a chain of method calls.\n * @Desc Calls the constructor `Wrapper()` and modifies the wrapper for chaining.\n * @param {object} object\n * @return {Wrapper} The wrapped object.\n */\nWrapper.chain = function (object) {\n    var wrapped = Wrapper(object); // eslint-disable-line new-cap\n    wrapped.chaining = true;\n    return wrapped;\n};\n\nWrapper.prototype = {\n    /**\n     * Unwrap an object wrapped with {@link Wrapper.chain|Wrapper.chain()}.\n     * @return {object|null|undefined} The value originally wrapped by the constructor.\n     * @memberOf Wrapper.prototype\n     */\n    value: function () {\n        return this.originalValue;\n    },\n\n    /**\n     * @desc Mimics Underscore's [each](http://underscorejs.org/#each) method: Iterate over the members of the wrapped object, calling `iteratee()` with each.\n     * @param {function} iteratee - For each member of the wrapped object, this function is called with three arguments: `(value, key, object)`. The return value of this function is undefined; an `.each` loop cannot be broken out of (use {@link Wrapper#find|.find} instead).\n     * @param {object} [context] - If given, `iteratee` is bound to this object. In other words, this object becomes the `this` value in the calls to `iteratee`. (Otherwise, the `this` value will be the unwrapped object.)\n     * @return {Wrapper} The wrapped object for chaining.\n     * @memberOf Wrapper.prototype\n     */\n    each: function (iteratee, context) {\n        var o = this.o;\n        Object.keys(o).forEach(function (key) {\n            iteratee.call(this, o[key], key, o);\n        }, context || o);\n        return this;\n    },\n\n    /**\n     * @desc Mimics Underscore's [find](http://underscorejs.org/#find) method: Look through each member of the wrapped object, returning the first one that passes a truth test (`predicate`), or `undefined` if no value passes the test. The function returns the value of the first acceptable member, and doesn't necessarily traverse the entire object.\n     * @param {function} predicate - For each member of the wrapped object, this function is called with three arguments: `(value, key, object)`. The return value of this function should be truthy if the member passes the test and falsy otherwise.\n     * @param {object} [context] - If given, `predicate` is bound to this object. In other words, this object becomes the `this` value in the calls to `predicate`. (Otherwise, the `this` value will be the unwrapped object.)\n     * @return {*} The found property's value, or undefined if not found.\n     * @memberOf Wrapper.prototype\n     */\n    find: function (predicate, context) {\n        var o = this.o;\n        var result;\n        if (o) {\n            result = Object.keys(o).find(function (key) {\n                return predicate.call(this, o[key], key, o);\n            }, context || o);\n            if (result !== undefined) {\n                result = o[result];\n            }\n        }\n        return result;\n    },\n\n    /**\n     * @desc Mimics Underscore's [filter](http://underscorejs.org/#filter) method: Look through each member of the wrapped object, returning the values of all members that pass a truth test (`predicate`), or empty array if no value passes the test. The function always traverses the entire object.\n     * @param {function} predicate - For each member of the wrapped object, this function is called with three arguments: `(value, key, object)`. The return value of this function should be truthy if the member passes the test and falsy otherwise.\n     * @param {object} [context] - If given, `predicate` is bound to this object. In other words, this object becomes the `this` value in the calls to `predicate`. (Otherwise, the `this` value will be the unwrapped object.)\n     * @return {*} An array containing the filtered values.\n     * @memberOf Wrapper.prototype\n     */\n    filter: function (predicate, context) {\n        var o = this.o;\n        var result = [];\n        if (o) {\n            Object.keys(o).forEach(function (key) {\n                if (predicate.call(this, o[key], key, o)) {\n                    result.push(o[key]);\n                }\n            }, context || o);\n        }\n        return result;\n    },\n\n    /**\n     * @desc Mimics Underscore's [map](http://underscorejs.org/#map) method: Produces a new array of values by mapping each value in list through a transformation function (`iteratee`). The function always traverses the entire object.\n     * @param {function} iteratee - For each member of the wrapped object, this function is called with three arguments: `(value, key, object)`. The return value of this function is concatenated to the end of the new array.\n     * @param {object} [context] - If given, `iteratee` is bound to this object. In other words, this object becomes the `this` value in the calls to `predicate`. (Otherwise, the `this` value will be the unwrapped object.)\n     * @return {*} An array containing the filtered values.\n     * @memberOf Wrapper.prototype\n     */\n    map: function (iteratee, context) {\n        var o = this.o;\n        var result = [];\n        if (o) {\n            Object.keys(o).forEach(function (key) {\n                result.push(iteratee.call(this, o[key], key, o));\n            }, context || o);\n        }\n        return result;\n    },\n\n    /**\n     * @desc Mimics Underscore's [reduce](http://underscorejs.org/#reduce) method: Boil down the values of all the members of the wrapped object into a single value. `memo` is the initial state of the reduction, and each successive step of it should be returned by `iteratee()`.\n     * @param {function} iteratee - For each member of the wrapped object, this function is called with four arguments: `(memo, value, key, object)`. The return value of this function becomes the new value of `memo` for the next iteration.\n     * @param {*} [memo] - If no memo is passed to the initial invocation of reduce, the iteratee is not invoked on the first element of the list. The first element is instead passed as the memo in the invocation of the iteratee on the next element in the list.\n     * @param {object} [context] - If given, `iteratee` is bound to this object. In other words, this object becomes the `this` value in the calls to `iteratee`. (Otherwise, the `this` value will be the unwrapped object.)\n     * @return {*} The value of `memo` \"reduced\" as per `iteratee`.\n     * @memberOf Wrapper.prototype\n     */\n    reduce: function (iteratee, memo, context) {\n        var o = this.o;\n        if (o) {\n            Object.keys(o).forEach(function (key, idx) {\n                memo = (!idx && memo === undefined) ? o[key] : iteratee(memo, o[key], key, o);\n            }, context || o);\n        }\n        return memo;\n    },\n\n    /**\n     * @desc Mimics Underscore's [extend](http://underscorejs.org/#extend) method: Copy all of the properties in each of the `source` object parameter(s) over to the (wrapped) destination object (thus mutating it). It's in-order, so the properties of the last `source` object will override properties with the same name in previous arguments or in the destination object.\n     * > This method copies own members as well as members inherited from prototype chain.\n     * @param {...object|null|undefined} source - Values of `null` or `undefined` are treated as empty plain objects.\n     * @return {Wrapper|object} The wrapped destination object if chaining is in effect; otherwise the unwrapped destination object.\n     * @memberOf Wrapper.prototype\n     */\n    extend: function (source) {\n        var o = this.o;\n        Array.prototype.slice.call(arguments).forEach(function (object) {\n            if (object) {\n                for (var key in object) {\n                    o[key] = object[key];\n                }\n            }\n        });\n        return this.chaining ? this : o;\n    },\n\n    /**\n     * @desc Mimics Underscore's [extendOwn](http://underscorejs.org/#extendOwn) method: Like {@link Wrapper#extend|extend}, but only copies its \"own\" properties over to the destination object.\n     * @param {...object|null|undefined} source - Values of `null` or `undefined` are treated as empty plain objects.\n     * @return {Wrapper|object} The wrapped destination object if chaining is in effect; otherwise the unwrapped destination object.\n     * @memberOf Wrapper.prototype\n     */\n    extendOwn: function (source) {\n        var o = this.o;\n        Array.prototype.slice.call(arguments).forEach(function (object) {\n            Wrapper(object).each(function (val, key) { // eslint-disable-line new-cap\n                o[key] = val;\n            });\n        });\n        return this.chaining ? this : o;\n    }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nif (!Array.prototype.find) {\n    Array.prototype.find = function (predicate) { // eslint-disable-line no-extend-native\n        if (this === null) {\n            throw new TypeError('Array.prototype.find called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n\n        for (var i = 0; i < length; i++) {\n            value = list[i];\n            if (predicate.call(thisArg, value, i, list)) {\n                return value;\n            }\n        }\n        return undefined;\n    };\n}\n\nmodule.exports = Wrapper;\n","'use strict';\n\n/** @module overrider */\n\n/**\n * Mixes members of all `sources` into `target`, handling getters and setters properly.\n *\n * Any number of `sources` objects may be given and each is copied in turn.\n *\n * @example\n * var overrider = require('overrider');\n * var target = { a: 1 }, source1 = { b: 2 }, source2 = { c: 3 };\n * target === overrider(target, source1, source2); // true\n * // target object now has a, b, and c; source objects untouched\n *\n * @param {object} object - The target object to receive sources.\n * @param {...object} [sources] - Object(s) containing members to copy to `target`. (Omitting is a no-op.)\n * @returns {object} The target object (`target`)\n */\nfunction overrider(target, sources) { // eslint-disable-line no-unused-vars\n    for (var i = 1; i < arguments.length; ++i) {\n        mixIn.call(target, arguments[i]);\n    }\n\n    return target;\n}\n\n/**\n * Mix `this` members into `target`.\n *\n * @example\n * // A. Simple usage (using .call):\n * var mixInTo = require('overrider').mixInTo;\n * var target = { a: 1 }, source = { b: 2 };\n * target === overrider.mixInTo.call(source, target); // true\n * // target object now has both a and b; source object untouched\n *\n * @example\n * // B. Semantic usage (when the source hosts the method):\n * var mixInTo = require('overrider').mixInTo;\n * var target = { a: 1 }, source = { b: 2, mixInTo: mixInTo };\n * target === source.mixInTo(target); // true\n * // target object now has both a and b; source object untouched\n *\n * @this {object} Target.\n * @param target\n * @returns {object} The target object (`target`)\n * @memberOf module:overrider\n */\nfunction mixInTo(target) {\n    var descriptor;\n    for (var key in this) {\n        if ((descriptor = Object.getOwnPropertyDescriptor(this, key))) {\n            Object.defineProperty(target, key, descriptor);\n        }\n    }\n    return target;\n}\n\n/**\n * Mix `source` members into `this`.\n *\n * @example\n * // A. Simple usage (using .call):\n * var mixIn = require('overrider').mixIn;\n * var target = { a: 1 }, source = { b: 2 };\n * target === overrider.mixIn.call(target, source) // true\n * // target object now has both a and b; source object untouched\n *\n * @example\n * // B. Semantic usage (when the target hosts the method):\n * var mixIn = require('overrider').mixIn;\n * var target = { a: 1, mixIn: mixIn }, source = { b: 2 };\n * target === target.mixIn(source) // true\n * // target now has both a and b (and mixIn); source untouched\n *\n * @param source\n * @returns {object} The target object (`this`)\n * @memberOf overrider\n * @memberOf module:overrider\n */\nfunction mixIn(source) {\n    var descriptor;\n    for (var key in source) {\n        if ((descriptor = Object.getOwnPropertyDescriptor(source, key))) {\n            Object.defineProperty(this, key, descriptor);\n        }\n    }\n    return this;\n}\n\noverrider.mixInTo = mixInTo;\noverrider.mixIn = mixIn;\n\nmodule.exports = overrider;\n","/* eslint-env browser */\n\n/**\n * This is a registry of `HTMLImageIcon` objects.\n *\n * Hypergrid comes with a few images (see below).\n *\n * Application developer is free to register additional image objects here (see {@link module:images.add|add}).\n * @module images\n */\n\n'use strict';\n\nvar _ = require('object-iterators');\n\nvar images = require('./images'); // this is the file generated by gulpfile.js (and ignored by git)\n\n/**\n * <img src=\"https://raw.githubusercontent.com/openfin/fin-hypergrid/master/images/calendar.png\">\n * @name calendar\n * @memberOf module:images\n */\n\n/**\n * <img src=\"https://raw.githubusercontent.com/openfin/fin-hypergrid/master/images/checked.png\">\n * @name checked\n * @memberOf module:images\n */\n\n/**\n * <img src=\"https://raw.githubusercontent.com/openfin/fin-hypergrid/master/images/unchecked.png\">\n * @name unchecked\n * @memberOf module:images\n */\n\n/**\n * <img src=\"https://raw.githubusercontent.com/openfin/fin-hypergrid/master/images/filter-off.png\">\n * @name filter-off\n * @memberOf module:images\n */\n\n/**\n * <img src=\"https://raw.githubusercontent.com/openfin/fin-hypergrid/master/images/filter-on.png\">\n * @name filter-on\n * @memberOf module:images\n */\n\n/**\n * <img src=\"https://raw.githubusercontent.com/openfin/fin-hypergrid/master/images/up-down.png\">\n * @name up-down\n * @memberOf module:images\n */\n\n_(images).each(function(image, key) {\n    var element = new Image();\n    element.src = 'data:' + image.type + ';base64,' + image.data;\n    images[key] = element;\n});\n\n/**\n * Synonym of {@link module:images.checked|checked} (unaffected if `checked` overridden).\n * @name checkbox-on\n * @memberOf module:images\n */\nimages['checkbox-on'] = images.checked;\n\n/**\n * Synonym of {@link module:images.unchecked|unchecked} (unaffected if `unchecked` overridden).\n * @name checkbox-off\n * @memberOf module:images\n */\nimages['checkbox-off'] = images.unchecked;\n\n/**\n * @name add\n * @method\n * @param {string} key\n * @param {HTMLImageElement} img\n * @memberOf module:images\n */\nimages.add = function(key, img) {\n    return images[key] = img;\n};\n\n/**\n * Convenience function.\n * @name checkbox\n * @method\n * @param {boolean} state\n * @returns {HTMLImageElement} {@link module:images.checked|checked} when `state` is truthy or {@link module:images.unchecked|unchecked} otherwise.\n * @memberOf module:images\n */\nimages.checkbox = function(state) {\n    return images[state ? 'checked' : 'unchecked'];\n};\n\n/**\n * Convenience function.\n * @name filter\n * @method\n * @param {boolean} state\n * @returns {HTMLImageElement} {@link module:images.filter-off|filter-off} when `state` is truthy or {@link module:images.filter-on|filter-on} otherwise.\n * @memberOf module:images\n */\nimages.filter = function(state) {\n    return images[state ? 'filter-on' : 'filter-off'];\n};\n\nmodule.exports = images;\n","'use strict';\n\nvar transformers = require('./transformers');\n\nvar REGEXP_INTEGER = /^\\d+$/;\n\nvar optionNames = ['transformations', 'propPath', 'dictPath', 'force'];\n\n/**\n * @classdesc This object holds a list of transformations used by {@link Synonomous.prototype.getSynonyms} and {@link Synonomous.prototype.decorateList}.\n *\n * Additional transformer functions may be mixed into the prototype (or added to an instance).\n *\n * @param {object} [options]\n * @param {string[]} [options.transformations] - If omitted, {@link Synonomous.prototype.transformations} serves as a default.\n * @param {string|string[]} [options.propPath] - If omitted, {@link Synonomous.prototype.propPath} serves as a default.\n * @param {string|string[]} [options.dictPath] - If omitted, {@link Synonomous.prototype.dictPath} serves as a default.\n * @param {boolean} [options.force=false] - If truthy, new property values override existing values; else new values are discarded.\n * @constructor\n */\nfunction Synonomous(options) {\n    if (options) {\n        optionNames.forEach(function(key) {\n            if (options[key]) {\n                this[key] = options[key];\n            }\n        }, this);\n    }\n}\n\nSynonomous.prototype = {\n    constructor: Synonomous,\n\n    /**\n     * @summary Default list of active registered transformations by  _or_ an object whose keys name the transformations.\n     * @desc Used by {@link Synonomous.prototype.getSynonyms} and {@link Synonomous.prototype.decorateList}.\n     * When an object, the former just uses the keys, ignoring the values, while the latter uses both the keys and the values.\n     *\n     * An override may be defined on the instance, easily done by supplying as a constructor option.\n     *\n     * This is a global default; mutate only if you want to change the default for all your instances.\n     * @see {@link Synonomous.prototype.verbatim}\n     * @see {@link Synonomous.prototype.toCamelCase}\n     * @default\n     * @type {string[]|object}\n     * @memberOf Synonomous#\n     */\n    transformations: [\n        'verbatim',\n        'toCamelCase'\n    ],\n\n    /**\n     * @summary Drill down path for name to make synonyms of.\n     * @desc Used by {@link Synonomous.prototype.decorateList}.\n     *\n     * This is the default property dot-path within each list element to find the value to make synonyms of.\n     * If undefined (and no temporary override is given in the call to `decorateList`),\n     * the element value itself (coerced to a string) is used to make the synonyms.\n     *\n     * The setter accepts any falsy value to undefine; or a string of dot-separated parts; or an array of parts.\n     *\n     * The getter always returns an array with a `toString` override that returns dot-separated string when coerced to a string.\n     *\n     * An override may be defined on the instance, easily done by supplying as a constructor option.\n     *\n     * The global default for all instances can be reset using the setter with the prototype as the execution context,\n     * _e.g._ `Synonomous.prototype.propPath = newValue;`.\n     *\n     * @type {undefined|string|string[]}\n     * @memberOf Synonomous#\n     */\n    set propPath(crumbs) {\n        this._propPath = newBreadcrumbs(crumbs);\n    },\n    get propPath() {\n        return this._propPath;\n    },\n    _propPath: ['name'], // default for all instances\n\n    /**\n     * @summary Default path to property to decorate; or undefined to decorate the object itself.\n     * @desc Used by {@link Synonomous.prototype.decorate} and {@link Synonomous.prototype.decorateList}.\n     *\n     * The setter accepts any falsy value to undefine; or a string of dot-separated parts; or an array of parts.\n     *\n     * The getter always returns an array with a `toString` override that returns dot-separated string when coerced to a string.\n     *\n     * If undefined, decorations are placed in `list[this.dictPath[0]][this.dictPath[1]][etc]`; else decorations are placed directly on `list` itself.\n     *\n     * An override may be defined on the instance, easily done by supplying to as a constructor option.\n     *\n     * The global default for all instances can be reset using the setter with the prototype as the execution context,\n     * _e.g._ `Synonomous.prototype.dictPath = newValue;`.\n     *\n     * @type {undefined|string|string[]}\n     * @memberOf Synonomous#\n     */\n    set dictPath(crumbs) {\n        this._dictPath = newBreadcrumbs(crumbs);\n    },\n    get dictPath() {\n        return this._dictPath;\n    },\n    _dictPath: [], // default for all instances, settable by Synonomous.prototype.dictPath setter\n\n    /**\n     * If `name` is a string and non-blank, returns an array containing unique non-blank synonyms of `name` generated by the transformer functions named in `this.transformations`.\n     * @param {string} name - String to make synonyms of.\n     * @parma {string[]|object} transformations - When provided, temporarily overrides `this.transformations`.\n     * @memberOf Synonomous#\n     */\n    getSynonyms: function(name, transformations) {\n        var synonyms = [];\n        if (typeof name === 'string' && name) {\n            transformations = transformations || this.transformations;\n            if (!Array.isArray(transformations)) {\n                transformations = Object.keys(transformations);\n            }\n            transformations.forEach(function(key) {\n                if (typeof transformers[key] !== 'function') {\n                    throw new ReferenceError('Unknown transformer \"' + key + '\"');\n                }\n                var synonym = transformers[key](name);\n                if (synonym !== '' && !(synonym in synonyms)) {\n                    synonyms.push(synonym);\n                }\n            });\n        }\n        return synonyms;\n    },\n\n    /**\n     * Decorate an object `obj` with properties named in `propNames` all referencing `item`.\n     * @param {object} obj - The object to decorate. If `this.dictPath` is defined, then decorate `obj[this.dictPath]` instead (created as needed).\n     *\n     * @param {string[]} propNames\n     * @param item\n     * @returns {object} `obj`, now with additional properties (possibly)\n     */\n    decorate: function(obj, propNames, item) {\n        var drilldownContext = drilldown(obj, this.dictPath),\n            decoratingObjectItself = drilldownContext === obj,\n            force = this.force;\n\n        propNames.forEach(function(propName) {\n            if (\n                !(decoratingObjectItself && REGEXP_INTEGER.test(propName)) &&\n                (force || !(propName in drilldownContext))\n            ) {\n                drilldownContext[propName] = item;\n            }\n        });\n\n        return obj;\n    },\n\n    /**\n     * @summary Add dictionary synonyms to an array.\n     *\n     * @desc Adds synonyms for a single element (`index`) or the entire array, based on a given property of each element (`propPath`) or the element itself.\n     *\n     * That is, each element is either itself converted to a string; or is an object with a property named by following `propPath` which is converted to a string.\n     *\n     * For each element, all transformers named in `this.transformations` are run on that string.\n     * * _When `this.transformations` is an array:_\n     * **Create dictionary entries (synonyms) for the element.**\n     * Specifically: All the resulting unique non-blank \"synonyms\" are added as properties to the array with the value of the property being a reference to the element (if it was an object) or a copy of the element (if it was a string), subject to the following rules:\n     *    1. Duplicate synonyms are not added (unless `this.force` is truthy).\n     *    2. Blank synonyms are not added.\n     *    3. Integer synonyms are not added because they are indistinguishable from and may clash with array indexes.\n     * * _When `this.transformations` is an non-array object:_\n     * **Create a new property inside the element for each transformation.**\n     * Specifically: The keys of `this.transformations` name the transformers. The values are dot-paths (dot-separated-strings or arrays) to properties inside each element, set to the string returned by the transformer named by the key.\n     *\n     * @param {number} [index] - Index of element of `list` to add synonyms for. If omitted:\n     * 1. Adds synonyms for all elements of `list`.\n     * 2. `list` and `propPath` are promoted to the 1st and 2nd parameter positions, respectively.\n     * @param {(string|Object.<string, string>)[]} list - Array whose element(s) to make synonyms of _and_ the object to decorate. If `this.dictPath` is defined, then decorate `list[this.dictPath]` instead (created as needed).\n     * @param {string} [propPath=this.propPath] - Name of the property in each element of `list` to make synonyms of. If defined _and_ list element is an object, adds synonyms of `list[propPath]` as string; else adds synonyms of the list element itself as string.\n     * @returns {Array} `list`\n     * @memberOf Synonomous#\n     */\n    decorateList: function(index, list, propPath) {\n        var elements;\n        if (typeof index === 'number') {\n            elements = [list[index]];\n        } else {\n            // promote args\n            list = elements = arguments[0];\n            propPath = arguments[1];\n        }\n        propPath = propPath ? newBreadcrumbs(propPath) : this.propPath;\n        elements.forEach(function(item) {\n            var value = propPath !== undefined && typeof item === 'object' ? drilldown(item, propPath) : item;\n            if (Array.isArray(this.transformations)) {\n                var synonyms = this.getSynonyms(value);\n                this.decorate(list, synonyms, item);\n            } else {\n                Object.keys(this.transformations).forEach(injectTransformedValueIntoItem.bind(this, item, value));\n            }\n        }, this);\n        return list;\n    }\n};\n\n\n// a.k.a.'s:\nSynonomous.prototype.decorateObject = Synonomous.prototype.decorate;\nSynonomous.prototype.decorateArray = Synonomous.prototype.decorateList;\n\n\nfunction drilldown(collection, breadcrumbs) {\n    return breadcrumbs.reduce(function(result, crumb) {\n        return result[crumb] || (result[crumb] = Object.create(null));\n    }, collection);\n}\n\nfunction newBreadcrumbs(crumbs) {\n    if (!crumbs) {\n        crumbs = [];\n    } else if (Array.isArray(crumbs)) {\n        crumbs = crumbs.slice();\n    } else {\n        crumbs = (crumbs + '').split('.');\n    }\n\n    crumbs.toString = crumbsToString;\n\n    return crumbs;\n}\n\n/**\n * @this {Array}\n * @returns {string}\n */\nfunction crumbsToString() {\n    return this.join('.');\n}\n\nfunction injectTransformedValueIntoItem(item, value, transformation) {\n    var transformer = transformers[transformation],\n        path = this.transformations[transformation],\n        pathList = Array.isArray(path) ? path.slice() : path.split('.'),\n        propName = pathList.splice(pathList.length - 1, 1)[0],\n        drillDownContext = drilldown(item, pathList);\n\n    if (this.force || !(propName in drillDownContext)) {\n        drillDownContext[propName] = transformer(value);\n    }\n}\n\n\nmodule.exports = Synonomous;\n","'use strict';\n\nvar Base = require('../Base');\n\n/**\n * @class\n */\nvar Registry = Base.extend('Registry', {\n    initialize: function() {\n        this.items = Object.create(null);\n    },\n\n    /**\n     * @summary Register an item and return it.\n     * @desc Adds an item to the registry using the provided name (or the class name), converted to all lower case.\n     * @param {string} [name] - Case-insensitive item key. If not given, fallsback to `item.prototype.$$CLASS_NAME` or `item.prototype.name` or `item.name`.\n     * @param [item] - If unregistered or omitted, nothing is added and method returns `undefined`.\n     *\n     * > Note: `$$CLASS_NAME` is normally set by providing a string as the (optional) first parameter (`alias`) in your {@link https://www.npmjs.com/package/extend-me|extend} call.\n     *\n     * @returns Newly registered item or `undefined` if unregistered.\n     *\n     * @memberOf Registry#\n     */\n    add: function(name, item) {\n        if (arguments.length === 1) {\n            item = name;\n            name = undefined;\n        }\n\n        if (!item) {\n            return;\n        }\n\n        name = name || item.getClassName && item.getClassName();\n\n        if (!name) {\n            throw new this.HypergridError('Cannot register ' + this.friendlyName() + ' without a name.');\n        }\n\n        this.items[name] = item;\n\n        // update existing keys that differ only in case\n        name = name.toLowerCase();\n        Object.keys(this.items)\n            .filter(function(key) { return key.toLowerCase() === name; })\n            .forEach(function(key) { this.items[key] = item; }, this);\n\n        return item;\n    },\n\n    /**\n     * @summary Register a synonym for an existing item.\n     * @param {string} synonymName\n     * @param {string} existingName\n     * @returns {function|Constructor} The previously registered item this new synonym points to.\n     * @memberOf Registry#\n     */\n    addSynonym: function(synonymName, existingName) {\n        return (this.items[synonymName] = this.items[existingName]);\n    },\n\n    /**\n     * Fetch a registered item.\n     * @param {string} [name]\n     * @returns {*|undefined} A registered item or `undefined` if unregistered.\n     * @memberOf Registry#\n     */\n    get: function(name) {\n        if (!name) {\n            return;\n        }\n\n        var result = this.items[name]; // for performance reasons, do not convert to lower case\n\n        if (!result) {\n            var lowerName = name.toLowerCase(); // name may differ in case only\n            var foundName = Object.keys(this.items).find(function(key) { return lowerName === key.toLowerCase(); });\n\n            result = this.items[foundName];\n\n            if (result) {\n                // Register name as a synonym for the found name for faster access next\n                // time without having to convert to lower case on every get.\n                this.addSynonym(name, foundName);\n            } else {\n                throw new this.HypergridError('Expected \"' + name + '\" to be a case-insensitive match for a registered ' + this.friendlyName() + '.');\n            }\n        }\n\n        return result;\n    },\n\n    friendlyName: function() {\n        if (this.BaseClass) {\n            var name = this.BaseClass.getClassName();\n            name = name && name.replace(/([A-Z])/g, ' $1').trim().toLowerCase();\n        } else {\n            name = singularOf(this.getClassName()).toLowerCase();\n        }\n        name = name || 'item';\n        return indefArtOf(name) + ' ' + name;\n    }\n});\n\nvar endings = [\n    { plural: /ies$/, singular: 'y' },\n    { plural: /s$/, singular: '' }\n];\n\nfunction singularOf(name) {\n    endings.find(function(ending) {\n        if (ending.plural.test(name)) {\n            name = name.replace(ending.plural, ending.singular);\n            return true;\n        }\n    });\n    return name;\n}\n\nfunction indefArtOf(name) {\n    return /^[aeiou]/.test(name) ? 'an' : 'a';\n}\n\n\nmodule.exports = Registry;\n","'use strict';\n\n/**\n * @classdesc Concatenated data model base class.\n * @param {Datasaur} [next] - Omit for origin (actual data source). Otherwise, point to source you are transforming.\n * @param {object} [options] - Not used here at this time. Define properties as needed for custom datasaurs.\n */\nvar DatasaurBase = require('extend-me').Base.extend('DatasaurBase', {\n    isNullObject: true,\n\n    drillDownCharMap: {\n        true: '\\u25bc', // BLACK DOWN-POINTING TRIANGLE aka '▼'\n        false: '\\u25b6', // BLACK RIGHT-POINTING TRIANGLE aka '▶'\n        undefined: '', // leaf rows have no control glyph\n        null: '   ' // indent\n    },\n\n    DataError: DataError,\n\n    initialize: function(next, options) {\n        if (next) {\n            this.handlers = next.handlers;\n            this.next = next;\n            while (next) {\n                this.source = next;\n                next = next.next;\n            }\n        } else {\n            this.handlers = [];\n            this.source = this;\n        }\n\n        this.install(Object.getPrototypeOf(this));\n    },\n\n    /**\n     * @implements dataModelAPI#install\n     * @see {@link https://fin-hypergrid.github.io/core/doc/dataModelAPI.html#install|install}\n     */\n    install: function(api, options) {\n        options = options || {};\n\n        var dataModel = this,\n            keys = getFilteredKeys(api),\n            injectable = options.inject && !Array.isArray(api);\n\n        keys.forEach(function(key) {\n            if (injectable) {\n                if (!findMethod(dataModel, key, options.force)) {\n                    this.source[key] = api[key];\n                }\n            }\n\n            if (!DatasaurBase.prototype[key]) {\n                DatasaurBase.prototype[key] = function() {\n                    if (this.next) {\n                        return this.next[key].apply(this.next, arguments);\n                    }\n                };\n            }\n        }, this);\n    },\n\n    dispatchEvent: function(nameOrEvent) {\n        this.handlers.forEach(function(handler) {\n            handler.call(this, nameOrEvent);\n        }, this);\n    },\n\n    addListener: function(handler) {\n        if (this.handlers.indexOf(handler) < 0) {\n            this.handlers.push(handler);\n        }\n    },\n\n    removeListener: function(handler) {\n        var index = this.handlers.indexOf(handler);\n        if (index >= 0) {\n            delete this.handlers[index];\n        }\n    },\n\n    removeAllListeners: function() {\n        this.handlers.length = 0;\n    },\n\n\n    // DEBUGGING AIDS\n\n    dump: function(max) {\n        max = Math.min(this.getRowCount(), max || Math.max(100, this.getRowCount()));\n        var data = [];\n        var schema = this.getSchema();\n        var fields = schema ? schema.map(function(cs) { return cs.name; }) : this.getHeaders();\n        var cCount = this.getColumnCount();\n        var viewMakesSense = this.viewMakesSense;\n        for (var r = 0; r < max; r++) {\n            var row = {};\n            for (var c = 0; c < cCount; c++) {\n                var val = this.getValue(c, r);\n                if (c === 0 && viewMakesSense) {\n                    val = this.fixIndentForTableDisplay(val);\n                }\n                row[fields[c]] = val;\n            }\n            data[r] = row;\n        }\n        console.table(data);\n    }\n});\n\n/**\n * Searches linked list of objects for implementation of property `key` anywhere on their prototype chain.\n * The search excludes members of `DatasaurBase.prototype` (previously installed forwarding catchers).\n * @param {object} transformer - Data model transformer list, linked backwards one to the previous one by `next` property.\n * The first transformer, the actual data source, has null `next`, meaning start-of-list.\n * @param {string} key - Property to search for.\n * @param {boolean} [remove] - Delete all implementations along prototype chains of all transformers and return falsy.\n * @returns {undefined|function} - Found method implementation or `undefined` if not found.\n */\nfunction findMethod(transformer, key, remove) {\n    do {\n        if (transformer[key]) {\n            if (remove) {\n                for (var link = transformer; link && link !== Object.prototype; link = Object.getPrototypeOf(link)) {\n                    delete link[key];\n                }\n            } else if (transformer[key] !== DatasaurBase.prototype[key]) {\n                return transformer[key];\n            }\n        }\n        transformer = transformer.next;\n    } while (transformer);\n}\n\nvar blacklistAlways = ['constructor', 'initialize', '!keys', '!!keys'];\n\n/**\n * The following keys (array elements or object keys) are filtered out:\n * * Defined as something other than a function, including an accessor (getter and/or setter)\n * * Keys missing from whitelist (not listed in string array `api['!!keys']`, when defined)\n * * Keys blacklisted (listed in string array `api['!keys']` or `blacklistAlways`)\n * @param {string[]|object} api\n * @returns {string[]}\n */\nfunction getFilteredKeys(api) {\n    var whitelist = api.hasOwnProperty('!!keys') && api['!!keys'],\n        blacklist = blacklistAlways.concat(api.hasOwnProperty('!keys') && api['!keys'] || []),\n        keys;\n\n    if (Array.isArray(api)) {\n        keys = api;\n    } else {\n        keys = Object.keys(api).filter(function(key) {\n            return typeof Object.getOwnPropertyDescriptor(api, key).value === 'function';\n        });\n    }\n\n    return keys.filter(function(key) {\n        return !(\n            whitelist && whitelist.indexOf(key) < 0 ||\n            blacklist.indexOf(key) >= 0\n        );\n    });\n}\n\n\n// DataError\n\nfunction DataError(message) {\n    this.message = message;\n}\n\n// extend from `Error'\nDataError.prototype = Object.create(Error.prototype);\n\n// override error name displayed in console\nDataError.prototype.name = 'DataError';\n\n\nmodule.exports = DatasaurBase;\n","/* eslint-env browser */\n\n'use strict';\n\nrequire('../lib/polyfills'); // Installs misc. polyfills into global objects, as needed\n\nvar Point = require('rectangular').Point;\nvar Rectangle = require('rectangular').Rectangle;\nvar _ = require('object-iterators'); // fyi: installs the Array.prototype.find polyfill, as needed\nvar injectCSS = require('inject-stylesheet-template').bind(require('../../css'));\n\nvar Base = require('../Base');\nvar defaults = require('../defaults');\nvar dynamicPropertyDescriptors = require('../lib/dynamicProperties');\nvar Canvas = require('../lib/Canvas');\nvar Renderer = require('../renderer');\nvar SelectionModel = require('../lib/SelectionModel');\nvar Localization = require('../lib/Localization');\nvar Behavior = require('../behaviors/Behavior');\nvar behaviorJSON = require('../behaviors/Local');\nvar cellRenderers = require('../cellRenderers');\nvar cellEditors = require('../cellEditors');\nvar modules = require('./modules');\n\nvar EDGE_STYLES = ['top', 'bottom', 'left', 'right'],\n    RECT_STYLES = EDGE_STYLES.concat(['width', 'height', 'position']);\n\n/**\n * @mixes scrolling.mixin\n * @mixes events.mixin\n * @mixes selection.mixin\n * @mixes themes.mixin\n * @mixes themes.sharedMixin\n * @constructor\n * @classdesc An object representing a Hypergrid.\n * @desc The first parameter, `container`, is optional. If omitted, the `options` parameter is promoted to first position. (Note that the container can also be given in `options.container.`)\n * #### `options.canvasContextAttributes` object (see below)\n * The only currently meaningful property of this object is `alpha`:\n *\n * ```js\n * var gridOptions = {\n *     canvasContextAttributes: { alpha: false }\n * };\n * var myGrid = new Hypergrid(gridOptions);\n * ```\n *\n * `alpha` is a boolean that indicates if the canvas contains an alpha channel. If set to `false`, the browser now knows that the backdrop is always opaque, which can speed up drawing of transparent content and images.\n *\n * This option was added by request although testing failed to show any measurable performance benefit.\n *\n * Use with caution. In particular, if the canvas is set to \"opaque\" (`{alpha: false}`), do _not_ also specify a transparent or translucent color for `grid.properties.backGround` because content may then be drawn with corrupt anti-aliasing (at lest in Chrome v67).\n *\n * Note that such an \"opaque\" canvas can still be made to appear translucent using the CSS `opacity` property — a different effect entirely.\n *\n * Although this option has no apparent performance gains (in Chrome v63), it does permit the graphics context to use [sub-pixel rendering](https://en.wikipedia.org/wiki/Subpixel_rendering) for sharper text as viewed on LCD or LED screens, especially black text on white backgrounds, and especially when viewed on a high-pixel-density display such as an [Apple retina display](https://en.wikipedia.org/wiki/Retina_Display).\n *\n * value | Canvas | Text | Sample\n * ----- | :----: | :--: | ------\n * `{ alpha: true } ` | transparent | regular<br>anti-aliasing | ![regular.png](https://cdn-pro.dprcdn.net/files/acc_645730/ZqurK3)\n * `{ alpha: false }` | opaque | sub-pixel<br>rendering | ![sub-pixel.png](https://cdn-std.dprcdn.net/files/acc_645730/bf3VXh)\n *\n * @param {string|Element} [container] - CSS selector or Element. If omitted (and `options.container` also omitted), Hypergrid first looks for an _empty_ element with an ID of `hypergrid`. If not found, it will create a new element. In either case, the container element has the class name `hypergrid-container` added to its class name list. Finally, if the there is more than one such element with that class name, the element's ID attribute is set to `hypergrid` + _n_ where n is an ordinal one less than the number of such elements.\n * @param {object} [options] - If `options.data` provided, passed to {@link Hypergrid#setData setData}; else if `options.Behavior` provided, passed to {@link Hypergrid#setBehavior setBehavior}.\n * @param {function} [options.Behavior=Local] - _Per {@link Behavior#setData}._\n * @param {DataModel} [options.dataModel] - _Passed to behavior {@link Behavior constructor}._\n * @param {function} [options.DataModel=require('datasaur-local')] - _Passed to behavior {@link Behavior constructor}._\n * @param {function|object[]} [options.data] - _Passed to behavior {@link Behavior constructor}._\n * @param {function|menuItem[]} [options.schema] - _Passed to behavior {@link Behavior constructor}._\n * @param {object} [options.metadata] - _Passed to behavior {@link Behavior constructor}._\n * @param {subgridSpec[]} [options.subgrids=this.properties.subgrids] - _Per {@link Behavior#setData}._\n * @param {pluginSpec|pluginSpec[]} [options.plugins]\n * @param {object} [options.state]\n *\n * @param {string|Element} [options.container] - Alternative to providing `container` (first) parameter above.\n *\n * @param {object} [options.canvasContextAttributes] - Passed to [`HTMLCanvasElement.getContext`](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/getContext). _Please see discussion above._\n *\n * @param {string} [options.localization=Hypergrid.localization]\n * @param {string|string[]} [options.localization.locale=Hypergrid.localization.locale] - The default locale to use when an explicit `locale` is omitted from localizer constructor calls. Passed to `Intl.NumberFomrat` and `Intl.DateFomrat`. See {@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation|Locale identification and negotiation} for more information.\n * @param {string} [options.localization.numberOptions=Hypergrid.localization.numberOptions] - Options passed to [`Intl.NumberFormat`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat) for creating the basic \"number\" localizer.\n * @param {string} [options.localization.dateOptions=Hypergrid.localization.dateOptions] - Options passed to [`Intl.DateTimeFormat`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat) for creating the basic \"date\" localizer.\n *\n * @param {object} [options.margin] - Optional canvas \"margins\" applied to containing div as .left, .top, .right, .bottom. (Default values actually derive from 'grid' stylesheet's `.hypergrid-container` rule.)\n * @param {string} [options.margin.top='0px']\n * @param {string} [options.margin.right='0px']\n * @param {string} [options.margin.bottom='0px']\n * @param {string} [options.margin.left='0px']\n *\n * @param {object} [options.boundingRect] - Optional grid container size & position. (Default values actually derive from 'grid' stylesheet's `.hypergrid-container > div:first-child` rule.)\n * @param {string} [options.boundingRect.height='500px']\n * @param {string} [options.boundingRect.width='auto']\n * @param {string} [options.boundingRect.left='auto']\n * @param {string} [options.boundingRect.top='auto']\n * @param {string} [options.boundingRect.right='auto']\n * @param {string} [options.boundingRect.bottom='auto']\n * @param {string} [options.boundingRect.position='relative']\n */\nvar Hypergrid = Base.extend('Hypergrid', {\n    initialize: function(container, options) {\n        this.selectionInitialize();\n\n        //Optional container argument\n        if (!(typeof container === 'string') && !(container instanceof HTMLElement)) {\n            options = container;\n            container = null;\n        }\n\n        options = options || {};\n\n        this.clearState();\n\n        //Set up the container for a grid instance\n        this.setContainer(\n            container ||\n            options.container ||\n            findOrCreateContainer(options.boundingRect)\n        );\n\n        // Install shared plug-ins (those with a `preinstall` method)\n        Hypergrid.prototype.installPlugins(options.plugins);\n\n        this.lastEdgeSelection = [0, 0];\n        this.isWebkit = navigator.userAgent.toLowerCase().indexOf('webkit') > -1;\n        this.selectionModel = new SelectionModel(this);\n        this.renderOverridesCache = {};\n        this.allowEventHandlers = true;\n        this.dragExtent = new Point(0, 0);\n        this.numRows = 0;\n        this.numColumns = 0;\n        this.clearMouseDown();\n        this.setFormatter(options.localization);\n        this.listeners = {};\n\n        /**\n         * @name cellRenderers\n         * @type {Registry}\n         * @memberOf Hypergrid#\n         */\n        this.cellRenderers = cellRenderers;\n\n        /**\n         * Private version of cell editors registry with a bound `create` method for use by `getCellEditorAt`.\n         * @name cellEditors\n         * @type {Registry}\n         * @memberOf Hypergrid#\n         */\n        this.cellEditors = Object.create(cellEditors);\n        Object.defineProperty(this.cellEditors, 'create', { value: createCellEditor.bind(this) });\n\n        this.initCanvas(options);\n\n        if (options.data) {\n            this.setData(options.data, options); // if no behavior has yet been set, `setData` sets a default behavior\n        } else if (options.Behavior || options.dataModel || options.DataModel) {\n            this.setBehavior(options); // also sets options.data\n        }\n\n        if (options.state) {\n            this.loadState(options.state);\n        }\n\n        /**\n         * @name plugins\n         * @summary Dictionary of named instance plug-ins.\n         * @desc See examples for how to reference (albeit there is normally no need to reference plugins directly).\n         *\n         * For the dictionary of _shared_ plugins, see {@link Hypergrid.plugins|plugins} (a property of the constructor).\n         * @example\n         * var instancePlugins = myGrid.plugins;\n         * var instancePlugins = this.plugins; // internal use\n         * var myInstancePlugin = myGrid.plugins.myInstancePlugin;\n         * @type {object}\n         * @memberOf Hypergrid#\n         */\n        this.plugins = {};\n\n        // Install instance plug-ins (those that are constructors OR have an `install` method)\n        this.installPlugins(options.plugins);\n\n        // Listen for propagated mouseclicks. Used for aborting edit mode.\n        document.addEventListener('mousedown', this.mouseCatcher = function() {\n            this.abortEditing();\n        }.bind(this));\n\n        setTimeout(this.repaint.bind(this));\n\n        Hypergrid.grids.push(this);\n\n        this.resetGridBorder('Top');\n        this.resetGridBorder('Right');\n        this.resetGridBorder('Bottom');\n        this.resetGridBorder('Left');\n    },\n\n    /**\n     * Be a responsible citizen and call this function on instance disposal!\n     * @memberOf Hypergrid#\n     */\n    terminate: function() {\n        document.removeEventListener('mousedown', this.mouseCatcher);\n        this.behavior.dataModel.removeListener(this.behavior.boundDispatchEvent);\n        this.removeAllEventListeners(true);\n        this.canvas.stop();\n\n        var div = this.div;\n        while (div.hasChildNodes()) { div.removeChild(div.firstChild); }\n\n        Hypergrid.grids.splice(Hypergrid.grids.indexOf(this), 1);\n    },\n\n\n    resetGridBorder: function(edge) {\n        edge = edge || '';\n\n        var propName = 'gridBorder' + edge,\n            styleName = 'border' + edge,\n            props = this.properties,\n            border = props[propName];\n\n        switch (border) {\n            case true:\n                border = props.lineWidth + 'px solid ' + props.lineColor;\n                break;\n            case false:\n                border = null;\n                break;\n        }\n        this.canvas.canvas.style[styleName] = border;\n    },\n\n    modules: modules, // Mutate or replace prototype prop to affect all grid instances; set instance prop to affect just instance.\n\n    /**\n     * A null object behavior serves as a place holder.\n     * @type {object}\n     * @memberOf Hypergrid#\n     */\n    behavior: null,\n\n    /**\n     * Cached result of webkit test.\n     * @type {boolean}\n     * @memberOf Hypergrid#\n     */\n    isWebkit: true,\n\n    /**\n     * The pixel location of an initial mousedown click, either for editing a cell or for dragging a selection.\n     * @type {Point}\n     * @memberOf Hypergrid#\n     */\n    mouseDown: [],\n\n    /**\n     * The extent from the mousedown point during a drag operation.\n     * @type {Point}\n     * @memberOf Hypergrid#\n     */\n    dragExtent: null,\n\n    /**\n     * The instance of the grid's selection model.\n     * May or may not contain any cell, row, and/or column selections.\n     * @type {SelectionModel}\n     * @memberOf Hypergrid#\n     */\n    selectionModel: null,\n\n    /**\n     * The instance of the currently active cell editor.\n     * Will be `null` when not editing.\n     * @type {CellEditor}\n     * @memberOf Hypergrid#\n     */\n    cellEditor: null,\n\n    /**\n     * Non-`null` members represent additional things to render, after rendering the grid, such as the column being dragged.\n     * @type {object}\n     * @memberOf Hypergrid#\n     */\n    renderOverridesCache: {},\n\n    /**\n     * The pixel location of the current hovered cell.\n     * @todo Need to detect hovering over bottom totals.\n     * @type {Point}\n     * @memberOf Hypergrid#\n     */\n    hoverCell: null,\n\n    lastEdgeSelection: null,\n\n    /**\n     * @memberOf Hypergrid#\n     */\n    setAttribute: function(attribute, value) {\n        this.div.setAttribute(attribute, value);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     */\n    clearState: function() {\n        /**\n         * @name properties\n         * @type {object}\n         * @summary Object containing the properties of the grid.\n         * @desc Grid properties objects have the following structure:\n         * 1. User-configured properties and dynamic properties are in the \"own\" layer.\n         * 2. Extends from the theme object.\n         * 3. The theme object in turn extends from the {@link module:defaults|defaults} object.\n         *\n         * Note: Any changes the application developer may wish to make to the {@link module:defaults|defaults}\n         * object should be made _before_ reaching this point (_i.e.,_ prior to any grid instantiations).\n         * @memberOf Hypergrid#\n         */\n        this.properties = Object.defineProperties(this.initThemeLayer(), {\n            grid: { value: this },\n            var: { value: new Var() }\n        });\n\n        // For all default props of object type, if a dynamic prop, invoke setter; else deep clone it so changes\n        // made to inner props won't go to object on theme or defaults layers which are shared by other instances.\n        Object.keys(defaults).forEach(function(key) {\n            var value = defaults[key];\n            if (typeof value === 'object') {\n                if (dynamicPropertyDescriptors[key]) {\n                    this[key] = value; // invoke dynamic prop setter\n                } else {\n                    this[key] = deepClone(value); // just a plain object\n                }\n            }\n        }, this.properties);\n    },\n\n    /**\n     * @desc Clear out all state settings, data (rows), and schema (columns) of a grid instance.\n     * @param {object} [options]\n     * @param {object} [options.subgrids] - Consumed by {@link Behavior#reset}.\n     * If omitted, previously established subgrids list is reused.\n     * @memberOf Hypergrid#\n     */\n    reset: function(options) {\n        this.clearState();\n\n        this.removeAllEventListeners();\n\n        this.lastEdgeSelection = [0, 0];\n        this.selectionModel.reset();\n        this.renderOverridesCache = {};\n        this.clearMouseDown();\n        this.dragExtent = new Point(0, 0);\n\n        this.numRows = 0;\n        this.numColumns = 0;\n\n        this.vScrollValue = 0;\n        this.hScrollValue = 0;\n\n        this.cancelEditing();\n\n        this.sbPrevVScrollValue = null;\n        this.sbPrevHScrollValue = null;\n\n        this.hoverCell = null;\n        this.scrollingNow = false;\n        this.lastEdgeSelection = [0, 0];\n\n        this.behavior.reset({\n            subgrids: options && options.subgrids\n        });\n\n        this.renderer.reset();\n        this.canvas.resize();\n        this.behaviorChanged();\n\n        this.refreshProperties();\n    },\n\n    /** @typedef {object|function|Array} pluginSpec\n     * @desc One of:\n     * * simple API - a plain object with an `install` method\n     * * object API - an object constructor\n     * * array:\n     *    * first element is an optional name for the API or the newly instantiated object\n     *    * next element (or first element when not a string) is the simple or object API\n     *    * remaining arguments are optional arguments for the object constructor\n     * * falsy value such as `undefined` - ignored\n     *\n     * The API may have a `name` or `$$CLASS_NAME` property.\n     */\n    /**\n     * @summary Install plugins.\n     * @desc Plugin installation:\n     * * Each simple API is installed by calling it's `install` method with `this` as first arg + any additional args listed in the `pluginSpec` (when it is an array).\n     * * Each object API is installed by instantiating it's constructor with `this` as first arg + any additional args listed in the `pluginSpec` (when it is an array).\n     *\n     * The resulting plain object or instantiated objects may be named by (in priority order):\n     * 1. if `pluginSpec` contains an array and first element is a string\n     * 2. object has a `name` property\n     * 3. object has a `$$CLASS_NAME` property\n     *\n     * If named, a reference to each object is saved in `this.plugins`. If the plug-in is unnamed, no reference is kept.\n     *\n     * There are two types of plugin installations:\n     * * Preinstalled plugins which are installed on the prototype. These are simple API plugins with a `preinstall` method called with the `installPlugins` calling context as the first argument. Preinstallations are automatically performed whenever a grid is instantiated (at the beginning of the constructor), by calling `installPlugins` with `Hypergrid.prototype` as the calling context.\n     * * Regular plugins which are installed on the instance. These are simple API plugins with an `install` method, as well as all object API plugins (constructors), called with the `installPlugins` calling context as the first argument. These installations are automatically performed whenever a grid is instantiated (at the end of the constructor), called with the new grid instance as the calling context.\n     *\n     * The \"`installPlugins` calling context\" means either the grid instance or its prototype, depending on how this method is called.\n     *\n     * Plugins may have both `preinstall` _and_ `install` methods, in which case both will be called. However, note that in any case, `install` methods on object API plugins are ignored.\n     * @param {pluginSpec|pluginSpec[]} [plugins] - The plugins to install. If omitted, the call is a no-op.\n     * @memberOf Hypergrid#\n     */\n    installPlugins: function(plugins) {\n        var shared = this === Hypergrid.prototype; // Do shared (\"preinstalled\") plugins (if any)\n\n        if (!plugins) {\n            return;\n        } else if (!Array.isArray(plugins)) {\n            plugins = [plugins];\n        }\n\n        plugins.forEach(function(plugin) {\n            var name, args, hash;\n\n            if (!plugin) {\n                return; // ignore falsy plugin spec\n            }\n\n            // set first arg of constructor to `this` (the grid instance)\n            // set first arg of `install` method to `this` (the grid instance)\n            // set first two args of `preinstall` method to `this` (the Hypergrid prototype) and the Behavior prototype\n            args = [this];\n            if (shared) {\n                args.push(Behavior.prototype);\n            }\n\n            if (Array.isArray(plugin)) {\n                if (!plugin.length) {\n                    plugin = undefined;\n                } else if (typeof plugin[0] !== 'string') {\n                    args = args.concat(plugin.slice(1));\n                    plugin = plugin[0];\n                } else if (plugin.length >= 2) {\n                    args = args.concat(plugin.slice(2));\n                    name = plugin[0];\n                    plugin = plugin[1];\n                } else {\n                    plugin = undefined;\n                }\n            }\n\n            if (!plugin) {\n                return; // ignore empty array or array with single string element\n            }\n\n            // Derive API name if not given in pluginSpec\n            name = name || plugin.name || plugin.$$CLASS_NAME;\n            if (name) {\n                // Translate first character to lower case\n                name = name.substr(0, 1).toLowerCase() + name.substr(1);\n            }\n\n            if (shared) {\n                // Execute the `preinstall` method\n                hash = this.constructor.plugins;\n                if (plugin.preinstall && !hash[name]) {\n                    plugin.preinstall.apply(plugin, args);\n                }\n            } else { // instance plug-ins:\n                hash = this.plugins;\n                if (typeof plugin === 'function') {\n                    // Install \"object API\" by instantiating\n                    plugin = this.createApply(plugin, args);\n                } else if (plugin.install) {\n                    // Install \"simple API\" by calling its `install` method\n                    plugin.install.apply(plugin, args);\n                } else if (!plugin.preinstall) {\n                    throw new Base.prototype.HypergridError('Expected plugin (a constructor; or an API with a `preinstall` method and/or an `install` method).');\n                }\n            }\n\n            if (name) {\n                hash[name] = plugin;\n            }\n\n        }, this);\n    },\n\n    /**\n     * @summary Uninstall all uninstallable plugins or just named plugins.\n     * @desc Calls `uninstall` on plugins that define such a method.\n     *\n     * To uninstall \"preinstalled\" plugins, call with `Hypergrid.prototype` as context.\n     *\n     * For convenience, the following args are passed to the call:\n     * * `this` - the plugin to be uninstalled\n     * * `grid` - the hypergrid object\n     * * `key` - name of the plugin to be uninstalled (_i.e.,_ key in `plugins`)\n     * * `plugins` - the plugins hash (a.k.a. `grid.plugins`)\n     * @param {string|stirng[]} [pluginNames] If provided, limit uninstall to the named plugin (string) or plugins (string[]).\n     * @memberOf Hypergrid#\n     */\n    uninstallPlugins: function(pluginNames) {\n        if (!pluginNames) {\n            pluginNames = [];\n        } else if (!Array.isArray(pluginNames)) {\n            pluginNames = [pluginNames];\n        }\n        _(this.plugins).each(function(plugin, key, plugins) {\n            if (\n                plugins.hasOwnProperty(key) &&\n                pluginNames.indexOf(key) >= 0 &&\n                plugin.uninstall\n            ) {\n                plugin.uninstall(this, key, plugins);\n            }\n        }, this);\n    },\n\n    computeCellsBounds: function() {\n        this.renderer.computeCellsBounds();\n    },\n\n    setFormatter: function(options) {\n        options = options || {};\n        this.localization = new Localization(\n            options.locale || Hypergrid.localization.locale,\n            options.numberOptions || Hypergrid.localization.numberOptions,\n            options.dateOptions || Hypergrid.localization.dateOptions\n        );\n    },\n\n    getFormatter: function(localizerName) {\n        return this.localization.get(localizerName).format;\n    },\n\n    formatValue: function(localizerName, value) {\n        var formatter = this.getFormatter(localizerName);\n        return formatter(value);\n    },\n\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Set the cell under the cursor.\n     * @param {CellEvent} cellEvent\n     */\n    setHoverCell: function(cellEvent) {\n        var hoverCell = this.hoverCell;\n        if (!hoverCell || !hoverCell.equals(cellEvent.gridCell)) {\n            this.hoverCell = cellEvent.gridCell;\n            if (hoverCell) {\n                this.fireSyntheticOnCellExitEvent(cellEvent);\n            }\n            this.fireSyntheticOnCellEnterEvent(cellEvent);\n            this.repaint();\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Amend properties for this hypergrid only.\n     * @param {object} moreProperties - A simple properties hash.\n     */\n    addProperties: function(properties) {\n        Object.assign(this.properties, properties);\n        this.refreshProperties();\n    },\n\n    /**\n     * @todo deprecate this in favor of making properties dynamic instead (for those that need to be)\n     * @memberOf Hypergrid#\n     * @desc Utility function to push out properties if we change them.\n     * @param {object} properties - An object of various key value pairs.\n     */\n    refreshProperties: function() {\n        this.behaviorShapeChanged();\n        this.behavior.defaultRowHeight = null;\n        this.behavior.autosizeAllColumns();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Set the state object to return to the given user configuration.\n     * @param {object} state - A memento object.\n     * @see [Memento pattern](http://en.wikipedia.org/wiki/Memento_pattern)\n     */\n    setState: function(state) {\n        this.addState(state, true);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Add to the state object.\n     * @param {object} state\n     */\n    addState: function(state, settingState) {\n        this.behavior.addState(state, settingState);\n        this.refreshProperties();\n        this.behaviorChanged();\n    },\n\n    getState: function() {\n        return this.behavior.getState();\n    },\n\n    loadState: function(state) {\n        this.behavior.setState(state);\n    },\n\n    /**\n     * @todo Only output values when they differ from defaults (deep compare needed).\n     * @param {object} [options]\n     * @param {string[]} [options.blacklist] - List of grid properties to exclude. Pertains to grid own properties only.\n     * @param {boolean} [options.compact] - Run garbage collection first. The only property this current affects is `properties.calculators` (removes unused calculators).\n     * @param {number|string} [options.space='\\t'] - For no space, give `0`. (See {@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Local/stringify|JSON.stringify}'s `space` param other options.)\n     * @param {function} [options.headerify] - If your headers were generated by a function (taking column name as a parameter), give a reference to that function here to avoid persisting headers that match the generated string.\n     * @memberOf Hypergrid#\n     */\n    saveState: function(options) {\n        options = options || {};\n\n        var space = options.space === undefined ? '\\t' : options.space,\n            properties = this.properties,\n            calculators = properties.calculators,\n            blacklist = options.blacklist = options.blacklist || [];\n\n        blacklist.push('columnProperties'); // Never output this synonym of 'columns'\n\n        if (calculators) {\n            if (options.compact) {\n                var columns = this.behavior.getColumns();\n                Object.keys(calculators).forEach(function(key) {\n                    if (!columns.find(function(column) {\n                            return column.properties.calculator === calculators[key];\n                        })) {\n                        delete calculators[key];\n                    }\n                });\n            }\n            calculators.toJSON = stringifyFunctions;\n        }\n\n        // Temporarily copy the given headerify function for access by columns getter\n        this.headerify = options.headerify;\n\n        var json = JSON.stringify(properties, function(key, value) {\n            if (this === properties && options.blacklist.indexOf(key) >= 0) {\n                value = undefined; // JSON.stringify ignores undefined props\n            } else if (key === 'calculator') {\n                if (calculators) {\n                    // convert function reference to registry key\n                    value = Object.keys(calculators).find(function(key) {\n                        return calculators[key] === value;\n                    });\n                } else {\n                    // registry may not exist if Column.calculator setter was used directly so just save as is\n                    value = value.toString();\n                }\n            }\n            return value;\n        }, space);\n\n        // Remove the temporary copy\n        delete this.headerify;\n\n        return json;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {object} The initial mouse position on a mouse down event for cell editing or a drag operation.\n     * @memberOf Hypergrid#\n     */\n    getMouseDown: function() {\n        if (this.mouseDown.length) {\n            return this.mouseDown[this.mouseDown.length - 1];\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Remove the last item from the mouse down stack.\n     */\n    popMouseDown: function() {\n        var result;\n        if (this.mouseDown.length) {\n            result = this.mouseDown.pop();\n        }\n        return result;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Empty out the mouse down stack.\n     */\n    clearMouseDown: function() {\n        this.mouseDown = [new Point(-1, -1)];\n        this.dragExtent = null;\n    },\n\n    /**\n     * Set the mouse point that initiated a cell edit or drag operation.\n     * @param {Point} point\n     * @memberOf Hypergrid#\n     */\n    setMouseDown: function(point) {\n        this.mouseDown.push(point);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {Point} The extent point of the current drag selection rectangle.\n     */\n    getDragExtent: function() {\n        return this.dragExtent;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Set the extent point of the current drag selection operation.\n     * @param {Point} point\n     */\n    setDragExtent: function(point) {\n        this.dragExtent = point;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc This function is a callback from the HypergridRenderer sub-component. It is called after each paint of the canvas.\n     */\n    gridRenderedNotification: function() {\n        if (this.cellEditor) {\n            this.cellEditor.gridRenderedNotification();\n        }\n\n        // Grid render also calculates mix width for each column.\n        // Check here to see if there was a change and if so immediately re-render\n        // before end-of-thread so user sees only the results of the 2nd render.\n        // Mostly important on first render after setData. Note that stack overflow\n        // will not happen because this will only be called once per data change.\n        if (this.checkColumnAutosizing()) {\n            this.paintNow();\n        }\n\n        this.fireSyntheticGridRenderedEvent();\n    },\n\n    tickNotification: function() {\n        this.fireSyntheticTickEvent();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc The grid has just been rendered, make sure the column widths are optimal.\n     */\n    checkColumnAutosizing: function() {\n        var autoSized = this.behavior.checkColumnAutosizing(false);\n        if (autoSized) {\n            this.behaviorShapeChanged();\n        }\n        return autoSized;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Conditionally copy to clipboard.\n     * @desc If we have focus, copy our current selection data to the system clipboard.\n     * @param {event} event - The copy system event.\n     */\n    checkClipboardCopy: function(event) {\n        if (this.hasFocus()) {\n            event.preventDefault();\n            var csvData = this.getSelectionAsTSV();\n            event.clipboardData.setData('text/plain', csvData);\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {boolean} We have focus.\n     */\n    hasFocus: function() {\n        return this.canvas.hasFocus();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Set the Behavior object for this grid control.\n     * @desc Called when `options.Behavior` from:\n     * * Hypergrid constructor\n     * * `setData` when not called explicitly before then\n     * @param {object} [options] - _Per {@link Behavior#setData}._\n     * @param {Behavior} [options.Behavior=Local] - The behavior (model) can be either a constructor or an instance.\n     * @param {DataModel} [options.dataModel] - A fully instantiated data model object.\n     * @param {function} [options.DataModel=require('datasaur-local')] - Data model will be instantiated from this constructor unless `options.dataModel` was given.\n     * @param {object} [options.metadata] - Value to be passed to `setMetadataStore` if the data model has changed.\n     * @param {dataRowObject[]} [options.data] - _Per {@link Behavior#setData}._\n     * @param {function|menuItem[]} [options.schema] - _Per {@link Behavior#setData}.\n     */\n    setBehavior: function(options) {\n        var Behavior = options && options.Behavior || behaviorJSON;\n        this.behavior = new Behavior(this, options);\n        this.initScrollbars();\n        this.refreshProperties();\n        this.behavior.reindex();\n    },\n\n    /**\n     * Number of _visible_ columns.\n     * @memberOf Hypergrid#\n     * @returns {number} The number of columns.\n     */\n    getColumnCount: function() {\n        return this.behavior.getActiveColumnCount();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The number of rows.\n     */\n    getRowCount: function() {\n        return this.behavior.getRowCount();\n    },\n\n    getRow: function(y) {\n        return this.behavior.getRow(y);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @see {@link Behavior#getValue}\n     */\n    getValue: function(x, y, dataModel) {\n        return this.behavior.getValue(x, y, dataModel);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @see {@link Behavior#setValue}\n     */\n    setValue: function(x, y, value, dataModel) {\n        this.behavior.setValue(x, y, value, dataModel);\n     },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Set the underlying datasource.\n     * @desc This can be done dynamically.\n     * @param {function|object[]} dataRows - May be:\n     * * An array of congruent raw data objects.\n     * * A function returning same.\n     * @param {object} [options] - _(See also {@link Behavior#setData} for additional options.)_\n     * @param {Behavior} [options.Behavior=Local] - The behavior (model) can be either a constructor or an instance.\n     * @param {DataModel} [options.dataModel] - _Passed to behavior {@link Behavior constructor} (when `options.Behavior` given)._\n     * @param {function} [options.DataModel=require('datasaur-local')] - _Passed to behavior {@link Behavior constructor} (when `options.Behavior` given)._\n     * @param {object} [options.metadata] - _Passed to behavior {@link Behavior constructor} (when `options.Behavior` given)._\n     * @param {dataRowObject[]} [options.data] - _Passed to behavior {@link Behavior constructor} (when `options.Behavior` given)._\n     * @param {function|menuItem[]} [options.schema] - _Passed to behavior {@link Behavior constructor} (when `options.Behavior` given)._\n     */\n    setData: function(dataRows, options) {\n        if (!this.behavior) {\n            this.setBehavior(options);\n        }\n        this.behavior.setData(dataRows, options);\n        this.setInfo(dataRows.length ? '' : this.properties.noDataMessage);\n        this.behavior.shapeChanged();\n    },\n\n    setInfo: function(messages) {\n        this.renderer.setInfo(messages);\n    },\n\n    /**\n     * @memberOf Behavior#\n     */\n    reindex: function() {\n        if (paintLoopRunning.call(this)) {\n            this.needsReindex = true;\n        } else {\n            this.behavior.reindex();\n        }\n        this.behaviorShapeChanged();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc I've been notified that the behavior has changed.\n     */\n    behaviorChanged: function() {\n        if (this.divCanvas) {\n            if (this.numColumns !== this.getColumnCount() || this.numRows !== this.getRowCount()) {\n                this.numColumns = this.getColumnCount();\n                this.numRows = this.getRowCount();\n                this.behaviorShapeChanged();\n            } else {\n                this.behaviorStateChanged();\n            }\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc The dimensions of the grid data have changed. You've been notified.\n     */\n    behaviorShapeChanged: function() {\n        if (paintLoopRunning.call(this)) {\n            this.needsShapeChanged = true;\n            this.canvas.requestRepaint();\n        } else if (this.divCanvas) {\n            this.synchronizeScrollingBoundaries(); // calls computeCellsBounds\n            this.repaint();\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc The dimensions of the grid data have changed. You've been notified.\n     */\n    behaviorStateChanged: function() {\n        if (paintLoopRunning.call(this)) {\n            this.needsStateChanged = true;\n            this.canvas.requestRepaint();\n        } else if (this.divCanvas) {\n            this.computeCellsBounds();\n            this.repaint();\n        }\n    },\n\n    /**\n     * Called from renderer/index.js\n     */\n    deferredBehaviorChange: function() {\n        if (this.needsReindex) {\n            this.behavior.reindex();\n            this.needsReindex = false;\n        }\n\n        if (this.needsShapeChanged) {\n            if (this.divCanvas) {\n                this.synchronizeScrollingBoundaries(); // calls computeCellsBounds\n            }\n        } else if (this.needsStateChanged) {\n            if (this.divCanvas) {\n                this.computeCellsBounds();\n            }\n        }\n\n        this.needsShapeChanged = this.needsStateChanged = false;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {Rectangle} My bounds.\n     */\n    getBounds: function() {\n        return this.renderer.getBounds();\n    },\n\n    repaint: function() {\n        var canvas = this.canvas;\n        if (canvas) {\n            if (this.properties.repaintImmediately) {\n                this.paintNow();\n            } else {\n                canvas.repaint();\n            }\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Paint immediately in this microtask.\n     */\n    paintNow: function() {\n        if (this.behavior.columnsCreated) {\n            this.canvas.paintNow();\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Set the container for a grid instance\n     * @private\n     */\n    setContainer: function(div) {\n        this.initContainer(div);\n        this.initRenderer();\n        // injectGridElements.call(this);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Initialize container\n     * @private\n     */\n    initContainer: function(div) {\n        if (typeof div === 'string') {\n            div = document.querySelector(div);\n        }\n\n        //Default Position and height to ensure DnD works\n        if (!div.style.position) {\n            div.style.position = null; // revert to stylesheet value\n        }\n\n        if (div.clientHeight < 1) {\n            div.style.height = null; // revert to stylesheet value\n        }\n\n        injectCSS('grid');\n\n        //prevent the default context menu for appearing\n        div.oncontextmenu = function(event) {\n            event.stopPropagation();\n            event.preventDefault();\n            return false;\n        };\n\n        div.removeAttribute('tabindex');\n\n        div.classList.add('hypergrid-container');\n        div.id = div.id || 'hypergrid' + (document.querySelectorAll('.hypergrid-container').length - 1 || '');\n\n        this.div = div;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Initialize drawing surface.\n     * @param {object} [options]\n     * @param {object} [options.margin] - Optional canvas \"margins\" applied to containing div as .left, .top, .right, .bottom. (Default values actually derive from 'grid' stylesheet's `.hypergrid-container` rule.)\n     * @param {string} [options.margin.top='0px']\n     * @param {string} [options.margin.right='0px']\n     * @param {string} [options.margin.bottom='0px']\n     * @param {string} [options.margin.left='0px']\n     * @private\n     */\n    initCanvas: function(options) {\n        if (!this.divCanvas) {\n            var divCanvas = document.createElement('div');\n\n            setStyles(divCanvas, options && options.margin, EDGE_STYLES);\n\n            this.div.appendChild(divCanvas);\n\n            var canvas = new Canvas(divCanvas, this.renderer, options && options.contextAttributes);\n            canvas.canvas.classList.add('hypergrid');\n\n            this.divCanvas = divCanvas;\n            this.canvas = canvas;\n\n            this.delegateCanvasEvents();\n        }\n    },\n\n    convertViewPointToDataPoint: function(unscrolled) {\n        return this.behavior.convertViewPointToDataPoint(unscrolled);\n    },\n\n    convertDataPointToViewPoint: function(dataPoint) {\n        return this.behavior.convertDataPointToViewPoint(dataPoint);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Switch the cursor for a grid instance.\n     * @param {string|string[]} cursorName - A well know cursor name.\n     * @see [cursor names](http://www.javascripter.net/faq/stylesc.htm)\n     */\n    beCursor: function(cursorName) {\n        if (!cursorName) {\n            cursorName = ['default'];\n        } else if (!Array.isArray(cursorName)) {\n            cursorName = [cursorName];\n        }\n        cursorName.forEach(function(name) { this.cursor = name; }, this.div.style);\n    },\n\n    /**\n     * @summary Shut down the current cell editor and save the edited value.\n     * @returns {boolean} One of:\n     * * `false` - Editing BUT could not abort.\n     * * `true` - Not editing OR was editing AND abort was successful.\n     * @memberOf Hypergrid#\n     */\n    stopEditing: function() {\n        return !this.cellEditor || this.cellEditor.stopEditing();\n    },\n\n    /**\n     * @summary Shut down the current cell editor without saving the edited val\n     * @returns {boolean} One of:\n     * * `false` - Editing BUT could not abort.\n     * * `true` - Not editing OR was editing AND abort was successful.\n     * @memberOf Hypergrid#\n     */\n    cancelEditing: function() {\n        return !this.cellEditor || this.cellEditor.cancelEditing();\n    },\n\n    /**\n     * @summary Give cell editor opportunity to cancel (or something) instead of stop .\n     * @returns {boolean} One of:\n     * * `false` - Editing BUT could not abort.\n     * * `true` - Not editing OR was editing AND abort was successful.\n     * @memberOf Hypergrid#\n     */\n    abortEditing: function() {\n        return !this.cellEditor || (\n            this.cellEditor.abortEditing ? this.cellEditor.abortEditing() : this.cellEditor.stopEditing()\n        );\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {Rectangle} The pixel coordinates of just the center 'main\" data area.\n     */\n    getDataBounds: function() {\n        var b = this.canvas.bounds;\n        return new Rectangle(0, 0, b.origin.x + b.extent.x, b.origin.y + b.extent.y);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Open the cell-editor for the cell at the given coordinates.\n     * @param {CellEvent} event - Coordinates of \"edit point\" (gridCell.x, dataCell.y).\n     * @return {undefined|CellEditor} The cellEditor determined from the cell's render properties, which may be modified by logic added by overriding {@link DataModel#getCellEditorAt|getCellEditorAt}.\n     */\n    editAt: function(event) {\n        var cellEditor;\n\n        this.abortEditing(); // if another editor is open, close it first\n\n        if (\n            event.isDataColumn &&\n            event.properties[event.isDataRow ? 'editable' : 'filterable'] &&\n            (cellEditor = this.getCellEditorAt(event))\n        ) {\n            cellEditor.beginEditing();\n        }\n\n        return cellEditor;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @param {number} columnIndex - The column index in question.\n     * @returns {boolean} The given column is fully visible.\n     */\n    isColumnVisible: function(columnIndex) {\n        return this.renderer.isColumnVisible(columnIndex);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @param {number} r - The raw row index in question.\n     * @returns {boolean} The given row is fully visible.\n     */\n    isDataRowVisible: function(r) {\n        return this.renderer.isDataRowVisible(r);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @param {number} c - The column index in question.\n     * @param {number} rn - The grid row index in question.\n     * @returns {boolean} The given cell is fully is visible.\n     */\n    isDataVisible: function(c, rn) {\n        return this.isDataRowVisible(rn) && this.isColumnVisible(c);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Scroll in the `offsetX` direction if column index `colIndex` is not visible.\n     * @param {number} colIndex - The column index in question.\n     * @param {number} offsetX - The direction and magnitude to scroll if we need to.\n     * @return {boolean} Column is visible.\n     */\n    insureModelColIsVisible: function(colIndex, offsetX) {\n        var maxCols = this.getColumnCount() - 1, // -1 excludes partially visible columns\n            indexToCheck = colIndex + Math.sign(offsetX),\n            visible = !this.isColumnVisible(indexToCheck) || colIndex === maxCols;\n\n        if (visible) {\n            //the scroll position is the leftmost column\n            this.scrollBy(offsetX, 0);\n        }\n\n        return visible;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Scroll in the `offsetY` direction if column index c is not visible.\n     * @param {number} rowIndex - The column index in question.\n     * @param {number} offsetX - The direction and magnitude to scroll if we need to.\n     * @return {boolean} Row is visible.\n     */\n    insureModelRowIsVisible: function(rowIndex, offsetY) {\n        var maxRows = this.getRowCount() - 1, // -1 excludes partially visible rows\n            scrollOffset = (offsetY > -1) ? 1 : 0, // 1 to keep one blank line below active cell, 0 to keep zero lines above active cell\n            indexToCheck = rowIndex + scrollOffset,\n            visible = !this.isDataRowVisible(indexToCheck) || rowIndex === maxRows;\n\n        if (visible) {\n            //the scroll position is the topmost row\n            this.scrollBy(0, offsetY);\n        }\n\n        return visible;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Answer which data cell is under a pixel value mouse point.\n     * @param {mousePoint} mouse - The mouse point to interrogate.\n     */\n    getGridCellFromMousePoint: function(mouse) {\n        return this.renderer.getGridCellFromMousePoint(mouse);\n    },\n\n    /**\n     * @param {Point} gridCell - The pixel location of the mouse in physical grid coordinates.\n     * @returns {Rectangle} The pixel based bounds rectangle given a data cell point.\n     * @memberOf Hypergrid#\n     */\n    getBoundsOfCell: function(gridCell) {\n        var b = this.renderer.getBoundsOfCell(gridCell.x, gridCell.y);\n\n        //convert to a proper rectangle\n        return new Rectangle(b.x, b.y, b.width, b.height);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc This is called by the fin-canvas when a resize occurs.\n     */\n    resized: function() {\n        this.behaviorShapeChanged();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary A click event occurred.\n     * @desc Determine the cell and delegate to the behavior (model).\n     * @see {@link Local#cellClicked}\n     * @param {CellEvent} event - The cell event to interrogate.\n     * @returns {@link DataModel#toggleRow}'s return value which may or may not be implemented.\n     */\n    cellClicked: function(event) {\n        return this.behavior.cellClicked(event);\n    },\n\n    /**\n     * To intercept link clicks, override this method (either on the prototype to apply to all grid instances or on an instance to apply to a specific grid instance).\n     * @memberOf Hypergrid#\n     */\n    windowOpen: function(url, name, features, replace) {\n        return window.open.apply(window, arguments);\n    },\n\n    /**\n     * @param {number} [begin]\n     * @param {nubmer} [end]\n     * * @returns {Column[]} A copy of the all columns array by passing the params to `Array.prototype.slice`.\n     */\n    getColumns: function(begin, end) {\n        var columns = this.behavior.getColumns();\n        return columns.slice.apply(columns, arguments);\n    },\n\n    /**\n     * @param {number} [begin]\n     * @param {nubmer} [end]\n     * * @returns {Column[]} A copy of the active columns array by passing the params to `Array.prototype.slice`.\n     */\n    getActiveColumns: function(begin, end) {\n        var columns = this.behavior.getActiveColumns();\n        return columns.slice.apply(columns, arguments);\n    },\n\n    getHiddenColumns: function() {\n        //A non in-memory behavior will be more troublesome\n        return this.behavior.getHiddenColumns();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Request input focus.\n     */\n    takeFocus: function() {\n        var wasCellEditor = this.cellEditor;\n        this.stopEditing();\n        if (!wasCellEditor) {\n            this.canvas.takeFocus();\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Request focus for our cell editor.\n     */\n    editorTakeFocus: function() {\n        if (this.cellEditor) {\n            return this.cellEditor.takeFocus();\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Note that \"viewable rows\" includes any partially viewable rows.\n     * @returns {number} The number of viewable rows.\n     */\n    getVisibleRows: function() {\n        return this.renderer.getVisibleRows();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Note that \"viewable columns\" includes any partially viewable columns.\n     * @returns {number} The number of viewable columns.\n     */\n    getVisibleColumns: function() {\n        return this.renderer.getVisibleColumns();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Initialize the renderer sub-component.\n     */\n    initRenderer: function() {\n        this.renderer = this.renderer || new Renderer(this);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The width of the given column.\n     * @param {number} columnIndex - The untranslated column index.\n     */\n    getColumnWidth: function(columnIndex) {\n        return this.behavior.getColumnWidth(columnIndex);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Set the width of the given column.\n     * @param {number} columnIndex - The untranslated column index.\n     * @param {number} columnWidth - The width in pixels.\n     */\n    setColumnWidth: function(columnIndex, columnWidth) {\n        if (this.abortEditing()) {\n            this.behavior.setColumnWidth(columnIndex, columnWidth);\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The total width of all the fixed columns.\n     */\n    getFixedColumnsWidth: function() {\n        return this.behavior.getFixedColumnsWidth();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The height of the given row\n     * @param {number} rowIndex - The untranslated fixed column index.\n     */\n    getRowHeight: function(rowIndex, dataModel) {\n        return this.behavior.getRowHeight(rowIndex, dataModel);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Set the height of the given row.\n     * @param {number} rowIndex - The row index.\n     * @param {number} rowHeight - The width in pixels.\n     */\n    setRowHeight: function(rowIndex, rowHeight, dataModel) {\n        if (this.abortEditing()) {\n            this.behavior.setRowHeight(rowIndex, rowHeight, dataModel);\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The total fixed rows height\n     */\n    getFixedRowsHeight: function() {\n        return this.behavior.getFixedRowsHeight();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The number of fixed columns.\n     */\n    getFixedColumnCount: function() {\n        return this.behavior.getFixedColumnCount();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns The number of fixed rows.\n     */\n    getFixedRowCount: function() {\n        return this.behavior.getFixedRowCount();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary The top left area has been clicked on\n     * @desc Delegates to the behavior.\n     * @param {event} mouse - The event details.\n     */\n    topLeftClicked: function(mouse) {\n        this.behavior.topLeftClicked(this, mouse);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary A fixed row has been clicked.\n     * @desc Delegates to the behavior.\n     * @param {event} event - The event details.\n     */\n    rowHeaderClicked: function(mouse) {\n        this.behavior.rowHeaderClicked(this, mouse);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary A fixed column has been clicked.\n     * @desc Delegates to the behavior.\n     * @param {event} event - The event details.\n     */\n    columnHeaderClicked: function(mouse) {\n        this.behavior.columnHeaderClicked(this, mouse);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc An edit event has occurred. Activate the editor at the given coordinates.\n     * @param {number} event.gridCell.x - The horizontal coordinate.\n     * @param {number} event.gridCell.y - The vertical coordinate.\n     * @param {boolean} [event.primitiveEvent.type]\n     * @returns {undefined|CellEditor} The editor object or `undefined` if no editor or editor already open.\n     */\n    onEditorActivate: function(event) {\n        return this.editAt(event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Get the cell editor.\n     * @desc Delegates to the behavior.\n     * @returns The cell editor at the given coordinates.\n     * @param {Point} cellEvent - The grid cell coordinates.\n     */\n    getCellEditorAt: function(event) {\n        return this.behavior.getCellEditorAt(event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Toggle HiDPI support.\n     * @desc HiDPI support is now *on* by default.\n     * > There used to be a bug in Chrome that caused severe slow down on bit blit of large images, so this HiDPI needed to be optional.\n     */\n    toggleHiDPI: function() {\n        if (this.properties.useHiDPI) {\n            this.removeAttribute('hidpi');\n        } else {\n            this.setAttribute('hidpi', null);\n        }\n        this.canvas.resize();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The HiDPI ratio.\n     */\n    getHiDPI: function(ctx) {\n        if (window.devicePixelRatio && this.properties.useHiDPI) {\n            var devicePixelRatio = window.devicePixelRatio || 1,\n                backingStoreRatio = ctx.webkitBackingStorePixelRatio ||\n                    ctx.mozBackingStorePixelRatio ||\n                    ctx.msBackingStorePixelRatio ||\n                    ctx.oBackingStorePixelRatio ||\n                    ctx.backingStorePixelRatio || 1,\n                result = devicePixelRatio / backingStoreRatio;\n        } else {\n            result = 1;\n        }\n        return result;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The width of the given (recently rendered) column.\n     * @param {number} colIndex - The column index.\n     */\n    getRenderedWidth: function(colIndex) {\n        return this.renderer.getRenderedWidth(colIndex);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The height of the given (recently rendered) row.\n     * @param {number} rowIndex - The row index.\n     */\n    getRenderedHeight: function(rowIndex) {\n        return this.renderer.getRenderedHeight(rowIndex);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Update the cursor under the hover cell.\n     */\n    updateCursor: function() {\n        var cursor = this.behavior.getCursorAt(-1, -1);\n        var hoverCell = this.hoverCell;\n        if (\n            hoverCell &&\n            hoverCell.x > -1 &&\n            hoverCell.y > -1\n        ) {\n            var x = hoverCell.x + this.getHScrollValue();\n            cursor = this.behavior.getCursorAt(x, hoverCell.y + this.getVScrollValue());\n        }\n        this.beCursor(cursor);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Repaint the given cell.\n     * @param {x} x - The horizontal coordinate.\n     * @param {y} y - The vertical coordinate.\n     */\n    repaintCell: function(x, y) {\n        this.renderer.repaintCell(x, y);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {boolean} The user is currently dragging a column to reorder it.\n     */\n    isDraggingColumn: function() {\n        return !!this.renderOverridesCache.dragger;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {object[]} Objects with the values that were just rendered.\n     */\n    getRenderedData: function() {\n        return this.renderer.getVisibleCellMatrix();\n    },\n\n    /**\n     * @summary Autosize a column for best fit.\n     * @param {Column|number} columnOrIndex - The column or active column index.\n     * @memberOf Hypergrid#\n     */\n    autosizeColumn: function(columnOrIndex) {\n        var column = columnOrIndex >= -2 ? this.behavior.getActiveColumn(columnOrIndex) : columnOrIndex;\n        column.checkColumnAutosizing(true);\n        this.computeCellsBounds();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Enable/disable if this component can receive the focus.\n     * @param {boolean} - canReceiveFocus\n     */\n    setFocusable: function(canReceiveFocus) {\n        this.canvas.setFocusable(canReceiveFocus);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The number of columns that were just rendered\n     */\n    getVisibleColumnsCount: function() {\n        return this.renderer.getVisibleColumnsCount();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {number} The number of rows that were just rendered\n     */\n    getVisibleRowsCount: function() {\n        return this.renderer.getVisibleRowsCount();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Update the size of a grid instance.\n     */\n    updateSize: function() {\n        this.canvas.checksize();\n    },\n\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Stop the global repainting flag thread.\n     */\n    stopPaintThread: function() {\n        this.canvas.stopPaintThread();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Stop the global resize check flag thread.\n     */\n    stopResizeThread: function() {\n        this.canvas.stopResizeThread();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Restart the global resize check flag thread.\n     */\n    restartResizeThread: function() {\n        this.canvas.restartResizeThread();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Restart the global repainting check flag thread.\n     */\n    restartPaintThread: function() {\n        this.canvas.restartPaintThread();\n    },\n\n    swapColumns: function(source, target) {\n        //Turns out this is called during dragged 'i.e' when the floater column is reshuffled\n        //by the currently dragged column. The column positions are constantly reshuffled\n        this.behavior.swapColumns(source, target);\n    },\n\n    endDragColumnNotification: function() {\n        this.behavior.endDragColumnNotification();\n    },\n\n    getFixedColumnsMaxWidth: function() {\n        return this.behavior.getFixedColumnsMaxWidth();\n    },\n\n    isMouseDownInHeaderArea: function() {\n        var headerRowCount = this.getHeaderRowCount();\n        var mouseDown = this.getMouseDown();\n        return mouseDown.x < 0 || mouseDown.y < headerRowCount;\n    },\n\n    /**\n     * @param {index} x - Data x coordinate.\n     * @return {Object} The properties for a specific column.\n     * @memberOf Hypergrid#\n     */\n    getColumnProperties: function(x) {\n        return this.behavior.getColumnProperties(x);\n    },\n\n    /**\n     * @param {index} x - Data x coordinate.\n     * @return {Object} The properties for a specific column.\n     * @memberOf Hypergrid#\n     */\n    setColumnProperties: function(x, properties) {\n        this.behavior.setColumnProperties(x, properties);\n    },\n\n    /**\n     * Clears all cell properties of given column or of all columns.\n     * @param {number} [x] - Omit for all columns.\n     * @memberOf Hypergrid#\n     */\n    clearAllCellProperties: function(x) {\n        this.behavior.clearAllCellProperties(x);\n        this.renderer.resetAllCellPropertiesCaches();\n    },\n\n    /**\n     * @param {integerRowIndex|sectionPoint} rn\n     * @returns {boolean}\n     * @memberOf Hypergrid#\n     */\n    isGridRow: function(y) {\n        return new this.behavior.CellEvent(0, y).isDataRow;\n    },\n\n    /**\n     * @returns {number} The total number of rows of all subgrids preceding the data subgrid.\n     * @memberOf Hypergrid#\n     */\n    getHeaderRowCount: function() {\n        return this.behavior.getHeaderRowCount();\n    },\n\n    /**\n     * @returns {number} The total number of rows of all subgrids following the data subgrid.\n     * @memberOf Hypergrid#\n     */\n    getFooterRowCount: function() {\n        return this.behavior.getFooterRowCount();\n    },\n\n    /**\n     * @returns {number} The total number of logical rows of all subgrids.\n     * @memberOf Hypergrid#\n     */\n    getLogicalRowCount: function() {\n        return this.behavior.getLogicalRowCount();\n    },\n\n    hasTreeColumn: function() {\n        return this.behavior.hasTreeColumn();\n    },\n    lookupFeature: function(key) {\n        return this.behavior.lookupFeature(key);\n    },\n\n    newPoint: function(x, y) {\n        return new Point(x, y);\n    },\n    newRectangle: function(x, y, width, height) {\n        return new Rectangle(x, y, width, height);\n    },\n\n    get charMap() {\n        return this.behavior.charMap;\n    },\n\n    decorateColumnArray: function(array) {\n        if (!this.columnArrayDecorations) {\n            var grid = this;\n            this.columnArrayDecorations = {\n                findWithNeg: {\n                    // Like the Array.prototype version except searches the negative indexes as well.\n                    value: function(iteratee, context) {\n                        for (var i = grid.behavior.leftMostColIndex; i < 0; i++) {\n                            if (!this[i]) {\n                                continue;\n                            }\n                            if (iteratee.call(context, this[i], i, this)) {\n                                return this[i];\n                            }\n                        }\n                        return this.find(iteratee, context);\n                    }\n                },\n                forEachWithNeg: {\n                    // Like the Array.prototype version except it iterates the negative indexes as well.\n                    value: function(iteratee, context) {\n                        for (var i = grid.behavior.leftMostColIndex; i < 0; i++) {\n                            if (!this[i]) {\n                                continue;\n                            }\n                            iteratee.call(context, this[i], i, this);\n                        }\n                        return this.forEach(iteratee, context);\n                    }\n\n                }\n            };\n        }\n        return Object.defineProperties(array || [], this.columnArrayDecorations);\n    }\n});\n\n\nfunction paintLoopRunning() {\n    return !this.properties.repaintImmediately && this.canvas.paintLoopRunning();\n}\n\n\n/**\n * Creates an instance variable backer for use by the getters and setters described in {@link dynamicProperties}.\n * @constructor\n * @memberOf Hypergrid~\n * @private\n */\nfunction Var() {\n    this.gridRenderer = defaults.gridRenderer;\n    this.rowHeaderCheckboxes = defaults.rowHeaderCheckboxes;\n    this.rowHeaderNumbers = defaults.rowHeaderNumbers;\n    this.gridBorder = defaults.gridBorder;\n    this.gridBorderTop = defaults.gridBorderTop;\n    this.gridBorderRight = defaults.gridBorderRight;\n    this.gridBorderBottom = defaults.gridBorderBottom;\n    this.gridBorderLeft = defaults.gridBorderLeft;\n}\n\nfunction findOrCreateContainer(boundingRect) {\n    var div = document.getElementById('hypergrid'),\n        used = div && !div.firstElementChild;\n\n    if (!used) {\n        div = document.createElement('div');\n        setStyles(div, boundingRect, RECT_STYLES);\n        document.body.appendChild(div);\n    }\n\n    return div;\n}\n\nfunction setStyles(el, style, keys) {\n    if (style) {\n        var elStyle = el.style;\n        keys.forEach(function(key) {\n            if (style[key] !== undefined) {\n                elStyle[key] = style[key];\n            }\n        });\n    }\n}\n\nfunction stringifyFunctions() {\n    var self = this;\n    return Object.keys(this).reduce(function(obj, key) {\n        if (key !== 'toJSON') {\n            obj[key] = /^function /.test(key)\n                ? null // anon func: no point in saving because key itself is already the stringified function\n                : self[key].toString() // stringify the function\n                    .replace(/^function anonymous\\(/, 'function(') // clean up Chromium artifact\n                    .replace('\\n/*``*/)', ')'); // clean up Chromium artifact\n        }\n        return obj;\n    }, {});\n}\n\nfunction clone(value) {\n    if (Array.isArray(value)) {\n        return value.slice(); // clone array\n    } else if (typeof value === 'object') {\n        return Object.defineProperties({}, Object.getOwnPropertyDescriptors(value));\n    } else {\n        return value;\n    }\n}\n\nfunction deepClone(object) {\n    var result = clone(object);\n    Object.keys(result).forEach(function(key) {\n        var descriptor = Object.getOwnPropertyDescriptor(result, key);\n        if (typeof descriptor.value === 'object') {\n            result[key] = deepClone(descriptor.value);\n        }\n    });\n    return result;\n}\n\nfunction createCellEditor(name, props) {\n    var CellEditor = cellEditors.get(name);\n    if (CellEditor) {\n        return new CellEditor(this, props);\n    }\n}\n\n/**\n * @name plugins\n * @memberOf Hypergrid\n * @type {object}\n * @summary Hash of references to shared plug-ins.\n * @desc Dictionary of shared (pre-installed) plug-ins. Used internally, primarily to avoid reinstallations. See examples for how to reference (albeit there is normally no need to reference plugins directly).\n *\n * For the dictionary of _instance_ plugins, see {@link Hypergrid#plugins|plugins} (defined in the {@link Hypergrid#intialize|Hypergrid constructor}).\n *\n * To force reinstallation of a shared plugin delete it first:\n * ```javascript\n * delete Hypergrid.plugins.mySharedPlugin;\n * ```\n * To force reinstallation of all shared plugins:\n * ```javascript\n * Hypergrid.plugins = {};\n * ```\n * @example\n * var allSharedPlugins = Hypergrid.plugins;\n * var mySharedPlugin = Hypergrid.plugins.mySharedPlugin;\n */\nHypergrid.plugins = {};\n\n/**\n * @name localization\n * @memberOf Hypergrid\n * @type {object}\n * @summary Shared localization defaults for all grid instances.\n * @desc These property values are overridden by those supplied in the `Hypergrid` constructor's `options.localization`.\n * @property {string|string[]} [locale] - The default locale to use when an explicit `locale` is omitted from localizer constructor calls. Passed to Intl.NumberFormat` and `Intl.DateFormat`. See {@ https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation|Locale identification and negotiation} for more information. Omitting will use the runtime's local language and region.\n * @property {object} [numberOptions] - Options passed to `Intl.NumberFormat` for creating the basic \"number\" localizer.\n * @property {object} [dateOptions] - Options passed to `Intl.DateFormat` for creating the basic \"date\" localizer.\n */\nHypergrid.localization = {\n    locale: 'en-US',\n    numberOptions: { maximumFractionDigits: 0 }\n};\n\n\n// mix in the mixins\n\nHypergrid.mixIn = Hypergrid.prototype.mixIn;\nHypergrid.mixIn(require('./themes').sharedMixin);\n\nHypergrid.prototype.mixIn(require('./themes').mixin);\nHypergrid.prototype.mixIn(require('./events').mixin);\nHypergrid.prototype.mixIn(require('./selection').mixin);\nHypergrid.prototype.mixIn(require('./stash-selections').mixin);\nHypergrid.prototype.mixIn(require('./scrolling').mixin);\n\n\n// deprecated module access\n\nfunction pleaseUse(requireString, module) {\n    if (!pleaseUse.warned[requireString]) {\n        var key = requireString.match(/\\w+$/)[0];\n        console.warn('Reference to ' + key + ' external module using' +\n            ' `Hypergrid.' + key + '.` has been deprecated as of v3.0.0 in favor of' +\n            ' `require(\\'' + requireString + '\\')` from within a Hypergrid Client Module' +\n            ' (otherwise use `Hypergrid.require(...)`) and will be removed in a future release.' +\n            ' See https://github.com/fin-hypergrid/core/wiki/Client-Modules#internal-modules.');\n        pleaseUse.warned[requireString] = true;\n    }\n    return module;\n}\npleaseUse.warned = {};\n\n\nObject.defineProperties(Hypergrid, {\n    Base: { get: function() { return pleaseUse('fin-hypergrid/src/Base', require('../Base')); } },\n    images: { get: function() { return pleaseUse('fin-hypergrid/images', require('../../images')); } }\n});\n\n\n/**\n * @summary List of grid instances.\n * @desc Added in {@link Hypergrid constructor}; removed in {@link Hypergrid#terminate terminate()}.\n * Used in themes.js.\n * @type {Hypergrid[]}\n */\nHypergrid.grids = [];\n\n\n/** @name defaults\n * @memberOf Hypergrid\n * @type {object}\n * @summary The `defaults` layer of the Hypergrid properties hierarchy.\n * @desc Default values for all Hypergrid properties, including grid-level properties and column property defaults.\n *\n * Synonym: `properties`\n * Properties are divided broadly into two categories:\n * * Style (a.k.a. \"lnf\" for \"look'n'feel\") properties\n * * All other properties.\n */\nHypergrid.defaults = Hypergrid.properties = defaults;\n\n\n// Define modules namespace and install overridable external modules.\n// Hypergrid core code references them via this object — rather than require() — where used.\n// Note that `modules` also supports the Hypergrid Module Loader (included only with the build file).\nHypergrid.modules = modules;\n\n\nmodule.exports = Hypergrid;\n","'use strict';\n\n/** @namespace extend-me **/\n\n/** @summary Extends an existing constructor into a new constructor.\n *\n * @returns {Constructor} A new constructor, extended from the given context, possibly with some prototype additions.\n *\n * @desc Extends \"objects\" (constructors), with optional additional code, optional prototype additions, and optional prototype member aliases.\n *\n * > CAVEAT: Not to be confused with Underscore-style .extend() which is something else entirely. I've used the name \"extend\" here because other packages (like Backbone.js) use it this way. You are free to call it whatever you want when you \"require\" it, such as `var inherits = require('extend')`.\n *\n * Provide a constructor as the context and any prototype additions you require in the first argument.\n *\n * For example, if you wish to be able to extend `BaseConstructor` to a new constructor with prototype overrides and/or additions, basic usage is:\n *\n * ```javascript\n * var Base = require('extend-me').Base;\n * var BaseConstructor = Base.extend(basePrototype); // mixes in .extend\n * var ChildConstructor = BaseConstructor.extend(childPrototypeOverridesAndAdditions);\n * var GrandchildConstructor = ChildConstructor.extend(grandchildPrototypeOverridesAndAdditions);\n * ```\n *\n * This function (`extend()`) is added to the new extended object constructor as a property `.extend`, essentially making the object constructor itself easily \"extendable.\" (Note: This is a property of each constructor and not a method of its prototype!)\n *\n * @this Base class being extended from (i.e., its constructor function object).\n *\n * @param {string} [extendedClassName] - This is simply added to the prototype as $$CLASS_NAME. Useful for debugging because all derived constructors appear to have the same name (\"Constructor\") in the debugger.\n *\n * @param {extendedPrototypeAdditionsObject} [prototypeAdditions] - Object with members to copy to new constructor's prototype.\n *\n * @property {boolean} [debug] - See parameter `extendedClassName` _(above)_.\n *\n * @property {object} Base - A convenient base class from which all other classes can be extended.\n *\n * @memberOf extend-me\n */\nfunction extend(extendedClassName, prototypeAdditions) {\n    switch (arguments.length) {\n        case 0:\n            prototypeAdditions = {};\n            break;\n        case 1:\n            switch (typeof extendedClassName) {\n                case 'object':\n                    prototypeAdditions = extendedClassName;\n                    extendedClassName = undefined;\n                    break;\n                case 'string':\n                    prototypeAdditions = {};\n                    break;\n                default:\n                    throw 'Single-parameter overload must be either string or object.';\n            }\n            break;\n        case 2:\n            if (typeof extendedClassName !== 'string' || typeof prototypeAdditions !== 'object') {\n                throw 'Two-parameter overload must be string, object.';\n            }\n            break;\n        default:\n            throw 'Too many parameters';\n    }\n\n    /**\n     * @class\n     */\n    function Constructor() {\n        if (this.preInitialize) {\n            this.preInitialize.apply(this, arguments);\n        }\n\n        initializePrototypeChain.apply(this, arguments);\n\n        if (this.postInitialize) {\n            this.postInitialize.apply(this, arguments);\n        }\n    }\n\n    /**\n     * @method\n     * @see {@link extend-me.extend}\n     * @desc Added to each returned extended class constructor.\n     */\n    Constructor.extend = extend;\n\n    Constructor.getClassName = getClassName;\n\n    /**\n     * @method\n     * @param {string} [ancestorConstructorName] - If given, searches up the prototype chain for constructor with matching name.\n     * @returns {function|null} Constructor of parent class; or ancestor class with matching name; or null\n     */\n    Constructor.parent = parentConstructor;\n\n    var prototype = Constructor.prototype = Object.create(this.prototype);\n    prototype.constructor = Constructor;\n\n    extendedClassName = extendedClassName || prototype.$$CLASS_NAME || prototype.name;\n    if (extendedClassName) {\n        Object.defineProperty(Constructor, 'name', { value: extendedClassName, configurable: true });\n        prototype.$$CLASS_NAME = extendedClassName;\n    }\n\n    // define each prototype addition on the prototype (including getter/setters)\n    var key, descriptor;\n    for (key in prototypeAdditions) {\n        if ((descriptor = Object.getOwnPropertyDescriptor(prototypeAdditions, key))) {\n            Object.defineProperty(prototype, key, descriptor);\n        }\n    }\n\n    if (typeof this.postExtend === 'function') {\n        this.postExtend(prototype);\n    }\n\n    return Constructor;\n}\n\nfunction Base() {}\nBase.prototype = {\n\n    constructor: Base.prototype.constructor,\n\n    getClassName: function() {\n        return (\n            this.$$CLASS_NAME ||\n            this.name ||\n            this.constructor.name // try Function.prototype.name as last resort\n        );\n    },\n\n    /**\n     * Access a member of the super class.\n     * @returns {Object}\n     */\n    get super() {\n        return Object.getPrototypeOf(Object.getPrototypeOf(this));\n    },\n\n    /**\n     * Find member on prototype chain beginning with super class.\n     * @param {string} memberName\n     * @returns {undefined|*} `undefined` if not found; value otherwise.\n     */\n    superMember: function(memberName) {\n        var parent = this.super;\n        do { parent = Object.getPrototypeOf(parent); } while (!parent.hasOwnProperty(memberName));\n        return parent && parent[memberName];\n    },\n\n    /**\n     * Find method on prototype chain beginning with super class.\n     * @param {string} methodName\n     * @returns {function}\n     */\n    superMethod: function(methodName) {\n        var method = this.superMember(methodName);\n        if (typeof method !== 'function') {\n            throw new TypeError('this.' + methodName + ' is not a function');\n        }\n        return method;\n    },\n\n    /**\n     * Find method on prototype chain beginning with super class and call it with remaining args.\n     * @param {string} methodName\n     * @returns {*}\n     */\n    callSuperMethod: function(methodName) {\n        return this.superMethod(methodName).apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n};\nBase.extend = extend;\nextend.Base = Base;\n\n/**\n * Optional static method is called with new \"class\" (constructor) after extending.\n * This permits miscellaneous tweaking and cleanup of the new class.\n * @method postExtend\n * @param {object} prototype\n * @memberOf Base\n */\n\n/** @typedef {function} extendedConstructor\n * @property prototype.super - A reference to the prototype this constructor was extended from.\n * @property [extend] - If `prototypeAdditions.extendable` was truthy, this will be a reference to {@link extend.extend|extend}.\n */\n\n/** @typedef {object} extendedPrototypeAdditionsObject\n * @desc All members are copied to the new object. The following have special meaning.\n * @property {function} [initialize] - Additional constructor code for new object. This method is added to the new constructor's prototype. Gets passed new object as context + same args as constructor itself. Called on instantiation after similar function in all ancestors called with same signature.\n * @property {function} [preInitialize] - Called before the `initialize` cascade. Gets passed new object as context + same args as constructor itself. If not defined here, the top-most (and only the top-most) definition found on the prototype chain is called.\n * @property {function} [postInitialize] - Called after the `initialize` cascade. Gets passed new object as context + same args as constructor itself. If not defined here, the top-most (and only the top-most) definition found on the prototype chain is called.\n */\n\n/** @summary Call all `initialize` methods found in prototype chain, beginning with the most senior ancestor's first.\n * @desc This recursive routine is called by the constructor.\n * 1. Walks back the prototype chain to `Object`'s prototype\n * 2. Walks forward to new object, calling any `initialize` methods it finds along the way with the same context and arguments with which the constructor was called.\n * @private\n * @memberOf extend-me\n */\nfunction initializePrototypeChain() {\n    var term = this,\n        args = arguments;\n    recur(term);\n\n    function recur(obj) {\n        var proto = Object.getPrototypeOf(obj);\n        if (proto.constructor !== Object) {\n            recur(proto);\n            if (proto.hasOwnProperty('initialize')) {\n                proto.initialize.apply(term, args);\n            }\n        }\n    }\n}\n\nfunction getClassName() {\n    return (\n        this.prototype.$$CLASS_NAME ||\n        this.prototype.name ||\n        this.name // try Function.prototype.name as last resort\n    );\n}\n\nfunction parentConstructor(ancestorConstructorName) {\n    var prototype = this.prototype;\n    if (prototype) {\n        do {\n            prototype = Object.getPrototypeOf(prototype);\n        } while (ancestorConstructorName && prototype && prototype.constructor.name !== ancestorConstructorName);\n    }\n    return prototype && prototype.constructor;\n}\n\nmodule.exports = extend;\n","'use strict';\n\nvar version = require('../package.json').version;\nvar HypergridError = require('./lib/error');\n\n\nvar propClassEnum = {\n    COLUMNS: 1,\n    STRIPES: 2,\n    ROWS: 3,\n    CELLS: 4\n};\n\nvar propClassLayersMap = {\n    DEFAULT: [propClassEnum.COLUMNS, propClassEnum.STRIPES, propClassEnum.ROWS, propClassEnum.CELLS],\n    NO_ROWS: [propClassEnum.COLUMNS, propClassEnum.CELLS]\n};\n\n\n/**\n * This module lists the properties that can be set on a {@link Hypergrid} along with their default values.\n * Edit this file to override the defaults.\n * @module defaults\n */\n\nvar defaults = {\n\n    /**\n     * @summary The global theme name.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    themeName: 'default',\n\n    /**\n     * The default message to display in front of the canvas when there are no grid rows.\n     * Format is HTML.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    noDataMessage: '',\n\n    /**\n     * Multiplier for horizontal mouse wheel movement, applied to values of [`WheelEvent#deltaX`](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaX) (received by the horizontal scrollbar's listener).\n     *\n     * #### Caveat\n     * Wheel granularity depends on the OS, the input device, and possibly the browser. Any setting you choose will work differently in different environments. If you don't know the user's environment, it is probably best to give users control of this setting so they can fine tune it themselves.\n     *\n     * #### Default values\n     * This particular default value of `0.01` seems to work well on the MacBook Pro trackpad. It's slower than it was, which will greatly improve the scrolling experience since column scrolling often occurred inadvertently when the intent was to scroll in the veritcal direction only.\n     *\n     * Be aware however that the trackpad scrolling speed can be adjusted by the Mac user at the OS level (System Preferences -> Accessibility -> Mouse & Trackpad -> Trackpad Options… -> Scrolling speed).\n     *\n     * Hint: You can tell if the user is using a trackpad by listening for any deltaX (since a simple mouse wheel is deltaY only); and what OS by checking user agent.\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    wheelHFactor: 0.01,\n\n    /**\n     * Multiplier for vertical mouse wheel movement, applied to values of [`WheelEvent#deltaY`](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaY) (received by the vertical scrollbar's listener).\n     *\n     * #### Caveat\n     * Wheel granularity depends on the OS, the input device, and possibly the browser. Any setting you choose will work differently in different environments. If you don't know the user's environment, it is probably best to give users control of this setting so they can fine tune it themselves.\n     *\n     * #### Default values\n     * This particular default value of `0.05` is a compromise. It seems to work well on the MacBook Pro trackpad; and works acceptably (though differently) with a mouse wheel on both Mac OS and Windows.\n     *\n     * Be aware however that the trackpad scrolling speed can be adjusted by the Mac user at the OS level (System Preferences -> Accessibility -> Mouse & Trackpad -> Trackpad Options… -> Scrolling speed). Mouse wheel scrolling speed is also adjustable ( _yada yada_ -> Mouse Options… -> Scrolling speed; or on Windows search for \"Change mouse wheel settings\" in the Start menu).\n     *\n     * This default setting of `0.05` feels good on trackpad (2-finger drag). It's much slower than it was, but the way it was before was way to coarse and fast, scrolling hundreds of rows in a flash.\n     *\n     * With this setting, a mouse connected to a Mac, the wheel requires 5 click-stops to scroll 1 row; the same mouse connected to Windows scrolls 5 rows per click-stop. (However, I may have changed the default settings on my machines; not sure.)\n     *\n     * On Windows, the original multiplier setting (_i.e.,_ `1.0`) scrolled 100 grid rows on a single mouse wheel click-stop; the new default (`0.05`) scrolls 5 rows per click-stop. It stands to reason therefore that a setting of `0.01` will scroll 1:1 (1 row per 1 click-stop).\n     *\n     #### Hint\n     You can tell if the user is using a trackpad by listening for any deltaX (since a simple mouse wheel is deltaY only); and what OS by checking user agent.\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    wheelVFactor: 0.05,\n\n    /**\n     * @summary List of subgrids by\n     * @desc Restrict usage here to strings (naming data models) or arrays consisting of such a string + constructor arguments. That is, avoid {@link subgridSpec}'s function and object overloads and {@link subgridConstructorRef} function overload.\n     * @default \"[ 'HeaderSubgrid', 'data' ]\"\n     * @type {subgridSpec[]}\n     * @memberOf module:defaults\n     */\n    subgrids: [\n        'HeaderSubgrid',\n        'data'\n    ],\n\n    /**\n     * The font for data cells.\n     * @default\n     * @type {cssFont}\n     * @memberOf module:defaults\n     */\n    font: '13px Tahoma, Geneva, sans-serif',\n\n    /**\n     * Font color for data cells.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    color: 'rgb(25, 25, 25)',\n\n    /**\n     * Background color for data cells.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    backgroundColor: 'rgb(241, 241, 241)',\n\n    /**\n     * Font style for selected cell(s).\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    foregroundSelectionFont: 'bold 13px Tahoma, Geneva, sans-serif',\n\n    /**\n     * Font color for selected cell(s).\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    foregroundSelectionColor: 'rgb(0, 0, 128)',\n    /**\n     * Background color for selected cell(s).\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    backgroundSelectionColor: 'rgba(147, 185, 255, 0.625)',\n\n\n    /********** SECTION: COLUMN HEADER COLORS **********/\n\n    // IMPORTANT CAVEAT: The code is inconsistent regarding the terminology. Is the \"column header\" section _the row_ of cells at the top (that act as headers for each column) or is it _the column_ of cells (that act as headers for each row)? Oh my.\n\n    /**\n     * @default\n     * @type {cssFont}\n     * @memberOf module:defaults\n     */\n    columnHeaderFont: '12px Tahoma, Geneva, sans-serif',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    columnHeaderColor: 'rgb(25, 25, 25)',\n\n    /**\n     * Font style for selected columns' headers.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    columnHeaderForegroundSelectionFont: 'bold 12px Tahoma, Geneva, sans-serif',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    columnHeaderBackgroundColor: 'rgb(223, 227, 232)',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    columnHeaderForegroundSelectionColor: 'rgb(80, 80, 80)',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    columnHeaderBackgroundSelectionColor: 'rgba(255, 220, 97, 0.45)',\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    columnHeaderHalign: 'center',\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    columnHeaderRenderer: 'SimpleCell',\n\n    /**\n     * There is no standard format called \"header\"; unless defined, defaults to \"string\" (pass-thru formatter).\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    columnHeaderFormat: 'header',\n\n\n    /********** SECTION: ROW HEADER COLORS **********/\n\n    /**\n     * @default\n     * @type {cssFont}\n     * @memberOf module:defaults\n     */\n    rowHeaderFont: '12px Tahoma, Geneva, sans-serif',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    rowHeaderColor: 'rgb(25, 25, 25)',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    rowHeaderBackgroundColor: 'rgb(223, 227, 232)',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    rowHeaderForegroundSelectionColor: 'rgb(80, 80, 80)',\n\n    /**\n     * Font style for selected rows' headers.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    rowHeaderForegroundSelectionFont: 'bold 12px Tahoma, Geneva, sans-serif',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    rowHeaderBackgroundSelectionColor: 'rgba(255, 220, 97, 0.45)',\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    backgroundColor2: 'rgb(201, 201, 201)',\n\n\n    /********** SECTION: TREE HEADER COLORS **********/\n\n    /**\n     * @default\n     * @type {cssFont}\n     * @memberOf module:defaults\n     */\n    treeHeaderFont: '12px Tahoma, Geneva, sans-serif',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    treeHeaderColor: 'rgb(25, 25, 25)',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    treeHeaderBackgroundColor: 'rgb(223, 227, 232)',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    treeHeaderForegroundSelectionColor: 'rgb(80, 80, 80)',\n\n    /**\n     * Font style for selected rows' headers.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    treeHeaderForegroundSelectionFont: 'bold 12px Tahoma, Geneva, sans-serif',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    treeHeaderBackgroundSelectionColor: 'rgba(255, 220, 97, 0.45)',\n    /********** SECTION: FILTER ROW COLORS **********/\n\n    /**\n     * @default\n     * @type {cssFont}\n     * @memberOf module:defaults\n     */\n    filterFont: '12px Tahoma, Geneva, sans-serif',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    filterColor: 'rgb(25, 25, 25)',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    filterBackgroundColor: 'white',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    filterForegroundSelectionColor: 'rgb(25, 25, 25)',\n\n    /**\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    filterBackgroundSelectionColor: 'rgb(255, 220, 97)',\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    filterHalign: 'center',\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    filterRenderer: 'SimpleCell',\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    filterEditor: 'TextField',\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    filterable: true,\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    showFilterRow: false,\n\n    /**\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    voffset: 0,\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    scrollbarHoverOver: 'visible',\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    scrollbarHoverOff: 'hidden',\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    scrollingEnabled: true,\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    vScrollbarClassPrefix: '',\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    hScrollbarClassPrefix: '',\n\n    /**\n     * Horizontal alignment of each cell as interpreted by it's cell renderer.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    halign: 'center',\n\n    /**\n     * Padding to left and right of cell value.\n     *\n     * NOTE: Right padding may not be visible if column is not sized wide enough.\n     *\n     * See also {@link module:defaults.iconPadding|iconPadding}.\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    cellPadding: 5,\n\n    /**\n     * Padding to left and right of cell icons.\n     *\n     * Overrides {@link module:defaults.cellPadding|cellPadding}:\n     * * Left icon + `iconPadding` overrides left {@link module:defaults.cellPddingg|cellPddingg}.\n     * * Right icon + `iconPadding` overrides right {@link module:defaults.cellPddingg|cellPddingg}.\n     * @see {@link module:defaults.leftIcon|leftIcon}\n     * @see {@link module:defaults.centerIcon|centerIcon}\n     * @see {@link module:defaults.rightIcon|rightIcon}\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    iconPadding: 3,\n\n    /**\n     * @summary Name of image to appear at right of cell.\n     * @desc Must be a key from {@link module:images|images}.\n     *\n     * Used by {@link SimpleCell} cell renderer.\n     * @see {@link module:defaults.centerIcon|centerIcon}\n     * @see {@link module:defaults.rightIcon|rightIcon}\n     * @see {@link module:defaults.iconPadding|iconPadding}\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    leftIcon: undefined,\n\n    /**\n     * @summary Name of image to appear at right of cell.\n     * @desc Must be a key from {@link module:images|images}.\n     *\n     * Used by {@link SimpleCell} cell renderer.\n     * @see {@link module:defaults.leftIcon|leftIcon}\n     * @see {@link module:defaults.rightIcon|rightIcon}\n     * @see {@link module:defaults.iconPadding|iconPadding}\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    centerIcon: undefined,\n\n    /**\n     * @summary Name of image to appear at right of cell.\n     * @desc Must be a key from {@link module:images|images}.\n     *\n     * Used by {@link SimpleCell} cell renderer.\n     * @see {@link module:defaults.leftIcon|leftIcon}\n     * @see {@link module:defaults.centerIcon|centerIcon}\n     * @see {@link module:defaults.iconPadding|iconPadding}\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    rightIcon: undefined,\n\n    /**\n     * Set to `true` to render `0` and `false`. Otherwise these value appear as blank cells.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    renderFalsy: false,\n\n    /**\n     * The name of a transformer function defined in require('synonomous/transformers').\n     *\n     * If the named headerify function is defined, whenever the schema array changes, it is applied each element\n     * (column schema) for each column that does not already have an explicitly defined `header` property.\n     *\n     * When this property does not name a defined headerify function, undefined column headers default to their column names.\n     *\n     * @see lib/headerifiers.js\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    headerify: 'toTitle',\n\n    /**\n     * Enable rendering of horizontal grid lines.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    gridLinesH: true,\n\n    /**\n     * Thickness of horizontal grid lines (pixels).\n     * @type {number}\n     * @default\n     * @memberOf module:defaults\n     * @see {@link module:dynamicProperties.lineWidth lineWidth}\n     */\n    gridLinesHWidth: 1,\n\n    /**\n     * Color of horizontal grid lines.\n     * @type {string}\n     * @default\n     * @memberOf module:defaults\n     * @see {@link module:dynamicProperties.lineColor lineColor}\n     */\n    gridLinesHColor: 'rgb(199, 199, 199)',\n\n    /**\n     * Enable rendering of vertical grid lines.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    gridLinesV: true,\n\n    /**\n     * Thickness of vertical grid lines (pixels).\n     * @type {number}\n     * @default\n     * @memberOf module:defaults\n     * @see {@link module:dynamicProperties.lineWidth lineWidth}\n     */\n    gridLinesVWidth: 1,\n\n    /**\n     * Color of vertical grid lines.\n     * @type {string}\n     * @default\n     * @memberOf module:defaults\n     * @see {@link module:dynamicProperties.lineColor lineColor}\n     */\n    gridLinesVColor: 'rgb(199, 199, 199)',\n\n    /**\n     * When {@link module:defaults.gridLinesV} is truthy, determines if lines render in the column headers area.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    gridLinesColumnHeader: true,\n\n    /**\n     * When {@link module:defaults.gridLinesH} is truthy, determines if lines render in the row headers area.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    gridLinesRowHeader: true,\n\n    /**\n     * When {@link module:defaults.gridLinesV} or {@link module:defaults.gridLinesH} are truthy, determines if lines render in the user data area.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    gridLinesUserDataArea: true,\n\n    /**\n     * Set canvas's CSS border to this string as well as:\n     * * {@link module:dynamicProperties.gridBorderLeft gridBorderLeft}\n     * * {@link module:dynamicProperties.gridBorderRight gridBorderRight}\n     * * {@link module:dynamicProperties.gridBorderTop gridBorderTop}\n     * * {@link module:dynamicProperties.gridBorderBottom gridBorderBottom}.\n     *\n     * If set to:\n     * `true`: uses current {@link module:dynamicProperties.lineWidth lineWidth} and {@link module:dynamicProperties.lineColor lineColor}\n     * `false`: uses null\n     *\n     * Caveat: The use of `grid.canvas.canvas.style.boxSizing = 'border-box'` is _not_ recommended due to\n     * the fact that the canvas is squashed slightly to accommodate the border resulting in blurred text.\n     *\n     * @default\n     * @type {boolean|string}\n     * @memberOf module:defaults\n     */\n    gridBorder: false,\n\n    /**\n     * Set canvas's left CSS border to this string.\n     *\n     * If set to:\n     * * `true`: uses current {@link module:dynamicProperties.lineWidth lineWidth} and {@link module:dynamicProperties.lineColor lineColor}\n     * * `false`: uses null\n     * @default\n     * @type {boolean|string}\n     * @memberOf module:defaults\n     */\n    gridBorderLeft: false,\n\n    /**\n     * Set canvas's right CSS border to this string.\n     *\n     * If set to:\n     * * `true`: uses current {@link module:dynamicProperties.lineWidth lineWidth} and {@link module:dynamicProperties.lineColor lineColor}\n     * * `false`: uses null\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    gridBorderRight: false,\n\n    /**\n     * Set canvas's top CSS border to this string.\n     *\n     * If set to:\n     * * `true`: uses current {@link module:dynamicProperties.lineWidth lineWidth} and {@link module:dynamicProperties.lineColor lineColor}\n     * * `false`: uses null\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    gridBorderTop: false,\n\n    /**\n     * Set canvas's bottom CSS border to this string.\n     *\n     * If set to:\n     * * `true`: uses current {@link module:dynamicProperties.lineWidth lineWidth} and {@link module:dynamicProperties.lineColor lineColor}\n     * * `false`: uses null\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    gridBorderBottom: false,\n\n    /**\n     * Define this property to style rule lines between non-scrollable rows and scrollable rows differently from {@link module:defaults.gridLinesHWidth gridLinesHWidth}.\n     * Undefine it to show normal grid line in that position.\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    fixedLinesHWidth: 2,\n\n    /**\n     * Define this property to render just the edges of the lines between non-scrollable rows & scrollable rows, creating a double-line effect.\n     * The value is the thickness of the edges.\n     * Typical definition would be `1` in tandem with setting {@link module:defaults.fixedLinesHWidth fixedLinesHWidth} to `3`.\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    fixedLinesHEdge: undefined, // undefined means no edge effect\n\n    /**\n     * Define this property to style rule lines between fixed & scolling rows differently from {@link module:defaults.gridLinesHColor}.\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    fixedLinesHColor: 'rgb(164,164,164)', // ~21% darker than {@link module:defaults.gridLinesHColor} default\n\n    /**\n     * Define this property to style rule lines between non-scrollable columns and scrollable columns differently from {@link module:defaults.gridLinesVWidth gridLinesVWidth}.\n     * Undefine it to show normal grid line in that position.\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    fixedLinesVWidth: 2,\n\n    /**\n     * Define this property to render just the edges of the lines between fixed & scrolling columns, creating a double-line effect.\n     * The value is the thickness of the edges.\n     * Typical definition would be `1` in tandem with setting {@link module:defaults.fixedLinesVWidth fixedLinesVWidth} to `3`.\n     * @see {@link module:defaults.fixedLinesVWidth}\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    fixedLinesVEdge: undefined, // undefined means no edge effect\n\n    /**\n     * Define this property to style rule lines between fixed & scolling columns differently from {@link module:defaults.gridLinesVColor}.\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    fixedLinesVColor: 'rgb(164,164,164)', // ~21% darker than {@link module:defaults.gridLinesVColor} default\n\n    /**\n     * Analogous to CSS {@link https://developer.mozilla.org/docs/Web/CSS/box-sizing `box-sizing`} property:\n     * * `'content-box'` _(default starting in version 3)_<br>\n     * Grid and fixed rule lines are rendered _between_ cells;\n     * cell rects are spread out to accommodate.\n     * * `'border-box'` _(default in version 2)_<br>\n     * Grid and fixed rule lines are rendered on inside right and bottom edges of each cell\n     * (except right-most and bottom-most visible cells);\n     * cell rects are contiguous.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    boxSizing: version > 2 ? 'content-box' : 'border-box',\n\n    /**\n     * @default\n     * @type {number}\n     * @see {@link module:defaults.boxSizing boxSizing}\n     * @memberOf module:defaults\n     */\n    defaultRowHeight: version > 2 ? 14 : 15,\n\n    /**\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    defaultColumnWidth: 100,\n\n    /**\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    minimumColumnWidth: 5,\n\n    /**\n     * Resizing a column through the UI (by clicking and dragging on the column's\n     * right border in the column header row) normally affects the width of the whole grid.\n     *\n     * Set this new property to truthy to inversely resize the next column.\n     * In other words, if user expands (say) the third column, then the fourth column will contract —\n     * and _vice versa_ — without therefore affecting the width of the grid.\n     *\n     * This is a _column propert_ and may be set for selected columns (`myColumn.properties.resizeColumnInPlace`)\n     * or for all columns by setting it at the grid level. (`myGrid.properties.resizeColumnInPlace`).\n     *\n     * Note that the implementation of this property does not allow expanding a\n     * column beyond the width it can borrow from the next column.\n     * The last column, however, is unconstrained and resizing it will affect the total grid width.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    resizeColumnInPlace: false,\n\n    //for immediate painting, set these values to 0, true respectively\n\n    /**\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    repaintIntervalRate: 60,\n\n    /**\n     * Normally multiple calls to {@link Hypergrid#repaint grid.repaint()}, {@link Hypergrid#reindex grid.reindex()}, {@link Hypergrid#behaviorShapeChanged grid.behaviorShapeChanged()}, and/or {@link Hypergrid#behaviorStateChanged grid.behaviorStateChanged()} defer their actions until just before the next scheduled render. For debugging purposes, set `repaintImmediately` to truthy to carry out these actions immediately while leaving the paint loop running for when you resume execution. Alternatively, call {@link Canvas#stopPaintLoop grid.canvas.stopPaintLoop()}. Caveat: Both these modes are for debugging purposes only and may not render the grid perfectly for all interactions.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    repaintImmediately: false,\n\n    //enable or disable double buffering\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    useBitBlit: false,\n\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    useHiDPI: true,\n\n    /**\n     * @summary Mappings for cell navigation keys.\n     * @desc Cell navigation is handled in the {@link CellSelection} \"feature\". This property gives you control over which keypresses the built-in mechanism will respond to.\n     *\n     * (If this built-in cell selection logic is insufficient for your needs, you can also listen for the various \"fin-key\" events and carry out more complex operations in your listeners.)\n     *\n     * The keypress names used here are defined in Canvas.js. Note that all keypresses actually have two names, a normal name and a shifted name. The latter name is used when either **shift** is depressed.\n     *\n     * The built-in nav keypresses are as follows:\n     * * **`UP`** _(up-arrow key)_ - Replace all selections with a single cell, one row up from the last selection.\n     * * **`DOWN`** _(down-arrow key)_ - Replace all selections with a single cell, one row down from the last selection.\n     * * **`LEFT`** _(left-arrow key)_ - Replace all selections with a single cell, one column to the left of the last selection.\n     * * **`RIGHT`** _(right-arrow key)_ - Replace all selections with a single cell, one column to the right of the last selection.\n     * * **`UPSHIFT`** _(shift + up-arrow)_ - Extend the last selection up one row.\n     * * **`DOWNSHIFT`** _(shift + down-arrow)_ - Extend the last selection down one row.\n     * * **`LEFTSHIFT`** _(shift + left-arrow)_ - Extend the last selection left one column.\n     * * **`RIGHTSHIFT`** _(shift + right-arrow)_ - Extend the last selection right one column.\n     *\n     * To alter these or add other mappings see the examples below.\n     *\n     * A note regarding the other meta keys (**trl**, **option**, and **command**): Although these meta keys can be detected, they do not modify the key names as **shift** does. This is because they are more for system use and generally (with the possibly exception fo **ctrl**) should not be depended upon, as system functions will take priority and your app will never see these key presses.\n     *\n     * A special accommodation has been made to the {@link module:defaults.editOnKeydown|editOnKeydown} property:\n     * * If `editOnKeydown` truthy AND mapped character is an actual (non-white-space) character (as opposed to say **tab** or **return**), then navigation requires **ctrl** key to distinguish between nav and data.\n     * * If `editOnKeydown` falsy, the **ctrl** key is ignored.\n     *\n     * So in the last example, if `editOnKeydown` is ON, then `a` (without **ctrl**) would start editing the cell and **ctrl** + `a` would move the selection one column to the left.\n     *\n     * @example\n     * // To void the above build-ins:\n     * navKeyMap: {\n     *     UP: undefined,\n     *     UPSHIFT: undefined,\n     *     DOWN: undefined,\n     *     ...\n     * }\n     *\n     * @example\n     * // To map alternative nav keypresses to RETURN and TAB (default mapping):\n     * navKeyMap: {\n     *     RETURN: 'DOWN',\n     *     RETURNSHIFT: 'UP',\n     *     TAB: 'RIGHT',\n     *     TABSHIFT: 'LEFT'\n     * }\n     *\n     * @example\n     * // To map alternative nav keypresses to a/w/d/s and extend select to A/W/D/S:\n     * navKeyMap: {\n     *     a: 'LEFT', A: 'LEFTSHIFT',\n     *     w: 'UP', W: 'UPSHIFT',\n     *     s: 'DOWN', S: 'DOWNSHIFT',\n     *     d: 'RIGHT', D: 'RIGHTSHIFT'\n     * }\n     *\n     * @default\n     * @type {object|undefined}\n     * @memberOf module:defaults\n     */\n    navKeyMap: {\n        RETURN: 'DOWN',\n        RETURNSHIFT: 'UP',\n        TAB: 'RIGHT',\n        TABSHIFT: 'LEFT'\n    },\n\n    /** @summary Validation failure feedback.\n     * @desc Validation occurs on {@link CellEditor#stopEditing}, normally called on commit (`TAB`, `ENTER`, or any other keys listed in `navKeyMap`).\n     *\n     * On successful validation, the value is saved back to the data source and the editor is closed.\n     *\n     * On validation failure, feedback is shown to the user in the form of an \"error effect\" possibly followed by an \"end effect\" containing a detailed explanation.\n     *\n     * The error effect to use is named in `feedbackEffect\n     *\n     * The value of this property is the number of times to show the \"error effect\" on validation failure before showing the detailed explanation.\n     *\n     * `feedback` may be set to one of:\n     * * **`undefined`** - Do not show the error effect or the alert. Just discard the value and close the editor (as if `ESC` had been typed).\n     * * **`0`** - Just shows the error feedback effect (see the {@link CellEditor#errorEffect|errorEffect} property).\n     * * **`1`** - Shows the error feedback effect followed by the detailed explanation.\n     * * `2` or more:\n     *   1. Shows the error feedback effect\n     *   2. On every `feedback` tries, shows the detailed explanation.\n     * @default\n     * @type {number|undefined}\n     * @memberOf module:defaults\n     */\n    feedbackCount: 3,\n\n    /**\n     * @default\n     * @type {{name:string,options:object}|string}\n     * @memberOf module:defaults\n     */\n    feedbackEffect: 'shaker',\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    readOnly: false,\n\n    /**\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    fixedColumnCount: 0,\n\n    /**\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    fixedRowCount: 0,\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     * @see {@link module:dynamicProperties.showRowNumbers}\n     */\n    rowHeaderNumbers: true,\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     * @see {@link module:dynamicProperties.showRowNumbers}\n     */\n    rowHeaderCheckboxes: true,\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    showTreeColumn: true,\n\n    /**\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    treeRenderer: 'SimpleCell',\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    showHeaderRow: true,\n\n    /** Clicking in a cell \"selects\" it; it is added to the select region and repainted with \"cell selection\" colors.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    cellSelection: true,\n\n    /** Clicking in a column header (top row) \"selects\" the column; the entire column is added to the select region and repainted with \"column selection\" colors.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    columnSelection: true,\n\n    /** Clicking in a row header (leftmost column) \"selects\" the row; the entire row is added to the select region and repainted with \"row selection\" colors.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    rowSelection: true,\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    singleRowSelectionMode: true,\n\n    /**\n     * @summary Fill color for last selection overlay.\n     * @desc The color should be translucent (or transparent). Note that \"Partial\" grid renderers (such as the {@link paintCellsAsNeeded} renderer) do not draw overlay because it just gets darker and darker for non-updated cells.\n     * @default\n     * @type {cssColor}\n     * @memberOf module:defaults\n     */\n    selectionRegionOverlayColor: 'transparent', // 'rgba(0, 0, 48, 0.2)',\n\n    /**\n     * @summary Stroke color for last selection overlay.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    selectionRegionOutlineColor: 'rgb(69, 69, 69)',\n\n    /**\n     * @summary Whether to automatically expand column width to accommodate widest rendered value.\n     * @desc When truthy for a given column _and_ user has not manually resized it, column will expand to accommodate widest rendered value.\n     *\n     * What's actually happening is (`props` in the following refers to the column's properties):\n     * 1. On each grid render, for all visible columns:\n     *    1. The cell renderer reports back the width of each rendered cell contents.\n     *    2. The largest value for each column is saved (in `props.preferredWidth`).\n     * 2. At the conclusion of the grid render, the renderer calls `grid.gridRenderedNotification`, which calls `grid.behavior.checkColumnAutosizing`, which for all columns for which `props.columnAutosizing` is truthy, determines if the column needs to be widened subject to the following conditions:\n     *    1. If user has not already manually set column width (`props.columnAutosized` is still falsy)\n     *    2. If render width > current width (`props.preferredWidths > props.width`)\n     *    3. If column's max autosizing width is defined and it's greater than render width (`props.peferredWidths < props.columnAutosizingMax`)\n     * 3. If any column width has changed, re-shape the grid with the new column widths and re-render it. As this typically happens before the next monitor refresh, user only sees the final result.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    columnAutosizing: true,\n\n    /**\n     * @summary Whether to automatically expand row number column width to accommodate widest rendered row number\n     * @desc `grid.properties.rowNumberAutosizing` is the backing store for `grid.behavior.columns[-2].columnAutosizing`.\n     * Supports row number column styling via the `rowNumber_______` grid state properties.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    rowNumberAutosizing: true,\n\n    /**\n     * @summary Whether to automatically expand row number column width to accommodate widest rendered group label.\n     * @desc `grid.properties.treeColumnAutosizing` is the backing store for `grid.behavior.columns[-1].columnAutosizing`.\n     * Supports tree column styling via the `rowColumn_______` grid state properties.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    treeColumnAutosizing: true,\n\n    /**\n     * @summary The widest the column will be auto-sized to.\n     * @desc For no limit, set this property to a falsy value such as `undefined` or `0`.\n     *\n     * Note this property only specifies a maximum column width for _auto-sizing;_ it places no limit on manual resizing of column width.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    columnAutosizingMax: 400,\n\n    /**\n     * @summary The widest the tree column will be auto-sized to.\n     * @desc `grid.properties.treeColumnAutosizingMax` is the store for `grid.behavior.columns[-1].columnAutosizingMax`.\n     * Supports tree column styling via the `rowColumn_______` grid state properties.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    treeColumnAutosizingMax: 400,\n\n    /**\n     * @summary Whether text in header cells is wrapped.\n     * @desc For performance reasons, text in data cells is not wrapped. (This is a function of the supplied `SimpleCell` renderer. Override with a custom renderer if you must have wrapped text in data cells.)\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    headerTextWrapping: false,\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    rowResize: false,\n\n\n    /* CELL EDITING */\n\n    /**\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    editable: true,\n\n    /**\n     * Edit cell on double-click rather than single-click.\n     *\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    editOnDoubleClick: true,\n\n    /**\n     * Grid-level property.\n     * When user presses a \"printable\" keyboard character _or_ BACKSPACE _or_ DELETE:\n     * 1. Activate cell editor on current cell (i.e., origin of most recent selection).\n     * 2. If cell editor is a text editor:\n     *    1. Replace current value with the character the user typed; or\n     *    2. Clear it on BACKSPACE, DELETE, or other invalid character (_e.g._ when user types a letter but the cell editor only accepts digits).\n     *\n     * > In invoked, user has the option to back out by pressing the ESCAPE key.\n     *\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    editOnKeydown: true,\n\n    /**\n     * @summary Open cell editor when cell selected via keyboard navigation.\n     * @desc Keyboard navigation always includes:\n     * 1. The four arrow keys -- but only when there is no active text cell editor open\n     * 2. Additional keys mapped to the four directs in {@link module:defaults.navKeyMap}\n     *\n     * Generally set at the grid level. If set at the column (or cell) level, note that the property pertains to the cell navigated _to,_ not the cell navigated _away from._\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    editOnNextCell: false,\n\n\n    /* COLUMN SORTING */\n\n    /**\n     * Ignore sort handling in feature/ColumnSorting.js.\n     * Useful for excluding some columns but not other from participating in sorting.\n     *\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    unsortable: false,\n\n    /**\n     * Sort column on double-click rather than single-click.\n     *\n     * Used by:\n     * * feature/ColumnSorting.js to decide which event to respond to (if any, see `unsortabe`).\n     * * feature/ColumnSelection.js to decide whether or not to wait for double-click.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    sortOnDoubleClick: true,\n\n    /**\n     * **This is a standard property definition for sort plug-in use.\n     * It is not referenced in core.**\n     *\n     * The maximum number of columns that may participate in a multi-column sort (via ctrl-click headers).\n     * @default\n     * @type {number}\n     * @memberOf module:defaults\n     */\n    maxSortColumns : 3,\n\n    /**\n     * **This is a standard property definition for sort plug-in use.\n     * It is not referenced in core.**\n     *\n     * Column(s) participating and subsequently hidden still affect sort.\n     *\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    sortOnHiddenColumns: true,\n\n\n    /**\n     * @summary Retain row selections.\n     * @desc When falsy, row selections are cleared when selecting cells; when truthy, row selections are kept as is when selecting cells.\n     * @todo Deprecate in favor of something simpler like `keepRowSelections`. (The current name is misleading and has caused some confusion among both developers and users. At the very least it should have been called `checkboxOnlyRowDeselections`.)\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    checkboxOnlyRowSelections: false,\n\n    /**\n     * @summary Select cell's entire row.\n     * @desc When truthy, selecting a cell will also select the entire row it is in, subject to note #1 below.\n     *\n     * Notes:\n     * 1. Ineffectual unless `checkboxOnlyRowSelections` is set to `false`.\n     * 2. To allow auto-selection of _multiple rows,_ set `singleRowSelectionMode` to `false`.\n     *\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    autoSelectRows: false,\n\n    /**\n     * @summary Select cell's entire column.\n     * @desc When truthy, selecting a cell will also select the entire column it is in.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    autoSelectColumns: false,\n\n    /**\n     * Collapse cell selection onto next row selection.\n     * @default\n     * @type {boolean}\n     * @memberOf module:defaults\n     */\n    collapseCellSelections: false,\n\n    /** @summary Name of a formatter for cell text.\n     * @desc Unknown formatter falls back to the `string` formatter (simple conversion to string with `+ ''`).\n     * @default undefined\n     * @type {string}\n     * @memberOf module:defaults\n     * @tutorial localization\n     */\n    format: undefined,\n\n    /** @summary Name of a cell editor from the {@link module:cellEditors|cellEditors API}..\n     * @desc Not editable if named editor is does not exist.\n     * @default undefined\n     * @type {string}\n     * @memberOf module:defaults\n     * @tutorial cell-editors\n     */\n    editor: undefined,\n\n    /**\n     * Name of cell renderer from the {@link module:cellRenderers|cellRenderers API}.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    renderer: 'SimpleCell',\n\n    /**\n     * Name of grid renderer.\n     * Renderer must have been registered.\n     * @see {@link Renderer#registerGridRenderer}.\n     * @default\n     * @type {string}\n     * @memberOf module:defaults\n     */\n    gridRenderer: 'by-columns-and-rows',\n\n    /********** HOVER COLORS **********/\n\n    /** @typedef hoverColors\n     * @property {boolean} [enable=false] - `false` means not hilite on hover\n     * @property {cssColor} backgroundColor - cell, row, or column background color. Alpha channel will be respected and if given will be painted over the cells predetermined color.\n     * @property {cssColor} [header.backgroundColor=backgroundColor] - for columns and rows, this is the background color of the column or row \"handle\" (header rows or columns, respectively). (Not used for cells.)\n     */\n\n    /** On mouse hover, whether to repaint the cell background and how.\n     * @type {hoverColors}\n     * @default '{ enabled: true, background: rgba(160, 160, 40, 0.30) }'\n     * @memberOf module:defaults\n     */\n    hoverCellHighlight: {\n        enabled: true,\n        backgroundColor: 'rgba(160, 160, 40, 0.45)'\n    },\n\n    /** On mouse hover, whether to repaint the row background and how.\n     * @type {hoverColors}\n     * @default '{ enabled: true, background: rgba(100, 100, 25, 0.15) }'\n     * @memberOf module:defaults\n     */\n    hoverRowHighlight: {\n        enabled: true,\n        backgroundColor: 'rgba(100, 100, 25, 0.30)'\n\n    },\n\n    /** On mouse hover, whether to repaint the column background and how.\n     * @type {hoverColors}\n     * @default '{ enabled: true, background: rgba(60, 60, 15, 0.15) }'\n     * @memberOf module:defaults\n     */\n    hoverColumnHighlight: {\n        enabled: true,\n        backgroundColor: 'rgba(60, 60, 15, 0.15)'\n    },\n\n    /** @summary Display cell value as a link (with underline).\n     * @desc One of:\n     * * `boolean` - No action occurs on click; you would need to attach a 'fin-click' listener to the hypergrid object.\n     *   * `true` - Displays the cell as a link.\n     *   * _falsy_ - Displays the cell normally.\n     * * `string` -  The URL is decorated (see {}) and then opened in a separate window/tab. See also {@link module:defaults.linkTarget|linkTarget}.\n     *   * `'*'` - Use the cell value as the URL, ready for decorating (see {CellClick#openLink|openLink)).\n     *   * _field name_ - Fetches the string from the named field in the same row, assumed to be a URL ready for decorating. (May contain only alphanumerics and underscore; no spaces or other punctuation.)\n     *   * _otherwise_ Assumed to contains a URL ready for decorating.\n     * * `function` - A function to execute to get the URL ready for decorating. The function is passed a single parameter, `cellEvent`, from which you can get the field `name`, `dataRow`, _etc._\n     * * `Array` - An array to \"apply\" to {@link https://developer.mozilla.org/docs/Web/API/Window/open window.open} in its entirety. The first element is interpreted as above for `string` or `function`.\n     *\n     * In the case of `string` or `Array`, the link is further unpacked by {@link module:CellClick.openLink|openLink} and then sent to `grid.windowOpen`.\n     *\n     * @example\n     * // following affect upper-left data cell:\n     * grid.behavior.setCellProperty(0, 0, 'https://nytimes.com'); // absolute address using specific protocol\n     * grid.behavior.setCellProperty(0, 0, '//nytimes.com'); // absolute address using current protocol\n     * grid.behavior.setCellProperty(0, 0, '/page2.com'); // relative to current site\n     * grid.behavior.setCellProperty(0, 0, 'mypage.com'); // relative to current page\n     * grid.behavior.setCellProperty(0, 0, 'mypage.com?id=%value'); // cell's value will replace %value\n     * grid.behavior.setCellProperty(0, 0, ['//www.newyorker.com', 'ny', undefined, true]) // target='ny', replace=true\n     * @type {boolean|string|Array}\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    link: false,\n\n    /** @summary The window (or tab) in which to open the link.\n     * @desc The default ('_blank'`) will open a new window for every click.\n     *\n     * To have the first click open a new window and all subsequent clicks reuse that same window, set this to an arbitrary string.\n     *\n     * Otherwise, specific columns or cells can be set to open their links in their own window by setting the appropriate column's or cell's `linkTarget` property.\n     * @default\n     * @memberOf module:defaults\n     */\n    linkTarget: '_blank',\n\n    /** @summary Underline link on hover only.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    linkOnHover: false,\n\n    /** @summary Color for link.\n     * @desc Falsy means defer to foreground color.\n     * @type {string}\n     * @default\n     * @memberOf module:defaults\n     */\n    linkColor: 'blue',\n\n    /** @summary Color for visited link.\n     * @desc Falsy means defer to foreground color.\n     * @type {string}\n     * @default\n     * @memberOf module:defaults\n     */\n    linkVisitedColor: 'purple',\n\n    /** @summary Color link on hover only.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    linkColorOnHover: false,\n\n    /** Display cell font with strike-through line drawn over it.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    strikeThrough: false,\n\n    /** Allow multiple cell region selections.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    multipleSelections: false,\n\n    /** @summary Re-render grid at maximum speed.\n     * @desc In this mode:\n     * * The \"dirty\" flag, set by calling `grid.repaint()`, is ignored.\n     * * `grid.getCanvas().currentFPS` is a measure of the number times the grid is being re-rendered each second.\n     * * The Hypergrid renderer gobbles up CPU time even when the grid appears idle (the very scenario `repaint()` is designed to avoid). For this reason, we emphatically advise against shipping applications using this mode.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    enableContinuousRepaint: false,\n\n    /** @summary Allow user to move columns .\n     * @desc Columns can be reordered through either of two interfaces:\n     * * Column Dragging feature\n     * * behavior.columns API\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    columnsReorderable: true,\n\n    /** @summary Column grab within this number of pixels from top of cell.\n     * @type {number}\n     * @default\n     * @memberOf module:defaults\n     */\n    columnGrabMargin: 5,\n\n    /** @summary Set up a clipping region around each column before painting cells.\n     * @desc One of:\n     * * `true` - Clip column.\n     * * `false` - Do not clip column.\n     * * `null` - Clip iff last active column.\n     *\n     * Clipping prevents text that overflows to the right of the cell from being rendered.\n     * If you can guarantee that none of your text will overflow, turn column clipping off\n     * for better performance. If not, you may still be able to get away without clipping.\n     * If the background color of the next column is opaque, you don't really need to clip,\n     * although text can leak out to the right of the last column. Clipping the last column\n     * only can help this but not solve it since the leaked text from (say) the column before\n     * the last column could stretch across the entire last column and leak out anyway.\n     * The solution to this is to clip the rendered string so at most only a partial character\n     * will overflow.\n     * @type {boolean|undefined}\n     * @default\n     * @memberOf module:defaults\n     */\n    columnClip: true,\n\n    /**\n     * @summary Repeating pattern of property overrides for grid rows.\n     * @desc Notes:\n     * * \"Grid row\" refers to data rows.\n     * * Row index modulo is applied when dereferencing this array. In other words, this array represents a _repeating pattern_ of properties to be applied to the data rows.\n     * * For no row properties, specify a falsy value in place of the array.\n     * * Do not specify an empty array (will throw an error).\n     * * Each element of the array may be either:\n     *   * An object containing property overrides to be applied to every cell of the row; or\n     *   * A falsy value signifying that there are no row properties for this specific row.\n     * * Caveat: Row properties use `Object.assign()` to copy properties and therefore are not as performant as column properties which use prototype chain.\n     * * `Object.assign()` is a polyfill in older versions of Chrome (<45) and in all Internet Explorer (through 11).\n     * @type {undefined|object[]}\n     * @default\n     * @memberOf module:defaults\n     */\n    rowStripes: undefined,\n\n    // for Renderer.prototype.assignProps\n    propClassLayers: propClassLayersMap.DEFAULT,\n\n    /**\n     * Used to access registered features -- unless behavior has a non-empty `features` property (array of feature contructors).\n     */\n    features: [\n        'filters',\n        'cellselection',\n        'keypaging',\n        'columnresizing',\n        // 'rowresizing',\n        'rowselection',\n        'columnselection',\n        'columnmoving',\n        'columnsorting',\n        'cellclick',\n        'cellediting',\n        'onhover'\n    ],\n\n    /** @summary Restore row selections across data transformations (`reindex` calls).\n     * @desc The restoration is based on the underlying data row indexes.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    restoreRowSelections: true,\n\n    /** @summary Restore column selections across data transformations (`reindex` calls).\n     * @desc The restoration is based on the column names.\n     * @type {boolean}\n     * @default\n     * @memberOf module:defaults\n     */\n    restoreColumnSelections: true,\n\n    /** @summary How to truncate text.\n     * @desc A \"quaternary\" value, one of:\n     * * `undefined` - Text is not truncated.\n     * * `true` (default) - Truncate sufficient characters to fit ellipsis if possible. Most acceptable option that avoids need for clipping.\n     * * `false` - Truncate *before* last partially visible character. Visibly annoying; semantically jarring.\n     * * `null` - Truncate *after* partially visible character. Less visibly annoying; still semantically confusing. Best solution when combined with either column clipping or painting over with next column's background.\n     * @type {boolean|null|undefined}\n     * @default\n     * @memberOf module:defaults\n     */\n    truncateTextWithEllipsis: true\n};\n\n\nvar warned = {};\n\nfunction rowPropertiesDeprecationWarning() {\n    if (!warned.rowProperties) {\n        warned.rowProperties = true;\n        console.warn('The `rowProperties` property has been deprecated as of v2.1.0 in favor of `rowStripes`. (Will be removed in a future release.)');\n    }\n}\n\nObject.defineProperties(defaults, {\n    rowProperties: {\n        get: function() {\n            rowPropertiesDeprecationWarning();\n            return this.rowStripes;\n        },\n        set: function(rowProperties) {\n            rowPropertiesDeprecationWarning();\n            this.rowStripes = rowProperties;\n        }\n    }\n});\n\nfunction columnOnlyError() {\n    throw new HypergridError('Attempt to set/get column-only property on a non-column properties object.');\n}\n\n['name', 'type', 'header', 'calculator'].forEach(function(key) {\n    Object.defineProperty(defaults, key, {\n        set: columnOnlyError\n    });\n});\n\n/** @typedef {string} cssColor\n * @see https://developer.mozilla.org/docs/Web/CSS/color_value\n */\n/** @typedef {string} cssFont\n * @see https://developer.mozilla.org/docs/Web/CSS/font\n */\n\n\n/**\n * Returns any value of `keyChar` that passes the following logic test:\n * 1. If a non-printable, white-space character, then nav key.\n * 2. If not (i.e., a normal character), can still be a nav key if not editing on key down.\n * 3. If not, can still be a nav key if CTRL key is down.\n *\n * Note: Callers are typcially only interested in the following values of `keyChar` and will ignore all others:\n * * `'LEFT'` and `'LEFTSHIFT'`\n * * `'RIGHT'` and `'RIGHTSHIFT'`\n * * `'UP'` and `'UPSHIFT'`\n * * `'DOWN'` and `'DOWNSHIFT'`\n *\n * @param {string} keyChar - A value from Canvas's `charMap`.\n * @param {boolean} [ctrlKey=false] - The CTRL key was down.\n * @returns {undefined|string} `undefined` means not a nav key; otherwise returns `keyChar`.\n * @memberOf module:defaults\n */\nfunction navKey(keyChar, ctrlKey) {\n    var result;\n    if (keyChar.length > 1 || !this.editOnKeydown || ctrlKey) {\n        result = keyChar; // return the mapped value\n    }\n    return result;\n}\n\n/**\n * Returns only values of `keyChar` that, when run through {@link module:defaults.navKeyMap|navKeyMap}, pass the {@link module:defaults.navKey|navKey} logic test.\n *\n * @param {string} keyChar - A value from Canvas's `charMap`, to be remapped through {@link module:defaults.navKeyMap|navKeyMap}.\n * @param {boolean} [ctrlKey=false] - The CTRL key was down.\n * @returns {undefined|string} `undefined` means not a nav key; otherwise returns `keyChar`.\n * @memberOf module:defaults\n */\nfunction mappedNavKey(keyChar, ctrlKey) {\n    keyChar = this.navKeyMap[keyChar];\n    return keyChar && this.navKey(keyChar);\n}\n\n/** @summary Reapply cell properties after `getCell`.\n * @type {boolean}\n * @default\n * @memberOf module:defaults\n */\nfunction reapplyCellProperties(value) {\n    if (!warned.reapplyCellProperties) {\n        console.warn('The `.reapplyCellProperties` property has been deprecated as of v2.1.3 in favor of using the new `.propClassLayers` property. (May be removed in a future release.) This property is now a setter which sets `.propClassLayers` to `.propClassLayersMap.DEFAULT` (grid ← columns ← stripes ← rows ← cells) on truthy or `propClassLayersMap.NO_ROWS` (grid ← columns ← cells) on falsy, which is what you will see on properties stringification. This will give the same effect in most cases as the former property implementation, but not in all cases due to it no longer being applied dynamically. Developers should discontinue use of this property and start specifying `.propClassLayers` instead.');\n        warned.reapplyCellProperties = true;\n    }\n    this.propClassLayers = value ? propClassLayersMap.NO_ROWS : propClassLayersMap.DEFAULT;\n}\n\nfunction deleteProp(propName) {\n    var descriptor = Object.getOwnPropertyDescriptor(this, propName);\n    if (!descriptor) {\n        return false; // own property not found\n    } else if (!descriptor.get) {\n        return delete this[propName]; // non-accessor property found (returns !descriptor.configurable)\n    } else if (descriptor.get.toString().indexOf('.var.')) {\n        this.var[propName] = Object.getPrototypeOf(this)[propName];\n    } else {\n        return true; // property not deletable\n    }\n    this.grid.repaint();\n    return false; // delete was successful\n}\n\n/**\n * @summary Execute value if \"calculator\" (function) or if column has calculator.\n * @desc This function is referenced here so:\n * 1. It will be available to the cell renderers\n * 2. Its context will naturally be the `config` object\n * @default {@link module:defaults.exec|exec}\n * @method\n * @param vf - Value or function.\n * @memberOf module:defaults\n */\nfunction exec(vf) {\n    if (this.dataRow) {\n        var calculator = (typeof vf)[0] === 'f' && vf || this.calculator;\n        if (calculator) {\n            vf = calculator(this.dataRow, this.name, this.subrow);\n        }\n    }\n    return vf;\n}\n\n// Add \"utility\" props so they will be available wherever props are available but make them non-enumerable because they are not real props.\nObject.defineProperties(defaults, {\n    mixIn: { value: require('overrider').mixIn },\n    delete: { value: deleteProp },\n    propClassEnum: { value: propClassEnum },\n    propClassLayersMap: { value: propClassLayersMap },\n    navKey: { value: navKey },\n    mappedNavKey: { value: mappedNavKey },\n    reapplyCellProperties: { set: reapplyCellProperties },\n    exec: { value: exec }\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nfunction bundleColumns(resetCellEvents) {\n    var gridProps = this.grid.properties,\n        vr, visibleRows = this.visibleRows,\n        r, R = visibleRows.length, pool;\n\n    if (resetCellEvents) {\n        pool = this.cellEventPool;\n        var p = 0;\n        this.visibleColumns.forEachWithNeg(function(vc) {\n            for (r = 0; r < R; r++, p++) {\n                vr = visibleRows[r];\n                // reset pool member to reflect coordinates of cell in newly shaped grid\n                pool[p].reset(vc, vr);\n            }\n        });\n    }\n\n    var bundle,\n        columnBundles = [],\n        gridPrefillColor = gridProps.backgroundColor,\n        backgroundColor;\n\n    this.visibleColumns.forEachWithNeg(function(vc) {\n        backgroundColor = vc.column.properties.backgroundColor;\n        if (bundle && bundle.backgroundColor === backgroundColor) {\n            bundle.right = vc.right;\n        } else if (backgroundColor === gridPrefillColor) {\n            bundle = undefined;\n        } else {\n            bundle = {\n                backgroundColor: backgroundColor,\n                left: vc.left,\n                right: vc.right\n            };\n            columnBundles.push(bundle);\n        }\n    });\n\n    this.columnBundles = columnBundles;\n}\n\nmodule.exports = bundleColumns;\n","/* eslint-env browser */\n\n/**\n * @module localization\n */\n\n'use strict';\n\nvar Base = require('../Base');\n\n\n/**\n * @param {string} defaultLocale\n * @param {string} [locale=defaultlocale]\n * @param {object} [options]\n * @constructor\n */\nvar Formatter = Base.extend({\n    initialize: function(defaultLocale, locale, options) {\n        if (typeof locale === 'object') {\n            options = locale;\n            locale = defaultLocale;\n        }\n\n        this.locale = locale;\n\n        if (options) {\n            if (typeof options.invalid === 'function') {\n                this.invalid = options.invalid;\n            }\n\n            if (options.expectation) {\n                this.expectation = options.expectation;\n            }\n        }\n    }\n});\n\n\n// Safari has no Intl implementation\nif (!window.Intl) {\n    window.Intl = {\n        NumberFormat: function(locale, options) {\n            var digits = '0123456789';\n            this.format = function(n) {\n                var s = n.toString();\n                if (!options || options.useGrouping === undefined || options.useGrouping) {\n                    var dp = s.indexOf('.');\n                    if (dp < 0) {\n                        dp = s.length;\n                    }\n                    while ((dp -= 3) > 0 && digits.indexOf(s[dp - 1]) >= 0) {\n                        s = s.substr(0, dp) + ',' + s.substr(dp);\n                    }\n                }\n                return s;\n            };\n        },\n        DateTimeFormat: function(locale, options) {\n            this.format = function(date) {\n                if (date != null) {\n                    if (typeof date !== 'object') {\n                        date = new Date(date);\n                    }\n                    date = date.getMonth() + 1 + '-' + date.getDate() + '-' + date.getFullYear();\n                } else {\n                    date = null;\n                }\n                return date;\n            };\n        }\n    };\n}\n\n\n/**\n * @summary Create a number localizer.\n * @implements localizerInterface\n * @desc Create an object conforming to {@link localizerInterface} for numbers, using {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat `Intl.NumberFormat`}.\n * @param {string} defaultLocale\n * @param {string} [locale=defaultLocale] - Passed to the {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat `Intl.NumberFormat`} constructor.\n * @param {object} [options] - Passed to the `Intl.NumberFormat` constructor.\n * @param {boolean} [options.acceptStandardDigits=false] - Accept standard digits and decimal point interchangeably with localized digits and decimal point. (This option is interpreted here; it is not used by `Intl.NumberFormat`.)\n * @constructor\n * @extends Formatter\n * @tutorial localization\n */\nvar NumberFormatter = Formatter.extend('NumberFormatter', {\n    initialize: function(defaultLocale, locale, options) {\n        if (typeof locale === 'object') {\n            options = locale;\n        }\n\n        options = options || {};\n\n        this.format = new Intl.NumberFormat(this.locale, options).format;\n\n        var mapperOptions = { useGrouping: false },\n            mapper = new Intl.NumberFormat(this.locale, mapperOptions).format;\n\n        this.demapper = demap.bind(this);\n\n        /**\n         * @summary A string containing the valid characters.\n         * @desc Contains all localized digits + localized decimal point.\n         * If we're accepting standard digits, will also contain all the standard digits + standard decimal point (if different than localized versions).\n         * @type {string}\n         * @private\n         * @desc Localized digits and decimal point. Will also include standardized digits and decimal point if `options.acceptStandardDigits` is truthy.\n         *\n         * For internal use by the {@link NumberFormatter#parse|parse} method.\n         * @memberOf NumberFormatter.prototype\n         */\n        this.map = mapper(10123456789.5).substr(1, 11); // localized '0123456789.'\n\n        if (options.acceptStandardDigits && this.map !== '0123456789.') {\n            this.map += '0123456789.';  // standard '0123456789.'\n        }\n\n        /** @summary A regex that tests `true` on first invalid character.\n         * @type {RegExp}\n         * @private\n         * @desc Valid characters include:\n         *\n         * * Localized digits\n         * * Localized decimal point\n         * * Standard digits (when `options.acceptStandardDigits` is truthy)\n         * * Standard decimal point (when `options.acceptStandardDigits` is truthy)\n         * * Cosmetic characters added by formatter as per `options` (for human-friendly readability).\n         *\n         * Any characters outside this set are considered invalid.\n         *\n         * Set by the constructor; consumed by the {@link module:localization~NumberFormatter#invalid|invalid} method.\n         *\n         * Testing a string against this pattern yields `true` if at least one invalid character or `false` if all characters are valid.\n         * @memberOf NumberFormatter.prototype\n         */\n        this.invalids = new RegExp(\n            '[^' +\n            this.format(11111).replace(this.map[1], '') + // thousands separator if in use\n            this.map + // digits + decimal point\n            ']'\n        );\n    },\n\n    /** @summary Tests for invalid characters.\n     * @desc Tests a localized string representation of a number that it contains any invalid characters.\n     *\n     * The number may be unformatted or it may be formatted with any of the permitted formatting characters, as implied by the constructor's `options` (passed to `Intl.NumberFormat`). Any other characters are considered invalid.\n     *\n     * However, standard digits and the standard decimal point are considered valid if the value of `options.acceptStandardDigits` as provided to the constructor was truthy. (Of course, these are always valid for locales that use them.)\n     *\n     * Use this method to:\n     * 1. Filter out invalid characters on a `onkeydown` event; or\n     * 2. Test an edited string prior to calling the {@link module:localization~NumberFormatter#parse|parse}.\n     *\n     * NOTE: This method does not check grammatical syntax; it only checks for invalid characters.\n     *\n     * @param number\n     * @returns {boolean|string} Falsy means valid which in this case means contains only valid characters.\n     * @memberOf NumberFormatter.prototype\n     */\n    invalid: function(number) {\n        return this.invalids.test(number);\n    },\n\n    expectation:\n        'Expected a number with optional commas (thousands grouping separator), optional decimal point, and an optional fractional part.\\n' +\n        'Comma separators are part of the format and will always be displayed for values >= 1000.\\n' +\n        'Edited values are always saved in their entirety even though the formatted value is rounded to the specified number of decimal places.',\n\n    /**\n     * This method will:\n     * * Convert localized digits and decimal point characters to standard digits and decimal point characters.\n     * * \"Clean\" the string by ignoring all other characters.\n     * * Coerce the string to a number primitive.\n     * @param {string} formattedLocalizedNumber - May or may not be formatted.\n     * @returns {number} Number primitive.\n     * @throws {string} Invalid number.\n     * @memberOf NumberFormatter.prototype\n     */\n    parse: function(formattedLocalizedNumber) {\n        var number = Number(\n            formattedLocalizedNumber.split('').map(this.demapper).join('')\n        );\n\n        if (isNaN(number)) {\n            throw 'Invalid Number';\n        }\n\n        return number;\n    }\n});\n\nfunction demap(c) {\n    var d = this.map.indexOf(c) % 11;\n    return d < 0 ? '' : d < 10 ? d : '.';\n}\n\n/**\n * @implements localizerInterface\n * @param {string} defaultLocale\n * @param {string} [locale=defaultlocale] - Passed to the {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateFormat `Intl.DateFormat`} constructor.\n * @param {object} [options] - Passed to the `Intl.DateFormat` constructor.\n * @constructor\n * @extends Formatter\n */\nvar DateFormatter = Formatter.extend('DateFormatter', {\n    initialize: function(defaultLocale, locale, options) {\n        if (typeof locale === 'object') {\n            options = locale;\n        }\n\n        options = options || {};\n\n        /** @summary Transform a date object into human-friendly string representation.\n         * @method\n         */\n        this.format = new Intl.DateTimeFormat(this.locale, options).format;\n\n        // Get digits because may be chinese or \"real Arabic\" numerals.\n        var testOptions = { useGrouping: false, style: 'decimal' },\n            localizeNumber = new Intl.NumberFormat(this.locale, testOptions).format,\n            localizedDigits = this.localizedDigits = localizeNumber(10123456789).substr(1, 10); // all localized digits in numerical order\n\n        this.digitFormatter = formatDigit.bind(this);\n        this.digitParser = parseDigit.bind(this);\n\n        // Localize a test date with the default numeric parts to find out the resulting order of these parts.\n        var yy = 1987,\n            mm = 12,\n            dd = 30,\n            YY = this.transformNumber(this.digitFormatter, yy),\n            MM = this.transformNumber(this.digitFormatter, mm),\n            DD = this.transformNumber(this.digitFormatter, dd),\n            testDate = new Date(yy, mm - 1, dd),\n            localizeDate = new Intl.DateTimeFormat(this.locale).format,\n            localizedDate = localizeDate(testDate), // all localized digits + localized punctuation\n            missingDigits = new Intl.NumberFormat(this.locale).format(456),\n            localizedNumberPattern = this.localizedNumberPattern = new RegExp('[' + localizedDigits + ']+', 'g'),\n            parts = localizedDate.match(localizedNumberPattern);\n\n        this.partsMap = {\n            yy: parts.indexOf(YY),\n            mm: parts.indexOf(MM),\n            dd: parts.indexOf(DD)\n        };\n\n        if (options.acceptStandardDigits) {\n            missingDigits += '1234567890';\n        }\n\n        /** @summary A regex that tests `true` on first invalid character.\n         * @type {RegExp}\n         * @private\n         * @desc Valid characters include:\n         *\n         * * Localized digits\n         * * Standard digits (when `options.acceptStandardDigits` is truthy)\n         * * Localized punctuation to delimit date parts\n         *\n         * Any characters outside this set are considered invalid. Note that this only currently implemented when all three date parts are numeric\n         *\n         * Set by the constructor; consumed by the {@link NumberFormatter#valid|valid} method.\n         *\n         * Testing a string against this pattern yields `true` if at least one invalid character or `false` if all characters are valid.\n         * @memberOf DateFormatter.prototype\n         */\n        this.invalids = new RegExp(\n            '[^' +\n            localizedDate.replace(/-/g, '\\\\-') +\n            missingDigits +\n            ']'\n        );\n    },\n\n    /** @summary Tests for invalid characters.\n     * @desc Tests a localized string representation of a number that it contains any invalid characters.\n     *\n     * The date is assumed to contain localized digits and punctuation as would be returned by `Intl.DateFormat` with the given `locale` and `options`. Any other characters are considered invalid.\n     *\n     * However, standard digits and the standard decimal point are also considered valid if the value of `options.acceptStandardDigits` as provided to the constructor was truthy. (Of course, these are always valid for locales that use them.)\n     *\n     * Use this method to:\n     * 1. Filter out invalid characters on a `onkeydown` event; or\n     * 2. Test an edited string prior to calling the {@link module:localization~DateFormatter#parse|parse}.\n     *\n     * NOTE: The current implementation only supports date formats using all numerics (which is the default for `Intl.DateFormat`).\n     *\n     * NOTE: This method does not check grammatical syntax; it only checks for invalid characters.\n     *\n     * @param number\n     * @returns {boolean} Contains only valid characters.\n     * @memberOf DateFormatter.prototype\n     */\n    invalid: function(number) {\n        return this.invalids.test(number);\n    },\n\n    /**\n     * This method will:\n     * * Convert localized date to Date object.\n     * * \"Clean\" the string by ignoring all other characters.\n     * * Coerce the string to a number primitive.\n     * @param {string} localizedDate\n     * @returns {Date}\n     * @throws {string} Invalid date.\n     * @memberOf DateFormatter.prototype\n     */\n    parse: function(localizedDate) {\n        var date,\n            parts = localizedDate.match(this.localizedNumberPattern);\n\n        if (parts && parts.length === 3) {\n            var y = this.transformNumber(this.digitParser, parts[this.partsMap.yy]),\n                m = this.transformNumber(this.digitParser, parts[this.partsMap.mm]) - 1,\n                d = this.transformNumber(this.digitParser, parts[this.partsMap.dd]);\n\n            date = new Date(y, m, d);\n        } else {\n            throw 'Invalid Date';\n        }\n\n        return date;\n    },\n\n    /**\n     * Transform a number to or from a string representation with localized digits.\n     * @param {function} digitTransformer - A function bound to `this`.\n     * @param {number} number\n     * @returns {string}\n     * @private\n     * @memberOf DateFormatter.prototype\n     */\n    transformNumber: function(digitTransformer, number) {\n        return number.toString().split('').map(digitTransformer).join('');\n    }\n});\n\nfunction formatDigit(d) {\n    return this.localizedDigits[d];\n}\n\nfunction parseDigit(c) {\n    var d = this.localizedDigits.indexOf(c);\n    if (d < 0) { d = ''; }\n    return d;\n}\n\n/**\n * All members are localizers (conform to {@link localizerInterface}) with exception of `get`, `set`, and localizer constructors which are named (by convention) ending in \"Formmatter\".\n *\n * The application developer is free to add localizers and localizer factory methods. See the {@link Localization#construct|construct} convenience method which may be helpful in this regard.\n * @param locale\n * @param {object} [numberOptions]\n * @param {object} [dateOptions]\n * @constructor\n */\nfunction Localization(locale, numberOptions, dateOptions) {\n    this.locale = locale;\n\n    /**\n     * @name number\n     * @see The {@link NumberFormatter|NumberFormatter} class\n     * @memberOf Localization.prototype\n     */\n    this.int = this.float = this.construct('number', NumberFormatter, numberOptions);\n\n    /**\n     * @see The {@link DateFormatter|DateFormatter} class\n     * @memberOf Localization.prototype\n     */\n    this.construct('date', DateFormatter, dateOptions);\n}\n\nLocalization.prototype = {\n    constructor: Localization.prototype.constructor,\n    $$CLASS_NAME: 'Localization',\n\n    /** @summary Creates a localizer from a localizer factory object using the default locale.\n     * @desc Performs the following actions:\n     * 1. Binds `Constructor` to `locale`.\n     * 2. Adds the newly bound constructor to this object (for future reference) with the key \"NameFormatter\" (where \"Name\" is the localizer name, all lower case but with an initial capital).\n     * 3. Uses the newly bound constructor to create a new localized localizer with the provided options.\n     * 4. Adds new localizer to this object via {@link Localization#add|add}.\n     *\n     * @param {string} localizerName\n     * @param {Constructor\n     * @param {object} {factoryOptions}\n     * @returns {localizerInterface} The new localizer.\n     */\n    construct: function(localizerName, Constructor, factoryOptions) {\n        var constructorName = localizerName[0].toUpperCase() + localizerName.substr(1).toLowerCase() + 'Formatter',\n            BoundConstructor = Constructor.bind(null, this.locale),\n            localizer = new BoundConstructor(factoryOptions);\n\n        this[constructorName] = BoundConstructor;\n\n        return this.add(localizerName, localizer);\n    },\n\n    /** @summary Register a localizer.\n     * @desc Checks the provided localizer that it conforms to {@link localizerInterface}\n     * and adds it to the object using localizerName all lower case as the key.\n     * @param {string} name\n     * @param {localizerInterface} localizer\n     * @memberOf Localization.prototype\n     * @returns {localizerInterface} The provided localizer.\n     */\n    add: function(name, localizer) {\n        if (typeof name === 'object') {\n            localizer = name;\n            name = undefined;\n        }\n\n        if (\n            typeof localizer !== 'object' ||\n            typeof localizer.format !== 'function' ||\n            typeof localizer.parse !== 'function' ||\n            localizer.invalid && typeof localizer.invalid !== 'function' ||\n            localizer.expectation && typeof localizer.expectation !== 'string'\n        ) {\n            throw 'Expected localizer object to conform to interface.';\n        }\n\n        name = name || localizer.name;\n        name = name && name.toLowerCase();\n        this[name] = localizer;\n\n        return localizer;\n    },\n\n    /**\n     *\n     * @param localizerName\n     * @returns {localizerInterface}\n     * @memberOf Localization.prototype\n     */\n    get: function(name) {\n        return this[name && name.toLowerCase()] || this.string;\n    },\n\n    ///  ///  ///  ///  ///    LOCALIZERS    ///  ///  ///  ///  ///\n\n    // Special localizer for use by Chrome's date input control.\n    chromeDate: {\n        format: function(date) {\n            if (date != null) {\n                if (typeof date !== 'object') {\n                    date = new Date(date);\n                }\n\n                var yy = date.getFullYear(),\n                    m = date.getMonth() + 1, mm = m < 10 ? '0' + m : m,\n                    d = date.getDate(), dd = d < 10 ? '0' + d : d;\n\n                date = yy + '-' + mm + '-' + dd;\n            } else {\n                date = null;\n            }\n            return date;\n        },\n        parse: function(str) {\n            var date,\n                parts = str.split('-');\n            if (parts && parts.length === 3) {\n                date = new Date(parts[0], parts[1] - 1, parts[2]);\n            } else {\n                date = null;\n            }\n            return date;\n        }\n    },\n\n    null: {\n        format: function(value) {\n            return value;\n        },\n        parse: function(str) {\n            return str;\n        }\n    },\n\n    string: {\n        format: function(value) {\n            return value + '';\n        },\n        parse: function(str) {\n            return str + '';\n        }\n    }\n};\n\nmodule.exports = Localization;\n","'use strict';\n\n/**\n * For each key in src:\n * * When `src[key]` is defined, assigns it to `object[key]` when the latter does not exist or is writable or is a setter\n * * When `src[key]` is undefined:\n *    * When `object[key]` is a configurable property and not an accessor, deletes it\n *    * Else when `object[key]` is writable or a setter, assigns `undefined` (setter handles deletion)\n * @param {object} dest\n * @param {object} src - Defined values set the corresponding key in `dest`. `undefined` values delete the key from `dest`.\n */\nmodule.exports = function(dest, src) {\n    Object.keys(src).forEach(function(key) {\n        var descriptor;\n        for (var obj = dest; obj; obj = Object.getPrototypeOf(obj)) {\n            if ((descriptor = Object.getOwnPropertyDescriptor(obj, key))) {\n                break;\n            }\n        }\n\n        if (src[key] !== undefined) {\n            if (!descriptor || descriptor.writable || descriptor.set) {\n                dest[key] = src[key];\n            }\n        } else if (descriptor) {\n            if (descriptor.configurable && !descriptor.set && !descriptor.get) {\n                delete dest[key];\n            } else if (descriptor.writable || descriptor.set) {\n                dest[key] = undefined;\n            }\n        } // else no descriptor so no property to delete\n    });\n};\n","'use strict';\n\n// all instances of xX or _X\nvar REGEX_CAMEL_CASE_OR_UNDERSCORE = /([^_A-Z])([A-Z]+)/g;\nvar REGEX_ALL_PUNC_RUN = /[^a-z0-9]+/gi;\n\n// all instances of _x\nvar REGEX_ALL_PUNC_RUN_BEFORE_LETTER = /[^a-z0-9]+([a-z0-9])?/ig;\nfunction WITH_UPPER_CASE(match, char) { return char === undefined ? '' : char.toUpperCase(); }\n\nvar REGEX_INITIAL_DIGIT = /^(\\d)/;\nvar WITH_DOLLAR_PREFIX = '$$$1';\n\nvar REGEX_INITIAL_CAPITAL = /^([A-Z])/;\nfunction WITH_LOWER_CASE(match, char) { return char.toLowerCase(); }\n\nvar REGEXP_LOWER_CASE_LETTER = /[a-z]/;\nvar REGEXP_WORD_SEPARATORS = /[\\s\\-_]*([^\\s\\-_])([^\\s\\-_]+)/g;\nvar WITH_CAPTIAL_LETTER = function(a, b, c) { return b.toUpperCase() + c; };\n\nvar REGEXP_CAPITAL_LETTERS = /[A-Z]+/g;\nvar WITH_PREFIXED_SPACE = ' $&';\n\nvar REGEXP_OVER_CAPITALIZED_WORDS = /([A-Z]+)([A-Z][a-z])/g;\nvar WITH_SEPARATE_WORDS = '$1 $2';\n\n/** @typedef {function} Transformer\n * @param {string} key\n * @returns {string}\n */\n\nmodule.exports = {\n    /** A transformer that returns its input converted to a string with ` + '' `.\n     * @memberOf Synonomous#\n     */\n    verbatim: function(key) {\n        return key + '';\n    },\n\n    /** A transformer that converts runs of punctuation (non-alphanumerics, actually) to \"camelCase\" by removing such runs and capitalizing the first letter of each word.\n     * The first letter of the first word is forced to lower case.\n     * Otherwise, leaves other letters' case as they were.\n     *\n     * When the result begins with a digit, it's prefixed with with `$` for two reasons:\n     * 1. To avoid conflicts with array element indexes.\n     * 2. To create an identifier that can be used to the right of the dot (`.`) dereferencing operator (identifiers cannot start with a digit but can contain a `$`).\n     *\n     * @type {Transformer}\n     * @memberOf Synonomous#\n     */\n    toCamelCase: function(key) {\n        return key\n            .replace(REGEX_ALL_PUNC_RUN_BEFORE_LETTER, WITH_UPPER_CASE)\n            .replace(REGEX_INITIAL_DIGIT, WITH_DOLLAR_PREFIX)\n            .replace(REGEX_INITIAL_CAPITAL, WITH_LOWER_CASE);\n    },\n\n    /** A transformer that converts all runs of punctuation (non-alphanumerics, actually), as well as all camel case transitions, to underscore.\n     * Results are converted to all caps.\n     *\n     * When the result begins with a digit, it's prefixed with with `$` for two reasons:\n     * 1. To avoid conflicts with array element indexes.\n     * 2. To create an identifier that can be used to the right of the dot (`.`) dereferencing operator (identifiers cannot start with a digit but can contain a `$`).\n     *\n     * @type {Transformer}\n     * @memberOf Synonomous#\n     */\n    toAllCaps: function(key) {\n        return key\n            .replace(REGEX_ALL_PUNC_RUN, '_')\n            .replace(REGEX_CAMEL_CASE_OR_UNDERSCORE, '$1_$2')\n            .replace(REGEX_INITIAL_DIGIT, WITH_DOLLAR_PREFIX)\n            .toUpperCase();\n    },\n\n    /**\n     * A transformer that separates camel case or white-space-, hyphen-, or underscore-separated-words into truly separate words and capitalizing the first letter of each.\n     *\n     * This transformer is meant to create column headers from column names. It deliberating inserts spaces so the results are unsuitable as JavaScript identifiers.\n     * @type {Transformer}\n     * @memberOf Synonomous#\n     */\n    toTitle: function(key) {\n        return (REGEXP_LOWER_CASE_LETTER.test(key) ? key : key.toLowerCase())\n            .replace(REGEXP_WORD_SEPARATORS, WITH_CAPTIAL_LETTER)\n            .replace(REGEXP_CAPITAL_LETTERS, WITH_PREFIXED_SPACE)\n            .replace(REGEXP_OVER_CAPITALIZED_WORDS, WITH_SEPARATE_WORDS)\n            .trim();\n    }\n};\n","/* globals CustomEvent */\n\n'use strict';\n\nvar details = [\n    'gridCell',\n    'dataCell',\n    'mousePoint',\n    'keys',\n    'row'\n];\n\n/**\n * @this {Hypergrid}\n * @param {string} eventName\n * @param {boolean} [cancelable=false] - Event implements `preventDefault()`. Must be boolean if given.\n * _If omitted, `event` and `primitiveEvent` are promoted to 2nd and 3rd argument positions, respecitvely._\n * @param {object} event\n * @param {CellEvent|MouseEvent|KeyboardEvent|object} [primitiveEvent]\n * @returns {undefined|boolean}\n */\nmodule.exports = function(eventName, cancelable, event, primitiveEvent) {\n    var detail;\n\n    if (!this.canvas) {\n        return;\n    }\n\n    if (typeof cancelable !== 'boolean') {\n        primitiveEvent = event; // propmote primitiveEvent to 3rd position\n        event = cancelable; // promote event to 2nd position\n        cancelable = false; // default when omitted\n    }\n\n    if (!event) {\n        event = {};\n    } else if (event instanceof CustomEvent) {\n        event = Object({}, event);\n    }\n\n    if (!event.type) {\n        event.type = eventName;\n    }\n\n    if (!event.detail) {\n        event = { detail: event };\n    }\n\n    detail = event.detail;\n\n    if (!detail.grid) { // CellEvent objects already have a (read-only) `grid` prop\n        detail.grid = this;\n    }\n\n    detail.time = Date.now();\n\n    if (primitiveEvent) {\n        if (!detail.primitiveEvent) {\n            detail.primitiveEvent = primitiveEvent;\n        }\n        details.forEach(function(key) {\n            if (key in primitiveEvent && !(key in detail)) {\n                detail[key] = primitiveEvent[key];\n            }\n        });\n        if ('dataRow' in primitiveEvent) {\n            // reference (without invoking) cellEvent's `dataRow` getter when available\n            Object.defineProperty(detail, 'row', { get: function() { return primitiveEvent.dataRow; } });\n        }\n    }\n\n    event.cancelable = cancelable;\n\n    return this.canvas.dispatchEvent(new CustomEvent(eventName, event));\n};\n","/* Inspire Tree\n * @version 5.0.1\n * https://github.com/helion3/inspire-tree\n * @copyright Copyright 2015 Helion3, and other contributors\n * @license Licensed under MIT\n *          see https://github.com/helion3/inspire-tree/blob/master/LICENSE\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n\ttypeof define === 'function' && define.amd ? define(['lodash'], factory) :\n\t(global.InspireTree = factory(global._));\n}(this, (function (_) { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar rngBrowser = createCommonjsModule(function (module) {\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n});\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nvar bytesToUuid_1 = bytesToUuid;\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rngBrowser)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid_1(rnds);\n}\n\nvar v4_1 = v4;\n\n/**\n * Reset a node's state to the tree default.\n *\n * @private\n * @param {TreeNode} node Node object.\n * @returns {TreeNode} Node object.\n */\nfunction resetState(node) {\n    _.each(node._tree.defaultState, function (val, prop) {\n        node.state(prop, val);\n    });\n\n    return node;\n}\n\n/**\n * Stores repetitive state change logic for most state methods.\n *\n * @private\n * @param {string} prop State property name.\n * @param {boolean} value New state value.\n * @param {string} verb Verb used for events.\n * @param {TreeNode} node Node object.\n * @param {string} deep Optional name of state method to call recursively.\n * @return {TreeNode} Node object.\n */\nfunction baseStateChange(prop, value, verb, node, deep) {\n    if (node.state(prop) !== value) {\n        node._tree.batch();\n\n        if (node._tree.config.nodes.resetStateOnRestore && verb === 'restored') {\n            resetState(node);\n        }\n\n        // indeterminate may never be true if checked is\n        if (value && prop === 'checked') {\n            node.state('indeterminate', false);\n        }\n\n        node.state(prop, value);\n\n        node._tree.emit('node.' + verb, node, false);\n\n        if (deep && node.hasChildren()) {\n            node.children.recurseDown(function (child) {\n                baseStateChange(prop, value, verb, child);\n            });\n        }\n\n        node.markDirty();\n        node._tree.end();\n    }\n\n    return node;\n}\n\nvar es6Promise = createCommonjsModule(function (module, exports) {\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.2+97478eb6\n */\n\n(function (global, factory) {\n\tmodule.exports = factory();\n}(commonjsGlobal, (function () {\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = commonjsRequire;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof commonjsRequire === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_$$1, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    return promise.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        throw reason;\n      });\n    });\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n    var local = void 0;\n\n    if (typeof commonjsGlobal !== 'undefined') {\n        local = commonjsGlobal;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n\n});\nvar es6Promise_1 = es6Promise.Promise;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toArray = function (arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n};\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        cls.apply(this, arguments);\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\n/**\n * Base function to filter nodes by state value.\n *\n * @private\n * @param {string} state State property\n * @param {boolean} full Return a non-flat hierarchy\n * @return {TreeNodes} Array of matching nodes.\n */\nfunction baseStatePredicate(state, full) {\n    if (full) {\n        return this.extract(state);\n    }\n\n    // Cache a state predicate function\n    var fn = getPredicateFunction(state);\n\n    return this.flatten(function (node) {\n        // Never include removed nodes unless specifically requested\n        if (state !== 'removed' && node.removed()) {\n            return false;\n        }\n\n        return fn(node);\n    });\n}\n/**\n * Base function to invoke given method(s) on tree nodes.\n *\n * @private\n * @param {TreeNode} nodes Array of node objects.\n * @param {string|array} methods Method names.\n * @param {array|Arguments} args Array of arguments to proxy.\n * @param {boolean} deep Invoke deeply.\n * @return {TreeNodes} Array of node objects.\n */\nfunction baseInvoke(nodes, methods, args, deep) {\n    methods = _.castArray(methods);\n\n    nodes._tree.batch();\n\n    nodes[deep ? 'recurseDown' : 'each'](function (node) {\n        _.each(methods, function (method) {\n            if (_.isFunction(node[method])) {\n                node[method].apply(node, args);\n            }\n        });\n    });\n\n    nodes._tree.end();\n\n    return nodes;\n}\n\n/**\n * Creates a predicate function.\n *\n * @private\n * @param {string|function} predicate Property name or custom function.\n * @return {function} Predicate function.\n */\nfunction getPredicateFunction(predicate) {\n    var fn = predicate;\n    if (_.isString(predicate)) {\n        fn = function fn(node) {\n            return _.isFunction(node[predicate]) ? node[predicate]() : node[predicate];\n        };\n    }\n\n    return fn;\n}\n\n/**\n * An Array-like collection of TreeNodes.\n *\n * Note: Due to issue in many javascript environments,\n * native objects are problematic to extend correctly\n * so we mimic it, not actually extend it.\n *\n * @param {array} array Array of TreeNode objects.\n * @return {TreeNodes} Collection of TreeNode\n */\n\nvar TreeNodes = function (_extendableBuiltin2) {\n    inherits(TreeNodes, _extendableBuiltin2);\n\n    function TreeNodes(tree, array) {\n        classCallCheck(this, TreeNodes);\n\n        var _this = possibleConstructorReturn(this, (TreeNodes.__proto__ || Object.getPrototypeOf(TreeNodes)).call(this));\n\n        if (_.isFunction(_.get(tree, 'isTree')) && !tree.isTree(tree)) {\n            throw new TypeError('Invalid tree instance.');\n        }\n\n        _this._tree = tree;\n        _this.length = 0;\n\n        // Init pagination\n        _this._pagination = {\n            limit: tree.config.pagination.limit,\n            total: 0\n        };\n\n        if (_.isArray(array) || array instanceof TreeNodes) {\n            _.each(array, function (node) {\n                if (node instanceof TreeNode) {\n                    _this.push(node.clone());\n                } else {\n                    _this.addNode(node);\n                }\n            });\n        }\n        return _this;\n    }\n\n    /**\n     * Adds a new node. If a sort method is configured,\n     * the node will be added in the appropriate order.\n     *\n     * @param {object} object Node\n     * @return {TreeNode} Node object.\n     */\n\n\n    createClass(TreeNodes, [{\n        key: 'addNode',\n        value: function addNode(object) {\n            // Base insertion index\n            var index = this.length;\n\n            // If tree is sorted, insert in correct position\n            if (this._tree.config.sort) {\n                index = _.sortedIndexBy(this, object, this._tree.config.sort);\n            }\n\n            return this.insertAt(index, object);\n        }\n\n        /**\n         * Query for all available nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'available',\n        value: function available(full) {\n            return baseStatePredicate.call(this, 'available', full);\n        }\n\n        /**\n         * Blur nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'blur',\n        value: function blur() {\n            return this.invoke('blur');\n        }\n\n        /**\n         * Blur (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'blurDeep',\n        value: function blurDeep() {\n            return this.invokeDeep('blur');\n        }\n\n        /**\n         * Query for all checked nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'checked',\n        value: function checked(full) {\n            return baseStatePredicate.call(this, 'checked', full);\n        }\n\n        /**\n         * Clean nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'clean',\n        value: function clean() {\n            return this.invoke('clean');\n        }\n\n        /**\n         * Clones (deeply) the array of nodes.\n         *\n         * Note: Cloning will *not* clone the context pointer.\n         *\n         * @return {TreeNodes} Array of cloned nodes.\n         */\n\n    }, {\n        key: 'clone',\n        value: function clone() {\n            return new TreeNodes(this._tree, this);\n        }\n\n        /**\n         * Collapse nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'collapse',\n        value: function collapse() {\n            return this.invoke('collapse');\n        }\n\n        /**\n         * Query for all collapsed nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'collapsed',\n        value: function collapsed(full) {\n            return baseStatePredicate.call(this, 'collapsed', full);\n        }\n\n        /**\n         * Collapse (deeply) all children.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'collapseDeep',\n        value: function collapseDeep() {\n            return this.invokeDeep('collapse');\n        }\n\n        /**\n         * Concat multiple TreeNodes arrays.\n         *\n         * @param {TreeNodes} nodes Array of nodes.\n         * @return {TreeNodes} Resulting node array.\n         */\n\n    }, {\n        key: 'concat',\n        value: function concat(nodes) {\n            var newNodes = new TreeNodes(this._tree);\n            newNodes._context = this._context;\n\n            var pusher = function pusher(node) {\n                if (node instanceof TreeNode) {\n                    newNodes.push(node);\n                }\n            };\n\n            _.each(this, pusher);\n            _.each(nodes, pusher);\n\n            // Copy pagination limit\n            newNodes._pagination.limit = this._pagination.limit;\n\n            return newNodes;\n        }\n\n        /**\n         * Get the context of this collection. If a collection\n         * of children, context is the parent node. Otherwise\n         * the context is the tree itself.\n         *\n         * @return {TreeNode|object} Node object or tree instance.\n         */\n\n    }, {\n        key: 'context',\n        value: function context() {\n            return this._context || this._tree;\n        }\n\n        /**\n         * Copy nodes to another tree instance.\n         *\n         * @param {object} dest Destination Inspire Tree.\n         * @param {boolean} hierarchy Include necessary ancestors to match hierarchy.\n         * @return {object} Methods to perform action on copied nodes.\n         */\n\n    }, {\n        key: 'copy',\n        value: function copy(dest, hierarchy) {\n            var newNodes = new TreeNodes(this._tree);\n\n            _.each(this, function (node) {\n                newNodes.push(node.copy(dest, hierarchy));\n            });\n\n            return newNodes;\n        }\n\n        /**\n         * Return deepest nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'deepest',\n        value: function deepest() {\n            var matches = new TreeNodes(this._tree);\n\n            this.recurseDown(function (node) {\n                if (!node.children) {\n                    matches.push(node);\n                }\n            });\n\n            return matches;\n        }\n\n        /**\n         * Deselect nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'deselect',\n        value: function deselect() {\n            return this.invoke('deselect');\n        }\n\n        /**\n         * Deselect (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'deselectDeep',\n        value: function deselectDeep() {\n            return this.invokeDeep('deselect');\n        }\n\n        /**\n         * Iterate each TreeNode.\n         *\n         * @param {function} iteratee Iteratee invoke for each node.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'each',\n        value: function each(iteratee) {\n            _.each(this, iteratee);\n\n            return this;\n        }\n\n        /**\n         * Query for all editable nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'editable',\n        value: function editable(full) {\n            return baseStatePredicate.call(this, 'editable', full);\n        }\n\n        /**\n         * Query for all nodes in editing mode.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'editing',\n        value: function editing(full) {\n            return baseStatePredicate.call(this, 'editing', full);\n        }\n\n        /**\n         * Expand nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'expand',\n        value: function expand() {\n            return this.invoke('expand');\n        }\n\n        /**\n         * Query for all expanded nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'expanded',\n        value: function expanded(full) {\n            return baseStatePredicate.call(this, 'expanded', full);\n        }\n\n        /**\n         * Expand (deeply) all nodes.\n         *\n         * @return {Promise<TreeNodes>} Promise resolved when all children have loaded and expanded.\n         */\n\n    }, {\n        key: 'expandDeep',\n        value: function expandDeep() {\n            var _this2 = this;\n\n            return new es6Promise_1(function (resolve) {\n                var waitCount = 0;\n\n                var done = function done() {\n                    if (--waitCount === 0) {\n                        resolve(_this2);\n                    }\n                };\n\n                _this2.recurseDown(function (node) {\n                    waitCount++;\n\n                    // Ignore nodes without children\n                    if (node.children) {\n                        node.expand().catch(done).then(function () {\n                            // Manually trigger expansion on newly loaded children\n                            node.children.expandDeep().catch(done).then(done);\n                        });\n                    } else {\n                        done();\n                    }\n                });\n            });\n        }\n\n        /**\n         * Expand parents.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'expandParents',\n        value: function expandParents() {\n            return this.invoke('expandParents');\n        }\n\n        /**\n         * Clone a hierarchy of all nodes matching a predicate.\n         *\n         * Because it filters deeply, we must clone all nodes so that we\n         * don't affect the actual node array.\n         *\n         * @param {string|function} predicate State flag or custom function.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'extract',\n        value: function extract(predicate) {\n            var flat = this.flatten(predicate);\n            var matches = new TreeNodes(this._tree);\n\n            _.each(flat, function (node) {\n                return matches.addNode(node.copyHierarchy());\n            });\n\n            return matches;\n        }\n\n        /**\n         * Filter all nodes matching the given predicate.\n         *\n         * @param {string|function} predicate State flag or custom function.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'filterBy',\n        value: function filterBy(predicate) {\n            var fn = getPredicateFunction(predicate);\n            var matches = new TreeNodes(this._tree);\n\n            _.each(this, function (node) {\n                if (fn(node)) {\n                    matches.push(node);\n                }\n            });\n\n            return matches;\n        }\n\n        /**\n         * Returns the first node matching predicate.\n         *\n         * @param {function} predicate Predicate functions, accepts a single node and returns a boolean.\n         * @return {TreeNode} First matching TreeNode, or undefined.\n         */\n\n    }, {\n        key: 'find',\n        value: function find(predicate) {\n            var match = void 0;\n\n            this.recurseDown(function (node) {\n                if (predicate(node)) {\n                    match = node;\n\n                    return false;\n                }\n            });\n\n            return match;\n        }\n\n        /**\n         * Flatten and get only node(s) matching the expected state or predicate function.\n         *\n         * @param {string|function} predicate State property or custom function.\n         * @return {TreeNodes} Flat array of matching nodes.\n         */\n\n    }, {\n        key: 'flatten',\n        value: function flatten(predicate) {\n            var flat = new TreeNodes(this._tree);\n\n            var fn = getPredicateFunction(predicate);\n            this.recurseDown(function (node) {\n                if (fn(node)) {\n                    flat.push(node);\n                }\n            });\n\n            return flat;\n        }\n\n        /**\n         * Query for all focused nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'focused',\n        value: function focused(full) {\n            return baseStatePredicate.call(this, 'focused', full);\n        }\n\n        /**\n         * Iterate each TreeNode.\n         *\n         * @param {function} iteratee Iteratee invoke for each node.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'forEach',\n        value: function forEach(iteratee) {\n            return this.each(iteratee);\n        }\n\n        /**\n         * Get a specific node by its index, or undefined if it doesn't exist.\n         *\n         * @param {int} index Numeric index of requested node.\n         * @return {TreeNode} Node object. Undefined if invalid index.\n         */\n\n    }, {\n        key: 'get',\n        value: function get$$1(index) {\n            return this[index];\n        }\n\n        /**\n         * Query for all hidden nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'hidden',\n        value: function hidden(full) {\n            return baseStatePredicate.call(this, 'hidden', full);\n        }\n\n        /**\n         * Hide nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            return this.invoke('hide');\n        }\n\n        /**\n         * Hide (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'hideDeep',\n        value: function hideDeep() {\n            return this.invokeDeep('hide');\n        }\n\n        /**\n         * Query for all indeterminate nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'indeterminate',\n        value: function indeterminate(full) {\n            return baseStatePredicate.call(this, 'indeterminate', full);\n        }\n\n        /**\n         * Insert a new node at a given position.\n         *\n         * @param {integer} index Index at which to insert the node.\n         * @param {object} object Raw node object or TreeNode.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'insertAt',\n        value: function insertAt(index, object) {\n            // If node has a pre-existing ID\n            if (object.id) {\n                // Is it already in the tree?\n                var existingNode = this.node(object.id);\n                if (existingNode) {\n                    existingNode.restore().show();\n\n                    // Merge children\n                    if (_.isArrayLike(object.children)) {\n                        // Setup existing node's children property if needed\n                        if (!_.isArrayLike(existingNode.children)) {\n                            existingNode.children = new TreeNodes(this._tree);\n                            existingNode.children._context = existingNode;\n                        }\n\n                        // Copy each child (using addNode, which uses insertAt)\n                        _.each(object.children, function (child) {\n                            existingNode.children.addNode(child);\n                        });\n                    }\n\n                    // Merge truthy children\n                    else if (object.children && _.isBoolean(existingNode.children)) {\n                            existingNode.children = object.children;\n                        }\n\n                    existingNode.markDirty();\n                    this._tree.applyChanges();\n\n                    // Node merged, return it.\n                    return existingNode;\n                }\n            }\n\n            // Node is new, insert at given location.\n            var node = this._tree.constructor.isTreeNode(object) ? object : objectToNode(this._tree, object);\n\n            // Grab remaining nodes\n            this.splice(index, 0, node);\n\n            // Refresh parent state and mark dirty\n            if (this._context) {\n                node.itree.parent = this._context;\n                this._context.refreshIndeterminateState().markDirty();\n            }\n\n            // Event\n            this._tree.emit('node.added', node);\n\n            // Always mark this node as dirty\n            node.markDirty();\n\n            // If pushing this node anywhere but the end, other nodes may change.\n            if (this.length - 1 !== index) {\n                this.invoke('markDirty');\n            }\n\n            this._tree.applyChanges();\n\n            return node;\n        }\n\n        /**\n         * Invoke method(s) on each node.\n         *\n         * @param {string|array} methods Method name(s).\n         * @param {array|Arguments} args Array of arguments to proxy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'invoke',\n        value: function invoke(methods, args) {\n            return baseInvoke(this, methods, args);\n        }\n\n        /**\n         * Invoke method(s) deeply.\n         *\n         * @param {string|array} methods Method name(s).\n         * @param {array|Arguments} args Array of arguments to proxy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'invokeDeep',\n        value: function invokeDeep(methods, args) {\n            if (!_.isArrayLikeObject(args) || arguments.length > 2) {\n                args = _.tail(arguments);\n            }\n\n            return baseInvoke(this, methods, args, true);\n        }\n\n        /**\n         * Query for all nodes currently loading children.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'loading',\n        value: function loading(full) {\n            return baseStatePredicate.call(this, 'loading', full);\n        }\n\n        /**\n         * Loads additional nodes for this context.\n         *\n         * @param {Event} event Click or scroll event if DOM interaction triggered this call.\n         * @return {Promise<TreeNodes>} Resolves with request results.\n         */\n\n    }, {\n        key: 'loadMore',\n        value: function loadMore(event) {\n            var _this3 = this;\n\n            // Never refire if node is loading\n            if (this._loading) {\n                return es6Promise_1.reject(new Error('Pending loadMore call must complete before being invoked again.'));\n            }\n\n            var promise = void 0;\n\n            // If no records remain, immediately resolve\n            if (this._pagination.limit === this._pagination.total) {\n                return es6Promise_1.resolve();\n            }\n\n            // Set loading flag, prevents repeat requests\n            this._loading = true;\n            this._tree.batch();\n\n            // Mark this context as dirty since we'll update text/tree nodes\n            _.invoke(this._context, 'markDirty');\n\n            // Increment the pagination\n            this._pagination.limit += this._tree.config.pagination.limit;\n\n            // Emit an event\n            this._tree.emit('node.paginated', this._context || this._tree, this.pagination, event);\n\n            if (this._tree.config.deferredLoading) {\n                if (this._context) {\n                    promise = this._context.loadChildren();\n                } else {\n                    promise = this._tree.load(this._tree.config.data);\n                }\n            } else {\n                this._loading = false;\n\n                promise = es6Promise_1.resolve();\n            }\n\n            this._tree.end();\n\n            // Clear the loading flag\n            if (this._tree.config.deferredLoading) {\n                promise.then(function () {\n                    _this3._loading = false;\n                    _this3._tree.applyChanges();\n                }).catch(function () {\n                    _this3._loading = false;\n                    _this3._tree.applyChanges();\n                });\n            }\n\n            return promise;\n        }\n\n        /**\n         * Query for all nodes matched in the last search.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'matched',\n        value: function matched(full) {\n            return baseStatePredicate.call(this, 'matched', full);\n        }\n\n        /**\n         * Move node at a given index to a new index.\n         *\n         * @param {int} index Current index.\n         * @param {int} newIndex New index.\n         * @param {TreeNodes} target Target TreeNodes array. Defaults to this.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'move',\n        value: function move(index, newIndex) {\n            var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;\n\n            this._tree.batch();\n\n            var oldNode = this[index].remove();\n            var node = target.insertAt(newIndex, oldNode);\n\n            this._tree.emit('node.moved', node, this, index, target, newIndex);\n\n            this._tree.end();\n\n            return node;\n        }\n\n        /**\n         * Get a node.\n         *\n         * @param {string|number} id ID of node.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'node',\n        value: function node(id) {\n            var match = void 0;\n\n            this.recurseDown(function (node) {\n                if (node.id === id) {\n                    match = node;\n\n                    return false;\n                }\n            });\n\n            return match;\n        }\n\n        /**\n         * Get all nodes in a tree, or nodes for an array of IDs.\n         *\n         * @param {array} refs Array of ID references.\n         * @return {TreeNodes} Array of node objects.\n         * @example\n         *\n         * let all = tree.nodes()\n         * let some = tree.nodes([1, 2, 3])\n         */\n\n    }, {\n        key: 'nodes',\n        value: function nodes(refs) {\n            var results = void 0;\n\n            if (_.isArray(refs)) {\n                results = new TreeNodes(this._tree);\n\n                this.recurseDown(function (node) {\n                    if (refs.indexOf(node.id) > -1) {\n                        results.push(node);\n                    }\n                });\n            }\n\n            return _.isArray(refs) ? results : this;\n        }\n\n        /**\n         * Get the pagination.\n         *\n         * @return {object} Pagination configuration object.\n         */\n\n    }, {\n        key: 'pagination',\n        value: function pagination() {\n            return this._pagination;\n        }\n\n        /**\n         * Iterate down all nodes and any children.\n         *\n         * Return false to stop execution.\n         *\n         * @param {function} iteratee Iteratee function.\n         * @return {TreeNodes} Resulting nodes.\n         */\n\n    }, {\n        key: 'recurseDown',\n        value: function recurseDown$$1(iteratee) {\n            recurseDown(this, iteratee);\n\n            return this;\n        }\n\n        /**\n         * Remove a node.\n         *\n         * @param {TreeNode} node Node object.\n         * @return {TreeNodes} Resulting nodes.\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove(node) {\n            _.remove(this, { id: node.id });\n\n            _.invoke(this._context, 'markDirty');\n\n            this._tree.applyChanges();\n\n            return this;\n        }\n\n        /**\n         * Query for all soft-removed nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'removed',\n        value: function removed(full) {\n            return baseStatePredicate.call(this, 'removed', full);\n        }\n\n        /**\n         * Restore nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'restore',\n        value: function restore() {\n            return this.invoke('restore');\n        }\n\n        /**\n         * Restore (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'restoreDeep',\n        value: function restoreDeep() {\n            return this.invokeDeep('restore');\n        }\n\n        /**\n         * Select nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'select',\n        value: function select() {\n            return this.invoke('select');\n        }\n\n        /**\n         * Query for all selectable nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'selectable',\n        value: function selectable(full) {\n            return baseStatePredicate.call(this, 'selectable', full);\n        }\n\n        /**\n         * Select (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'selectDeep',\n        value: function selectDeep() {\n            return this.invokeDeep('select');\n        }\n\n        /**\n         * Query for all selected nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'selected',\n        value: function selected(full) {\n            return baseStatePredicate.call(this, 'selected', full);\n        }\n\n        /**\n         * Show nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'show',\n        value: function show() {\n            return this.invoke('show');\n        }\n\n        /**\n         * Show (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'showDeep',\n        value: function showDeep() {\n            return this.invokeDeep('show');\n        }\n\n        /**\n         * Soft-remove nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'softRemove',\n        value: function softRemove() {\n            return this.invoke('softRemove');\n        }\n\n        /**\n         * Sorts all TreeNode objects in this collection.\n         *\n         * If no custom sorter given, the configured \"sort\" value will be used.\n         *\n         * @param {string|function} sorter Sort function or property name.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'sortBy',\n        value: function sortBy(sorter) {\n            var _this4 = this;\n\n            sorter = sorter || this._tree.config.sort;\n\n            // Only apply sort if one provided\n            if (sorter) {\n                var sorted = _.sortBy(this, sorter);\n\n                this.length = 0;\n                _.each(sorted, function (node) {\n                    _this4.push(node);\n                });\n            }\n\n            return this;\n        }\n\n        /**\n         * Sorts (deeply) all nodes in this collection.\n         *\n         * @param {function} comparator [description]\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'sortDeep',\n        value: function sortDeep(comparator) {\n            this.sort(comparator);\n\n            this.each(function (node) {\n                if (node.hasChildren()) {\n                    node.children.sortDeep(comparator);\n                }\n            });\n\n            return this;\n        }\n\n        /**\n         * Set nodes' state values.\n         *\n         * @param {string} name Property name.\n         * @param {boolean} newVal New value, if setting.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'state',\n        value: function state() {\n            return this.invoke('state', arguments);\n        }\n\n        /**\n         * Set (deeply) nodes' state values.\n         *\n         * @param {string} name Property name.\n         * @param {boolean} newVal New value, if setting.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'stateDeep',\n        value: function stateDeep() {\n            return this.invokeDeep('state', arguments);\n        }\n\n        /**\n         * Swaps two node positions.\n         *\n         * @param {TreeNode} node1 Node 1.\n         * @param {TreeNode} node2 Node 2.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'swap',\n        value: function swap(node1, node2) {\n            this._tree.batch();\n\n            var n1Context = node1.context();\n            var n2Context = node2.context();\n\n            // Cache. Note: n2Index is only usable once\n            var n1Index = n1Context.indexOf(node1);\n            var n2Index = n2Context.indexOf(node2);\n\n            // If contexts match, we can simply re-assign them\n            if (n1Context === n2Context) {\n                this[n1Index] = node2;\n                this[n2Index] = node1;\n\n                // Emit move events for each node\n                this._tree.emit('node.moved', node1, n1Context, n1Index, n2Context, n2Index);\n                this._tree.emit('node.moved', node2, n2Context, n2Index, n1Context, n1Index);\n            } else {\n                // Otherwise, we have to move between contexts\n                // Move node 1 to node 2's index\n                n1Context.move(n1Index, n2Context.indexOf(node2), n2Context);\n\n                // Move node 2 to node 1s original index\n                n2Context.move(n2Context.indexOf(node2), n1Index, n1Context);\n            }\n\n            this._tree.end();\n\n            this._tree.emit('node.swapped', node1, n1Context, n1Index, node2, n2Context, n2Index);\n\n            return this;\n        }\n\n        /**\n         * Get the tree instance.\n         *\n         * @return {InspireTree} Tree instance.\n         */\n\n    }, {\n        key: 'tree',\n        value: function tree() {\n            return this._tree;\n        }\n\n        /**\n         * Get a native node Array.\n         *\n         * @return {array} Array of node objects.\n         */\n\n    }, {\n        key: 'toArray',\n        value: function toArray$$1() {\n            var array = [];\n\n            _.each(this, function (node) {\n                array.push(node.toObject());\n            });\n\n            return array;\n        }\n\n        /**\n         * Query for all visible nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'visible',\n        value: function visible(full) {\n            return baseStatePredicate.call(this, 'visible', full);\n        }\n    }]);\n    return TreeNodes;\n}(_extendableBuiltin(Array));\n\n/**\n * Base recursion function for a collection or node.\n *\n * Returns false if execution should cease.\n *\n * @private\n * @param {TreeNode|TreeNodes} obj Node or collection.\n * @param {function} iteratee Iteratee function\n * @return {boolean} Cease iteration.\n */\nfunction recurseDown(obj, iteratee) {\n    var res = void 0;\n\n    if (obj instanceof TreeNodes) {\n        _.each(obj, function (node) {\n            res = recurseDown(node, iteratee);\n\n            return res;\n        });\n    } else if (obj instanceof TreeNode) {\n        res = iteratee(obj);\n\n        // Recurse children\n        if (res !== false && obj.hasChildren()) {\n            res = recurseDown(obj.children, iteratee);\n        }\n    }\n\n    return res;\n}\n\n/**\n * Resolve promise-like objects consistently.\n *\n * @private\n * @param {object} promise Promise-like object.\n * @returns {Promise} Promise\n */\nfunction standardizePromise(promise) {\n    return new es6Promise_1(function (resolve, reject) {\n        if (!_.isObject(promise)) {\n            return reject(new Error('Invalid Promise'));\n        }\n\n        if (_.isFunction(promise.then)) {\n            promise.then(resolve);\n        }\n\n        // jQuery promises use \"error\"\n        if (_.isFunction(promise.error)) {\n            promise.error(reject);\n        } else if (_.isFunction(promise.catch)) {\n            promise.catch(reject);\n        }\n    });\n}\n\n// Libs\n\n/**\n * Helper method to clone an ITree config object.\n *\n * Rejects non-clonable properties like ref.\n *\n * @private\n * @param {object} itree ITree configuration object\n * @param {array} excludeKeys Keys to exclude, if any\n * @return {object} Cloned ITree.\n */\nfunction cloneItree(itree, excludeKeys) {\n    var clone = {};\n    excludeKeys = _.castArray(excludeKeys);\n    excludeKeys.push('ref');\n\n    _.each(itree, function (v, k) {\n        if (!_.includes(excludeKeys, k)) {\n            clone[k] = _.cloneDeep(v);\n        }\n    });\n\n    return clone;\n}\n\n/**\n * Get or set a state value.\n *\n * This is a base method and will not invoke related changes, for example\n * setting selected=false will not trigger any deselection logic.\n *\n * @private\n * @param {TreeNode} node Tree node.\n * @param {string} property Property name.\n * @param {boolean} val New value, if setting.\n * @return {boolean} Current value on read, old value on set.\n */\nfunction baseState(node, property, val) {\n    var currentVal = node.itree.state[property];\n\n    if (typeof val !== 'undefined' && currentVal !== val) {\n        // Update values\n        node.itree.state[property] = val;\n\n        if (property !== 'rendered') {\n            node.markDirty();\n        }\n\n        // Emit an event\n        node._tree.emit('node.state.changed', node, property, currentVal, val);\n    }\n\n    return currentVal;\n}\n\n/**\n * Represents a singe node object within the tree.\n *\n * @param {TreeNode} source TreeNode to copy.\n * @return {TreeNode} Tree node object.\n */\n\nvar TreeNode = function () {\n    function TreeNode(tree, source, excludeKeys) {\n        var _this = this;\n\n        classCallCheck(this, TreeNode);\n\n        this._tree = tree;\n\n        if (source instanceof TreeNode) {\n            excludeKeys = _.castArray(excludeKeys);\n            excludeKeys.push('_tree');\n\n            // Iterate manually for better perf\n            _.each(source, function (value, key) {\n                // Skip properties\n                if (!_.includes(excludeKeys, key)) {\n                    if (_.isObject(value)) {\n                        if (value instanceof TreeNodes) {\n                            _this[key] = value.clone();\n                        } else if (key === 'itree') {\n                            _this[key] = cloneItree(value);\n                        } else {\n                            _this[key] = _.cloneDeep(value);\n                        }\n                    } else {\n                        // Copy primitives\n                        _this[key] = value;\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Add a child to this node.\n     *\n     * @param {object} child Node object.\n     * @return {TreeNode} Node object.\n     */\n\n\n    createClass(TreeNode, [{\n        key: 'addChild',\n        value: function addChild(child) {\n            if (_.isArray(this.children) || !_.isArrayLike(this.children)) {\n                this.children = new TreeNodes(this._tree);\n                this.children._context = this;\n            }\n\n            return this.children.addNode(child);\n        }\n\n        /**\n         * Add multiple children to this node.\n         *\n         * @param {object} children Array of nodes.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'addChildren',\n        value: function addChildren(children) {\n            var _this2 = this;\n\n            var nodes = new TreeNodes(this._tree);\n\n            this._tree.batch();\n            _.each(children, function (child) {\n                nodes.push(_this2.addChild(child));\n            });\n            this._tree.end();\n\n            return nodes;\n        }\n\n        /**\n         * Ensure this node allows dynamic children.\n         *\n         * @private\n         * @return {boolean} True if tree/node allows dynamic children.\n         */\n\n    }, {\n        key: 'allowDynamicLoad',\n        value: function allowDynamicLoad() {\n            return this._tree.isDynamic && (_.isArrayLike(this.children) || this.children === true);\n        }\n\n        /**\n         * Assign source object(s) to this node.\n         *\n         * @param {object} source Source object(s)\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'assign',\n        value: function assign() {\n            _.assign.apply(_, [this].concat(Array.prototype.slice.call(arguments)));\n\n            this.markDirty();\n            this._tree.applyChanges();\n\n            return this;\n        }\n\n        /**\n         * Check if node available.\n         *\n         * @return {boolean} True if available.\n         */\n\n    }, {\n        key: 'available',\n        value: function available() {\n            return !this.hidden() && !this.removed();\n        }\n\n        /**\n         * Blur focus from this node.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'blur',\n        value: function blur() {\n            this.state('editing', false);\n\n            return baseStateChange('focused', false, 'blurred', this);\n        }\n    }, {\n        key: 'check',\n\n\n        /**\n         * Mark node as checked.\n         *\n         * @param {boolean} shallow Skip auto-checking children.\n         * @return {TreeNode} Node object.\n         */\n        value: function check(shallow) {\n            this._tree.batch();\n\n            // Will we automatically apply state changes to our children\n            var deep = !shallow && this._tree.config.checkbox.autoCheckChildren;\n\n            baseStateChange('checked', true, 'checked', this, deep);\n\n            // Refresh parent\n            if (this.hasParent()) {\n                this.getParent().refreshIndeterminateState();\n            }\n\n            this._tree.end();\n\n            return this;\n        }\n    }, {\n        key: 'checked',\n\n\n        /**\n         * Get whether this node is checked.\n         *\n         * @return {boolean} True if node checked.\n         */\n        value: function checked() {\n            return this.state('checked');\n        }\n\n        /**\n         * Hide parents without any visible children.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'clean',\n        value: function clean() {\n            this.recurseUp(function (node) {\n                if (node.hasParent()) {\n                    var parent = node.getParent();\n                    if (!parent.hasVisibleChildren()) {\n                        parent.hide();\n                    }\n                }\n            });\n\n            return this;\n        }\n\n        /**\n         * Clone this node.\n         *\n         * @param {array} excludeKeys Keys to exclude from the clone.\n         * @return {TreeNode} New node object.\n         */\n\n    }, {\n        key: 'clone',\n        value: function clone(excludeKeys) {\n            return new TreeNode(this._tree, this, excludeKeys);\n        }\n\n        /**\n         * Collapse this node.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'collapse',\n        value: function collapse() {\n            return baseStateChange('collapsed', true, 'collapsed', this);\n        }\n\n        /**\n         * Get whether this node is collapsed.\n         *\n         * @return {boolean} True if node collapsed.\n         */\n\n    }, {\n        key: 'collapsed',\n        value: function collapsed() {\n            return this.state('collapsed');\n        }\n\n        /**\n         * Get the containing context. If no parent present, the root context is returned.\n         *\n         * @return {TreeNodes} Node array object.\n         */\n\n    }, {\n        key: 'context',\n        value: function context() {\n            return this.hasParent() ? this.getParent().children : this._tree.model;\n        }\n\n        /**\n         * Copy node to another tree instance.\n         *\n         * @param {object} dest Destination Inspire Tree.\n         * @param {boolean} hierarchy Include necessary ancestors to match hierarchy.\n         * @return {object} Property \"to\" for defining destination.\n         */\n\n    }, {\n        key: 'copy',\n        value: function copy(dest, hierarchy) {\n            if (!dest || !_.isFunction(dest.addNode)) {\n                throw new Error('Destination must be an Inspire Tree instance.');\n            }\n\n            var node = this;\n            if (hierarchy) {\n                node = node.copyHierarchy();\n            }\n\n            return dest.addNode(node.toObject());\n        }\n\n        /**\n         * Copy all parents of a node.\n         *\n         * @param {boolean} excludeNode Exclude given node from hierarchy.\n         * @return {TreeNode} Root node object with hierarchy.\n         */\n\n    }, {\n        key: 'copyHierarchy',\n        value: function copyHierarchy(excludeNode) {\n            var nodes = [];\n            var parents = this.getParents();\n\n            // Remove old hierarchy data\n            _.each(parents, function (node) {\n                nodes.push(node.toObject(excludeNode));\n            });\n\n            parents = nodes.reverse();\n\n            if (!excludeNode) {\n                var clone = this.toObject(true);\n\n                // Filter out hidden children\n                if (this.hasChildren()) {\n                    clone.children = this.children.filterBy(function (n) {\n                        return !n.state('hidden');\n                    }).toArray();\n\n                    clone.children._context = clone;\n                }\n\n                nodes.push(clone);\n            }\n\n            var hierarchy = nodes[0];\n            var pointer = hierarchy;\n            var l = nodes.length;\n            _.each(nodes, function (parent, key) {\n                var children = [];\n\n                if (key + 1 < l) {\n                    children.push(nodes[key + 1]);\n                    pointer.children = children;\n\n                    pointer = pointer.children[0];\n                }\n            });\n\n            return objectToNode(this._tree, hierarchy);\n        }\n    }, {\n        key: 'deselect',\n\n\n        /**\n         * Deselect this node.\n         *\n         * If selection.require is true and this is the last selected\n         * node, the node will remain in a selected state.\n         *\n         * @param {boolean} shallow Skip auto-deselecting children.\n         * @return {TreeNode} Node object.\n         */\n        value: function deselect(shallow) {\n            if (this.selected() && (!this._tree.config.selection.require || this._tree.selected().length > 1)) {\n                this._tree.batch();\n\n                // Will we apply this state change to our children?\n                var deep = !shallow && this._tree.config.selection.autoSelectChildren;\n\n                baseStateChange('selected', false, 'deselected', this, deep);\n\n                this._tree.end();\n            }\n\n            return this;\n        }\n\n        /**\n         * Get weather node editable. Required editing.edit to be enable via config.\n         *\n         * @return {boolean} True if node editable.\n         */\n\n    }, {\n        key: 'editable',\n        value: function editable() {\n            return this._tree.config.editable && this._tree.config.editing.edit && this.state('editable');\n        }\n\n        /**\n         * Get weather node is currently in edit mode.\n         *\n         * @return {boolean} True if node in edit mode.\n         */\n\n    }, {\n        key: 'editing',\n        value: function editing() {\n            return this.state('editing');\n        }\n\n        /**\n         * Expand this node.\n         *\n         * @return {Promise<TreeNode>} Promise resolved on successful load and expand of children.\n         */\n\n    }, {\n        key: 'expand',\n        value: function expand() {\n            var node = this;\n\n            return new es6Promise_1(function (resolve, reject) {\n                var allow = node.hasChildren() || node._tree.isDynamic && node.children === true;\n\n                if (allow && (node.collapsed() || node.hidden())) {\n                    node.state('collapsed', false);\n                    node.state('hidden', false);\n\n                    node._tree.emit('node.expanded', node);\n\n                    if (node._tree.isDynamic && node.children === true) {\n                        node.loadChildren().then(resolve).catch(reject);\n                    } else {\n                        node._tree.applyChanges();\n                        resolve(node);\n                    }\n                } else {\n                    // Resolve immediately\n                    resolve(node);\n                }\n            });\n        }\n\n        /**\n         * Get weather node expanded.\n         *\n         * @return {boolean} True if expanded.\n         */\n\n    }, {\n        key: 'expanded',\n        value: function expanded() {\n            return !this.collapsed();\n        }\n\n        /**\n         * Expand parent nodes.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'expandParents',\n        value: function expandParents() {\n            if (this.hasParent()) {\n                this.getParent().recurseUp(function (node) {\n                    node.expand();\n                });\n            }\n\n            return this;\n        }\n\n        /**\n         * Focus a node without changing its selection.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'focus',\n        value: function focus() {\n            if (!this.focused()) {\n                // Batch selection changes\n                this._tree.batch();\n                this._tree.blurDeep();\n                this.state('focused', true);\n\n                // Emit this event\n                this._tree.emit('node.focused', this);\n\n                // Mark hierarchy dirty and apply\n                this.markDirty();\n                this._tree.end();\n            }\n\n            return this;\n        }\n\n        /**\n         * Get weather this node is focused.\n         *\n         * @return {boolean} True if node focused.\n         */\n\n    }, {\n        key: 'focused',\n        value: function focused() {\n            return this.state('focused');\n        }\n\n        /**\n         * Get children for this node. If no children exist, an empty TreeNodes\n         * collection is returned for safe chaining.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'getChildren',\n        value: function getChildren() {\n            return this.hasChildren() ? this.children : new TreeNodes(this._tree);\n        }\n\n        /**\n         * Get the immediate parent, if any.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'getParent',\n        value: function getParent() {\n            return this.itree.parent;\n        }\n\n        /**\n         * Get parent nodes. Excludes any siblings.\n         *\n         * @return {TreeNodes} Node objects.\n         */\n\n    }, {\n        key: 'getParents',\n        value: function getParents() {\n            var parents = new TreeNodes(this._tree);\n\n            if (this.hasParent()) {\n                this.getParent().recurseUp(function (node) {\n                    parents.push(node);\n                });\n            }\n\n            return parents;\n        }\n\n        /**\n         * Get a textual hierarchy for a given node. An array\n         * of text from this node's root ancestor to the given node.\n         *\n         * @return {array} Array of node texts.\n         */\n\n    }, {\n        key: 'getTextualHierarchy',\n        value: function getTextualHierarchy() {\n            var paths = [];\n\n            this.recurseUp(function (node) {\n                paths.unshift(node.text);\n            });\n\n            return paths;\n        }\n\n        /**\n         * Get weather the given node is an ancestor of this node.\n         *\n         * @param {TreeNode} node Node object.\n         * @return {boolean} True if node is an ancestor or the given node\n         */\n\n    }, {\n        key: 'hasAncestor',\n        value: function hasAncestor(node) {\n            var hasAncestor = false;\n            this.recurseUp(function (n) {\n                return !(hasAncestor = n.id === node.id);\n            });\n\n            return hasAncestor;\n        }\n\n        /**\n         * Get weather node has any children.\n         *\n         * @return {boolean} True if has loaded children.\n         */\n\n    }, {\n        key: 'hasChildren',\n        value: function hasChildren() {\n            return _.isArrayLike(this.children) && this.children.length > 0;\n        }\n\n        /**\n         * Get weather children have been loaded. Will always be true for non-dynamic nodes.\n         *\n         * @return {boolean} True if we've attempted to load children.\n         */\n\n    }, {\n        key: 'hasLoadedChildren',\n        value: function hasLoadedChildren() {\n            return _.isArrayLike(this.children);\n        }\n\n        /**\n         * Get weather node has any children, or allows dynamic loading.\n         *\n         * @return {boolean} True if node has, or will have children.\n         */\n\n    }, {\n        key: 'hasOrWillHaveChildren',\n        value: function hasOrWillHaveChildren() {\n            return _.isArrayLike(this.children) ? Boolean(this.children.length) : this.allowDynamicLoad();\n        }\n\n        /**\n         * Get weather node has a parent.\n         *\n         * @return {boolean} True if has a parent.\n         */\n\n    }, {\n        key: 'hasParent',\n        value: function hasParent() {\n            return Boolean(this.itree.parent);\n        }\n\n        /**\n         * Get weather node has any visible children.\n         *\n         * @return {boolean} True if children are visible.\n         */\n\n    }, {\n        key: 'hasVisibleChildren',\n        value: function hasVisibleChildren() {\n            var hasVisibleChildren = false;\n\n            if (this.hasChildren()) {\n                hasVisibleChildren = this.children.filterBy('available').length > 0;\n            }\n\n            return hasVisibleChildren;\n        }\n\n        /**\n         * Hide this node.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            var node = baseStateChange('hidden', true, 'hidden', this);\n\n            // Update children\n            if (node.hasChildren()) {\n                node.children.hide();\n            }\n\n            return node;\n        }\n\n        /**\n         * Get weather this node is hidden.\n         *\n         * @return {boolean} True if node hidden.\n         */\n\n    }, {\n        key: 'hidden',\n        value: function hidden() {\n            return this.state('hidden');\n        }\n\n        /**\n         * Get a \"path\" of indices, values which map this node's location within all parent contexts.\n         *\n         * @return {string} Index path\n         */\n\n    }, {\n        key: 'indexPath',\n        value: function indexPath() {\n            var indices = [];\n\n            this.recurseUp(function (node) {\n                indices.push(_.indexOf(node.context(), node));\n            });\n\n            return indices.reverse().join('.');\n        }\n\n        /**\n         * Get weather this node is indeterminate.\n         *\n         * @return {boolean} True if node indeterminate.\n         */\n\n    }, {\n        key: 'indeterminate',\n        value: function indeterminate() {\n            return this.state('indeterminate');\n        }\n\n        /**\n         * Find the last + deepest visible child of the previous sibling.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'lastDeepestVisibleChild',\n        value: function lastDeepestVisibleChild() {\n            var found = void 0;\n\n            if (this.hasChildren() && !this.collapsed()) {\n                found = _.findLast(this.children, function (node) {\n                    return node.visible();\n                });\n\n                var res = found.lastDeepestVisibleChild();\n                if (res) {\n                    found = res;\n                }\n            }\n\n            return found;\n        }\n\n        /**\n         * Initiate a dynamic load of children for a given node.\n         *\n         * This requires `tree.config.data` to be a function which accepts\n         * three arguments: node, resolve, reject.\n         *\n         * Use the `node` to filter results.\n         *\n         * On load success, pass the result array to `resolve`.\n         * On error, pass the Error to `reject`.\n         *\n         * @return {Promise<TreeNodes>} Promise resolving children nodes.\n         */\n\n    }, {\n        key: 'loadChildren',\n        value: function loadChildren() {\n            var _this3 = this;\n\n            return new es6Promise_1(function (resolve, reject) {\n                if (!_this3.allowDynamicLoad()) {\n                    return reject(new Error('Node does not have or support dynamic children.'));\n                }\n\n                _this3.state('loading', true);\n                _this3.markDirty();\n                _this3._tree.applyChanges();\n\n                var complete = function complete(nodes, totalNodes) {\n                    // A little type-safety for silly situations\n                    if (!_.isArrayLike(nodes)) {\n                        return reject(new TypeError('Loader requires an array-like `nodes` parameter.'));\n                    }\n\n                    _this3._tree.batch();\n                    _this3.state('loading', false);\n\n                    var model = collectionToModel(_this3._tree, nodes, _this3);\n                    if (_.isArrayLike(_this3.children)) {\n                        _this3.children = _this3.children.concat(model);\n                    } else {\n                        _this3.children = model;\n                    }\n\n                    if (_.parseInt(totalNodes) > nodes.length) {\n                        _this3.children._pagination.total = _.parseInt(totalNodes);\n                    }\n\n                    // If using checkbox mode, share selection with newly loaded children\n                    if (_this3._tree.config.selection.mode === 'checkbox' && _this3.selected()) {\n                        _this3.children.select();\n                    }\n\n                    _this3.markDirty();\n                    _this3._tree.end();\n\n                    resolve(_this3.children);\n\n                    _this3._tree.emit('children.loaded', _this3);\n                };\n\n                var error = function error(err) {\n                    _this3.state('loading', false);\n                    _this3.children = new TreeNodes(_this3._tree);\n                    _this3.children._context = _this3;\n                    _this3.markDirty();\n                    _this3._tree.applyChanges();\n\n                    reject(err);\n\n                    _this3._tree.emit('tree.loaderror', err);\n                };\n\n                var pagination = _this3._tree.constructor.isTreeNodes(_this3.children) ? _this3.children.pagination() : null;\n                var loader = _this3._tree.config.data(_this3, complete, error, pagination);\n\n                // Data loader is likely a promise\n                if (_.isObject(loader)) {\n                    standardizePromise(loader).then(complete).catch(error);\n                }\n            });\n        }\n\n        /**\n         * Get weather this node is loading child data.\n         *\n         * @return {boolean} True if node's children are loading.\n         */\n\n    }, {\n        key: 'loading',\n        value: function loading() {\n            return this.state('loading');\n        }\n\n        /**\n         * Load additional children.\n         *\n         * @param {Event} event Click or scroll event if DOM interaction triggered this call.\n         * @return {Promise<TreeNodes>} Resolves with request results.\n         */\n\n    }, {\n        key: 'loadMore',\n        value: function loadMore() {\n            if (!this.children || this.children === true) {\n                return es6Promise_1.reject(new Error('Children have not yet been loaded.'));\n            }\n\n            return this.children.loadMore();\n        }\n\n        /**\n         * Mark node as dirty. For some systems this assists with rendering tracking.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'markDirty',\n        value: function markDirty() {\n            if (!this.itree.dirty) {\n                this.itree.dirty = true;\n\n                if (this.hasParent()) {\n                    this.getParent().markDirty();\n                }\n            }\n\n            return this;\n        }\n\n        /**\n         * Get whether this node was matched during the last search.\n         *\n         * @return {boolean} True if node matched.\n         */\n\n    }, {\n        key: 'matched',\n        value: function matched() {\n            return this.state('matched');\n        }\n\n        /**\n         * Find the next visible sibling of our ancestor. Continues\n         * seeking up the tree until a valid node is found or we\n         * reach the root node.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'nextVisibleAncestralSiblingNode',\n        value: function nextVisibleAncestralSiblingNode() {\n            var next = void 0;\n\n            if (this.hasParent()) {\n                var parent = this.getParent();\n                next = parent.nextVisibleSiblingNode();\n\n                if (!next) {\n                    next = parent.nextVisibleAncestralSiblingNode();\n                }\n            }\n\n            return next;\n        }\n\n        /**\n         * Find next visible child node.\n         *\n         * @return {TreeNode} Node object, if any.\n         */\n\n    }, {\n        key: 'nextVisibleChildNode',\n        value: function nextVisibleChildNode() {\n            var next = void 0;\n\n            if (this.hasChildren()) {\n                next = _.find(this.children, function (child) {\n                    return child.visible();\n                });\n            }\n\n            return next;\n        }\n\n        /**\n         * Get the next visible node.\n         *\n         * @return {TreeNode} Node object if any.\n         */\n\n    }, {\n        key: 'nextVisibleNode',\n        value: function nextVisibleNode() {\n            var next = void 0;\n\n            // 1. Any visible children\n            next = this.nextVisibleChildNode();\n\n            // 2. Any Siblings\n            if (!next) {\n                next = this.nextVisibleSiblingNode();\n            }\n\n            // 3. Find sibling of ancestor(s)\n            if (!next) {\n                next = this.nextVisibleAncestralSiblingNode();\n            }\n\n            return next;\n        }\n\n        /**\n         * Find the next visible sibling node.\n         *\n         * @return {TreeNode} Node object, if any.\n         */\n\n    }, {\n        key: 'nextVisibleSiblingNode',\n        value: function nextVisibleSiblingNode() {\n            var context = this.hasParent() ? this.getParent().children : this._tree.nodes();\n            var i = _.findIndex(context, { id: this.id });\n\n            return _.find(_.slice(context, i + 1), function (node) {\n                return node.visible();\n            });\n        }\n\n        /**\n         * Get pagination object for this tree node.\n         *\n         * @return {object} Pagination configuration object.\n         */\n\n    }, {\n        key: 'pagination',\n        value: function pagination() {\n            return _.get(this, 'children._pagination');\n        }\n\n        /**\n         * Find the previous visible node.\n         *\n         * @return {TreeNode} Node object, if any.\n         */\n\n    }, {\n        key: 'previousVisibleNode',\n        value: function previousVisibleNode() {\n            var prev = void 0;\n\n            // 1. Any Siblings\n            prev = this.previousVisibleSiblingNode();\n\n            // 2. If that sibling has children though, go there\n            if (prev && prev.hasChildren() && !prev.collapsed()) {\n                prev = prev.lastDeepestVisibleChild();\n            }\n\n            // 3. Parent\n            if (!prev && this.hasParent()) {\n                prev = this.getParent();\n            }\n\n            return prev;\n        }\n\n        /**\n         * Find the previous visible sibling node.\n         *\n         * @return {TreeNode} Node object, if any.\n         */\n\n    }, {\n        key: 'previousVisibleSiblingNode',\n        value: function previousVisibleSiblingNode() {\n            var context = this.hasParent() ? this.getParent().children : this._tree.nodes();\n            var i = _.findIndex(context, { id: this.id });\n            return _.findLast(_.slice(context, 0, i), function (node) {\n                return node.visible();\n            });\n        }\n\n        /**\n         * Iterate down node and any children.\n         *\n         * @param {function} iteratee Iteratee function.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'recurseDown',\n        value: function recurseDown$$1(iteratee) {\n            recurseDown(this, iteratee);\n\n            return this;\n        }\n\n        /**\n         * Iterate up a node and its parents.\n         *\n         * @param {function} iteratee Iteratee function.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'recurseUp',\n        value: function recurseUp(iteratee) {\n            var result = iteratee(this);\n\n            if (result !== false && this.hasParent()) {\n                this.getParent().recurseUp(iteratee);\n            }\n\n            return this;\n        }\n\n        /**\n         * Update the indeterminate state of this node by scanning states of children.\n         *\n         * True if some, but not all children are checked.\n         * False if no children are checked.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'refreshIndeterminateState',\n        value: function refreshIndeterminateState() {\n            var oldValue = this.indeterminate();\n            this.state('indeterminate', false);\n\n            if (this.hasChildren()) {\n                var childrenCount = this.children.length;\n                var indeterminate = 0;\n                var checked = 0;\n\n                this.children.each(function (n) {\n                    if (n.checked()) {\n                        checked++;\n                    }\n\n                    if (n.indeterminate()) {\n                        indeterminate++;\n                    }\n                });\n\n                // Set selected if all children are\n                if (checked === childrenCount) {\n                    baseStateChange('checked', true, 'checked', this);\n                } else {\n                    baseStateChange('checked', false, 'unchecked', this);\n                }\n\n                // Set indeterminate if any children are, or some children are selected\n                if (!this.checked()) {\n                    this.state('indeterminate', indeterminate > 0 || childrenCount > 0 && checked > 0 && checked < childrenCount);\n                }\n            }\n\n            if (this.hasParent()) {\n                this.getParent().refreshIndeterminateState();\n            }\n\n            if (oldValue !== this.state('indeterminate')) {\n                this.markDirty();\n            }\n\n            return this;\n        }\n\n        /**\n         * Remove all current children and re-execute a loadChildren call.\n         *\n         * @return {Promise<TreeNodes>} Promise resolved on load.\n         */\n\n    }, {\n        key: 'reload',\n        value: function reload() {\n            var _this4 = this;\n\n            return new es6Promise_1(function (resolve, reject) {\n                if (!_this4.allowDynamicLoad()) {\n                    return reject(new Error('Node or tree does not support dynamic children.'));\n                }\n\n                // Reset children\n                _this4.children = true;\n\n                // Collapse\n                _this4.collapse();\n\n                // Load and the proxy the promise\n                _this4.loadChildren().then(resolve).catch(reject);\n            });\n        }\n\n        /**\n         * Remove a node from the tree.\n         *\n         * @param {boolean} includeState Include itree.state object.\n         * @return {object} Removed tree node object.\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove() {\n            var includeState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            // Cache parent before we remove the node\n            var parent = this.getParent();\n\n            // Remove self\n            this.context().remove(this);\n\n            // Refresh parent states\n            if (parent) {\n                parent.refreshIndeterminateState();\n                parent.markDirty();\n            }\n\n            var pagination = parent ? parent.pagination() : this._tree.pagination();\n            pagination.total--;\n\n            // Export/event\n            var exported = this.toObject(false, includeState);\n            this._tree.emit('node.removed', exported, parent);\n\n            this._tree.applyChanges();\n\n            return exported;\n        }\n\n        /**\n         * Get whether this node is soft-removed.\n         *\n         * @return {boolean} True if node soft-removed.\n         */\n\n    }, {\n        key: 'removed',\n        value: function removed() {\n            return this.state('removed');\n        }\n\n        /**\n         * Get whether this node has been rendered.\n         *\n         * Will be false if deferred rendering is enable and the node has\n         * not yet been loaded, or if a custom DOM renderer is used.\n         *\n         * @return {boolean} True if node rendered.\n         */\n\n    }, {\n        key: 'rendered',\n        value: function rendered() {\n            return this.state('rendered');\n        }\n\n        /**\n         * Restore state if soft-removed.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'restore',\n        value: function restore() {\n            return baseStateChange('removed', false, 'restored', this);\n        }\n\n        /**\n         * Select this node.\n         *\n         * @param {boolean} shallow Skip auto-selecting children.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'select',\n        value: function select(shallow) {\n            if (!this.selected() && this.selectable()) {\n                // Batch selection changes\n                this._tree.batch();\n\n                if (this._tree.canAutoDeselect()) {\n                    var oldVal = this._tree.config.selection.require;\n                    this._tree.config.selection.require = false;\n                    this._tree.deselectDeep();\n                    this._tree.config.selection.require = oldVal;\n                }\n\n                // Will we apply this state change to our children?\n                var deep = !shallow && this._tree.config.selection.autoSelectChildren;\n\n                baseStateChange('selected', true, 'selected', this, deep);\n\n                // Cache as the last selected node\n                this._tree._lastSelectedNode = this;\n\n                // Mark hierarchy dirty and apply\n                this.markDirty();\n                this._tree.end();\n            }\n\n            return this;\n        }\n\n        /**\n         * Get weather node selectable.\n         *\n         * @return {boolean} True if node selectable.\n         */\n\n    }, {\n        key: 'selectable',\n        value: function selectable() {\n            var allow = this._tree.config.selection.allow(this);\n            return typeof allow === 'boolean' ? allow : this.state('selectable');\n        }\n\n        /**\n         * Get whether this node is selected.\n         *\n         * @return {boolean} True if node selected.\n         */\n\n    }, {\n        key: 'selected',\n        value: function selected() {\n            return this.state('selected');\n        }\n\n        /**\n         * Set a root property on this node.\n         *\n         * @param {string|number} property Property name.\n         * @param {*} value New value.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'set',\n        value: function set$$1(property, value) {\n            this[property] = value;\n\n            this.markDirty();\n            this._tree.applyChanges();\n\n            return this;\n        }\n\n        /**\n         * Show this node.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'show',\n        value: function show() {\n            return baseStateChange('hidden', false, 'shown', this);\n        }\n\n        /**\n         * Get or set a state value.\n         *\n         * This is a base method and will not invoke related changes, for example\n         * setting selected=false will not trigger any deselection logic.\n         *\n         * @param {string|object} obj Property name or Key/Value state object.\n         * @param {boolean} val New value, if setting.\n         * @return {boolean|object} Old state object, or old value if property name used.\n         */\n\n    }, {\n        key: 'state',\n        value: function state(obj, val) {\n            var _this5 = this;\n\n            if (_.isString(obj)) {\n                return baseState(this, obj, val);\n            }\n\n            this._tree.batch();\n\n            var oldState = {};\n            _.each(obj, function (value, prop) {\n                oldState[prop] = baseState(_this5, prop, value);\n            });\n\n            this._tree.end();\n\n            return oldState;\n        }\n\n        /**\n         * Get or set multiple state values to a single value.\n         *\n         * @param {Array} names Property names.\n         * @param {boolean} newVal New value, if setting.\n         * @return {Array} Array of state booleans\n         */\n\n    }, {\n        key: 'states',\n        value: function states(names, newVal) {\n            var _this6 = this;\n\n            var results = [];\n\n            this._tree.batch();\n\n            _.each(names, function (name) {\n                results.push(_this6.state(name, newVal));\n            });\n\n            this._tree.end();\n\n            return results;\n        }\n\n        /**\n         * Swap position with the given node.\n         *\n         * @param {TreeNode} node Node.\n         * @return {TreeNode} Node objects.\n         */\n\n    }, {\n        key: 'swap',\n        value: function swap(node) {\n            this.context().swap(this, node);\n\n            return this;\n        }\n\n        /**\n         * Mark this node as \"removed\" without actually removing it.\n         *\n         * Expand/show methods will never reveal this node until restored.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'softRemove',\n        value: function softRemove() {\n            return baseStateChange('removed', true, 'softremoved', this, 'softRemove');\n        }\n\n        /**\n         * Toggle checked state.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'toggleCheck',\n        value: function toggleCheck() {\n            return this.checked() ? this.uncheck() : this.check();\n        }\n\n        /**\n         * Toggle collapsed state.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'toggleCollapse',\n        value: function toggleCollapse() {\n            return this.collapsed() ? this.expand() : this.collapse();\n        }\n\n        /**\n         * Toggle editing state.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'toggleEditing',\n        value: function toggleEditing() {\n            this.state('editing', !this.state('editing'));\n\n            this.markDirty();\n            this._tree.applyChanges();\n\n            return this;\n        }\n\n        /**\n         * Toggle selected state.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'toggleSelect',\n        value: function toggleSelect() {\n            return this.selected() ? this.deselect() : this.select();\n        }\n\n        /**\n         * Export this node as a native Object.\n         *\n         * @param {boolean} excludeChildren Exclude children.\n         * @param {boolean} includeState Include itree.state object.\n         * @return {object} Node object.\n         */\n\n    }, {\n        key: 'toObject',\n        value: function toObject() {\n            var _this7 = this;\n\n            var excludeChildren = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var includeState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var exported = {};\n\n            var keys = _.pull(Object.keys(this), '_tree', 'children', 'itree');\n\n            // Map keys\n            _.each(keys, function (keyName) {\n                exported[keyName] = _this7[keyName];\n            });\n\n            // Copy over whitelisted itree data\n            // Excludes internal-use junk like parent, dirty, ref\n            var itree = exported.itree = {};\n            itree.a = this.itree.a;\n            itree.icon = this.itree.icon;\n            itree.li = this.itree.li;\n\n            if (includeState) {\n                itree.state = this.itree.state;\n            }\n\n            // If including children, export them\n            if (!excludeChildren && this.hasChildren() && _.isFunction(this.children.toArray)) {\n                exported.children = this.children.toArray();\n            }\n\n            return exported;\n        }\n\n        /**\n         * Get the text content of this tree node.\n         *\n         * @return {string} Text content.\n         */\n\n    }, {\n        key: 'toString',\n        value: function toString() {\n            return this.text;\n        }\n\n        /**\n         * Get the tree this node ultimately belongs to.\n         *\n         * @return {InspireTree} Tree instance.\n         */\n\n    }, {\n        key: 'tree',\n        value: function tree() {\n            return this.context().tree();\n        }\n\n        /**\n         * Uncheck this node.\n         *\n         * @param {boolean} shallow Skip auto-unchecking children.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'uncheck',\n        value: function uncheck(shallow) {\n            this._tree.batch();\n\n            // Will we apply this state change to our children?\n            var deep = !shallow && this._tree.config.checkbox.autoCheckChildren;\n\n            baseStateChange('checked', false, 'unchecked', this, deep);\n\n            // Reset indeterminate state\n            this.state('indeterminate', false);\n\n            // Refresh our parent\n            if (this.hasParent()) {\n                this.getParent().refreshIndeterminateState();\n            }\n\n            this._tree.end();\n\n            return this;\n        }\n    }, {\n        key: 'visible',\n\n\n        /**\n         * Get whether node is visible to a user. Returns false\n         * if it's hidden, or if any ancestor is hidden or collapsed.\n         *\n         * @return {boolean} Whether visible.\n         */\n        value: function visible() {\n            var isVisible = true;\n            if (this.hidden() || this.removed() || this._tree.usesNativeDOM && !this.rendered()) {\n                isVisible = false;\n            } else if (this.hasParent()) {\n                if (this.getParent().collapsed()) {\n                    isVisible = false;\n                } else {\n                    isVisible = this.getParent().visible();\n                }\n            } else {\n                isVisible = true;\n            }\n\n            return isVisible;\n        }\n    }]);\n    return TreeNode;\n}();\n\n/**\n * Parse a raw object into a TreeNode used within a tree.\n *\n * Note: Uses native js over lodash where performance\n * benefits most, since this handles every node.\n *\n * @private\n * @param {object} tree Tree instance.\n * @param {object} object Source object\n * @param {object} parent Pointer to parent object.\n * @return {object} Final object\n */\nfunction objectToNode(tree, object, parent) {\n    // Create or type-ensure ID\n    object.id = object.id || v4_1();\n    if (typeof object.id !== 'string' && typeof object.id !== 'number') {\n        object.id = object.id.toString();\n    }\n\n    // High-performance default assignments\n    var itree = object.itree = object.itree || {};\n    itree.icon = itree.icon || false;\n    itree.dirty = false;\n\n    var li = itree.li = itree.li || {};\n    li.attributes = li.attributes || {};\n\n    var a = itree.a = itree.a || {};\n    a.attributes = a.attributes || {};\n\n    var state = itree.state = itree.state || {};\n\n    // Enabled by default\n    state.collapsed = typeof state.collapsed === 'boolean' ? state.collapsed : tree.defaultState.collapsed;\n    state.selectable = typeof state.selectable === 'boolean' ? state.selectable : tree.defaultState.selectable;\n    state.draggable = typeof state.draggable === 'boolean' ? state.draggable : tree.defaultState.draggable;\n    state['drop-target'] = typeof state['drop-target'] === 'boolean' ? state['drop-target'] : tree.defaultState['drop-target'];\n\n    // Disabled by default\n    state.checked = typeof state.checked === 'boolean' ? state.checked : false;\n    state.editable = typeof state.editable === 'boolean' ? state.editable : tree.defaultState.editable;\n    state.editing = typeof state.editing === 'boolean' ? state.editing : tree.defaultState.editing;\n    state.focused = state.focused || tree.defaultState.focused;\n    state.hidden = state.hidden || tree.defaultState.hidden;\n    state.indeterminate = state.indeterminate || tree.defaultState.indeterminate;\n    state.loading = state.loading || tree.defaultState.loading;\n    state.removed = state.removed || tree.defaultState.removed;\n    state.rendered = state.rendered || tree.defaultState.rendered;\n    state.selected = state.selected || tree.defaultState.selected;\n\n    // Save parent, if any.\n    object.itree.parent = parent;\n\n    // Wrap\n    object = _.assign(new TreeNode(tree), object);\n\n    if (_.isArrayLike(object.children)) {\n        object.children = collectionToModel(tree, object.children, object);\n    }\n\n    // Fire events for pre-set states, if enabled\n    if (tree.allowsLoadEvents) {\n        _.each(tree.config.allowLoadEvents, function (eventName) {\n            if (state[eventName]) {\n                tree.emit('node.' + eventName, object, true);\n            }\n        });\n    }\n\n    return object;\n}\n\n/**\n * Parses a raw collection of objects into a model used\n * within a tree. Adds state and other internal properties.\n *\n * @private\n * @param {object} tree Tree instance.\n * @param {array} array Array of nodes\n * @param {object} parent Pointer to parent object\n * @return {array|object} Object model.\n */\nfunction collectionToModel(tree, array, parent) {\n    var collection = new TreeNodes(tree);\n\n    // Sort\n    if (tree.config.sort) {\n        array = _.sortBy(array, tree.config.sort);\n    }\n\n    _.each(array, function (node) {\n        collection.push(objectToNode(tree, node, parent));\n    });\n\n    collection._context = parent;\n\n    return collection;\n}\n\nvar eventemitter2 = createCommonjsModule(function (module, exports) {\n!function(undefined) {\r\n\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\r\n\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this._newListener = conf.newListener);\r\n      conf.removeListener && (this._removeListener = conf.removeListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    } else {\r\n      this._maxListeners = defaultMaxListeners;\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. ' + count + ' listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: ' + eventName + '.';\r\n    }\r\n\r\n    if(typeof process !== 'undefined' && process.emitWarning){\r\n      var e = new Error(errorMsg);\r\n      e.name = 'MaxListenersExceededWarning';\r\n      e.emitter = this;\r\n      e.count = count;\r\n      process.emitWarning(e);\r\n    } else {\r\n      console.error(errorMsg);\r\n\r\n      if (console.trace){\r\n        console.trace();\r\n      }\r\n    }\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this._newListener = false;\r\n    this._removeListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  //\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i) {\r\n    if (!tree) {\r\n      return [];\r\n    }\r\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\r\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\r\n          handlers && handlers.push(tree._listeners[leaf]);\r\n        }\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      if (currentType === '*') {\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\r\n          }\r\n        }\r\n        return listeners;\r\n      } else if(currentType === '**') {\r\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\r\n        if(endReached && tree._listeners) {\r\n          // The next element has a _listeners, add it to the handlers.\r\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\r\n        }\r\n\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            if(branch === '*' || branch === '**') {\r\n              if(tree[branch]._listeners && !endReached) {\r\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\r\n              }\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            } else if(branch === nextType) {\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\r\n            } else {\r\n              // No match on this one, shift into the tree but not in the type array.\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            }\r\n          }\r\n        }\r\n        return listeners;\r\n      }\r\n\r\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\r\n    }\r\n\r\n    xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i+1);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if(xxTree) {\r\n      if(i < typeLength) {\r\n        if(xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        for(branch in xxTree) {\r\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\r\n            if(branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\r\n            } else if(branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\r\n            }\r\n          }\r\n        }\r\n      } else if(xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength);\r\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n\r\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    for(var i = 0, len = type.length; i+1 < len; i++) {\r\n      if(type[i] === '**' && type[i+1] === '**') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var tree = this.listenerTree;\r\n    var name = type.shift();\r\n\r\n    while (name !== undefined) {\r\n\r\n      if (!tree[name]) {\r\n        tree[name] = {};\r\n      }\r\n\r\n      tree = tree[name];\r\n\r\n      if (type.length === 0) {\r\n\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        }\r\n        else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n            !tree._listeners.warned &&\r\n            this._maxListeners > 0 &&\r\n            tree._listeners.length > this._maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      name = type.shift();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n\r\n  EventEmitter.prototype.once = function(event, fn) {\r\n    return this._once(event, fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependOnceListener = function(event, fn) {\r\n    return this._once(event, fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype._once = function(event, fn, prepend) {\r\n    this._many(event, 1, fn, prepend);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependMany = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      return fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    this._on(event, listener, prepend);\r\n\r\n    return self;\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this._newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 0; j < al; j++) args[j] = arguments[j];\r\n      }\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this._newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 1; j < al; j++) args[j] = arguments[j];\r\n      }\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, args));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      handler = handler.slice();\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener) {\r\n    return this._on(type, listener, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependListener = function(type, listener) {\r\n    return this._on(type, listener, true);\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    return this._onAny(fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependAny = function(fn) {\r\n    return this._onAny(fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype._onAny = function(fn, prepend){\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    if(prepend){\r\n      this._all.unshift(fn);\r\n    }else{\r\n      this._all.push(fn);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype._on = function(type, listener, prepend) {\r\n    if (typeof type === 'function') {\r\n      this._onAny(type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    if (this._newListener)\r\n       this.emit('newListener', type, listener);\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    }\r\n    else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just add\r\n      if(prepend){\r\n        this._events[type].unshift(listener);\r\n      }else{\r\n        this._events[type].push(listener);\r\n      }\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._maxListeners > 0 &&\r\n        this._events[type].length > this._maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n    }\r\n    else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n        if (this._removeListener)\r\n          this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n        if (this._removeListener)\r\n          this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    function recursivelyGarbageCollect(root) {\r\n      if (root === undefined) {\r\n        return;\r\n      }\r\n      var keys = Object.keys(root);\r\n      for (var i in keys) {\r\n        var key = keys[i];\r\n        var obj = root[key];\r\n        if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\r\n          continue;\r\n        if (Object.keys(obj).length > 0) {\r\n          recursivelyGarbageCollect(root[key]);\r\n        }\r\n        if (Object.keys(obj).length === 0) {\r\n          delete root[key];\r\n        }\r\n      }\r\n    }\r\n    recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          if (this._removeListener)\r\n            this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      if (this._removeListener) {\r\n        for(i = 0, l = fns.length; i < l; i++)\r\n          this.emit(\"removeListenerAny\", fns[i]);\r\n      }\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function(type) {\r\n    if (type === undefined) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n\r\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n        var leaf = leafs[iLeaf];\r\n        leaf._listeners = null;\r\n      }\r\n    }\r\n    else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function(type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    if (!this._events[type]) this._events[type] = [];\r\n    if (!isArray(this._events[type])) {\r\n      this._events[type] = [this._events[type]];\r\n    }\r\n    return this._events[type];\r\n  };\r\n\r\n  EventEmitter.prototype.eventNames = function(){\r\n    return Object.keys(this._events);\r\n  };\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  if (typeof undefined === 'function' && undefined.amd) {\r\n     // AMD. Register as an anonymous module.\r\n    undefined(function() {\r\n      return EventEmitter;\r\n    });\r\n  } else {\r\n    // CommonJS\r\n    module.exports = EventEmitter;\r\n  }\r\n}();\n});\nvar eventemitter2_1 = eventemitter2.EventEmitter2;\n\n// Libs\n\n/**\n * Maps a method to the root TreeNodes collection.\n *\n * @private\n * @param {InspireTree} tree Tree instance.\n * @param {string} method Method name.\n * @param {arguments} args Proxied arguments.\n * @return {mixed} Proxied return value.\n */\nfunction _map(tree, method, args) {\n    return tree.model[method].apply(tree.model, args);\n}\n\n/**\n * Represents a singe tree instance.\n *\n * @return {InspireTree} Tree instance.\n */\n\nvar InspireTree = function (_EventEmitter) {\n    inherits(InspireTree, _EventEmitter);\n\n    function InspireTree(opts) {\n        classCallCheck(this, InspireTree);\n\n        var _this = possibleConstructorReturn(this, (InspireTree.__proto__ || Object.getPrototypeOf(InspireTree)).call(this));\n\n        var tree = _this;\n\n        // Init properties\n        tree._lastSelectedNode;\n        tree._muted = false;\n        tree.allowsLoadEvents = false;\n        tree.batching = 0;\n        tree.id = v4_1();\n        tree.initialized = false;\n        tree.isDynamic = false;\n        tree.opts = opts;\n        tree.preventDeselection = false;\n\n        // Assign defaults\n        tree.config = _.defaultsDeep({}, opts, {\n            allowLoadEvents: [],\n            checkbox: {\n                autoCheckChildren: true\n            },\n            contextMenu: false,\n            data: false,\n            editable: false,\n            editing: {\n                add: false,\n                edit: false,\n                remove: false\n            },\n            nodes: {\n                resetStateOnRestore: true\n            },\n            pagination: {\n                limit: -1\n            },\n            search: {\n                matcher: false,\n                matchProcessor: false\n            },\n            selection: {\n                allow: _.noop,\n                autoDeselect: true,\n                autoSelectChildren: false,\n                disableDirectDeselection: false,\n                mode: 'default',\n                multiple: false,\n                require: false\n            },\n            showCheckboxes: false,\n            sort: false\n        });\n\n        // If checkbox mode, we must force auto-selecting children\n        if (tree.config.selection.mode === 'checkbox') {\n            tree.config.selection.autoSelectChildren = true;\n\n            // In checkbox mode, checked=selected\n            tree.on('node.checked', function (node) {\n                if (!node.selected()) {\n                    node.select(true);\n                }\n            });\n\n            tree.on('node.selected', function (node) {\n                if (!node.checked()) {\n                    node.check(true);\n                }\n            });\n\n            tree.on('node.unchecked', function (node) {\n                if (node.selected()) {\n                    node.deselect(true);\n                }\n            });\n\n            tree.on('node.deselected', function (node) {\n                if (node.checked()) {\n                    node.uncheck(true);\n                }\n            });\n        }\n\n        // If auto-selecting children, we must force multiselect\n        if (tree.config.selection.autoSelectChildren) {\n            tree.config.selection.multiple = true;\n            tree.config.selection.autoDeselect = false;\n        }\n\n        // Treat editable as full edit mode\n        if (opts.editable && !opts.editing) {\n            tree.config.editing.add = true;\n            tree.config.editing.edit = true;\n            tree.config.editing.remove = true;\n        }\n\n        // Support simple config for search\n        if (_.isFunction(opts.search)) {\n            tree.config.search = {\n                matcher: opts.search,\n                matchProcessor: false\n            };\n        }\n\n        // Init the default state for nodes\n        tree.defaultState = {\n            collapsed: true,\n            editable: _.get(tree, 'config.editing.edit'),\n            editing: false,\n            draggable: true,\n            'drop-target': true,\n            focused: false,\n            hidden: false,\n            indeterminate: false,\n            loading: false,\n            matched: false,\n            removed: false,\n            rendered: false,\n            selectable: true,\n            selected: false\n        };\n\n        // Cache some configs\n        tree.allowsLoadEvents = _.isArray(tree.config.allowLoadEvents) && tree.config.allowLoadEvents.length > 0;\n        tree.isDynamic = _.isFunction(tree.config.data);\n\n        // Override emitter so we can better control flow\n        var emit = tree.emit;\n        tree.emit = function (eventName) {\n            if (!tree.isEventMuted(eventName)) {\n                // Duck-type for a DOM event\n                if (_.isFunction(_.get(arguments, '[1].preventDefault'))) {\n                    var event = arguments[1];\n                    event.treeDefaultPrevented = false;\n                    event.preventTreeDefault = function () {\n                        event.treeDefaultPrevented = true;\n                    };\n                }\n\n                emit.apply(tree, arguments);\n            }\n        };\n\n        // Init the model\n        tree.model = new TreeNodes(tree);\n\n        // Load initial user data\n        if (tree.config.data) {\n            tree.load(tree.config.data);\n        }\n\n        tree.initialized = true;\n        return _this;\n    }\n\n    /**\n     * Adds a new node. If a sort method is configured,\n     * the node will be added in the appropriate order.\n     *\n     * @param {object} node Node\n     * @return {TreeNode} Node object.\n     */\n\n\n    createClass(InspireTree, [{\n        key: 'addNode',\n        value: function addNode() {\n            return _map(this, 'addNode', arguments);\n        }\n\n        /**\n         * Add nodes.\n         *\n         * @param {array} nodes Array of node objects.\n         * @return {TreeNodes} Added node objects.\n         */\n\n    }, {\n        key: 'addNodes',\n        value: function addNodes(nodes) {\n            var _this2 = this;\n\n            this.batch();\n\n            var newNodes = new TreeNodes(this);\n            _.each(nodes, function (node) {\n                return newNodes.push(_this2.addNode(node));\n            });\n\n            this.end();\n\n            return newNodes;\n        }\n\n        /**\n         * Release pending data changes to any listeners.\n         *\n         * Will skip rendering as long as any calls\n         * to `batch` have yet to be resolved,\n         *\n         * @private\n         * @return {void}\n         */\n\n    }, {\n        key: 'applyChanges',\n        value: function applyChanges() {\n            if (this.batching === 0) {\n                this.emit('changes.applied');\n            }\n        }\n\n        /**\n         * Query for all available nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'available',\n        value: function available() {\n            return _map(this, 'available', arguments);\n        }\n\n        /**\n         * Batch multiple changes for listeners (i.e. DOM)\n         *\n         * @private\n         * @return {void}\n         */\n\n    }, {\n        key: 'batch',\n        value: function batch() {\n            if (this.batching < 0) {\n                this.batching = 0;\n            }\n\n            this.batching++;\n        }\n\n        /**\n         * Blur children in this collection.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'blur',\n        value: function blur() {\n            return _map(this, 'blur', arguments);\n        }\n\n        /**\n         * Blur (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'blurDeep',\n        value: function blurDeep() {\n            return _map(this, 'blurDeep', arguments);\n        }\n\n        /**\n         * Compares any number of TreeNode objects and returns\n         * the minimum and maximum (starting/ending) nodes.\n         *\n         * @return {array} Array with two TreeNode objects.\n         */\n\n    }, {\n        key: 'boundingNodes',\n        value: function boundingNodes() {\n            var pathMap = _.transform(arguments, function (map, node) {\n                map[node.indexPath().replace(/\\./g, '')] = node;\n            }, {});\n\n            var _$sortBy = _.sortBy(Object.keys(pathMap)),\n                _$sortBy2 = toArray(_$sortBy),\n                head = _$sortBy2[0],\n                tail = _$sortBy2.slice(1);\n\n            return [_.get(pathMap, head), _.get(pathMap, tail)];\n        }\n\n        /**\n         * Check if the tree will auto-deselect currently selected nodes\n         * when a new selection is made.\n         *\n         * @return {boolean} If tree will auto-deselect nodes.\n         */\n\n    }, {\n        key: 'canAutoDeselect',\n        value: function canAutoDeselect() {\n            return this.config.selection.autoDeselect && !this.preventDeselection;\n        }\n\n        /**\n         * Query for all checked nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'checked',\n        value: function checked() {\n            return _map(this, 'checked', arguments);\n        }\n\n        /**\n         * Clean nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'clean',\n        value: function clean() {\n            return _map(this, 'clean', arguments);\n        }\n\n        /**\n         * Clear nodes matched by previous search, restore all nodes and collapse parents.\n         *\n         * @return {Tree} Tree instance.\n         */\n\n    }, {\n        key: 'clearSearch',\n        value: function clearSearch() {\n            this.batch();\n\n            this.recurseDown(function (node) {\n                // Reset search effects (show node, collapse, reset matched)\n                node.show().collapse().state('matched', false);\n            });\n\n            this.end();\n\n            return this;\n        }\n\n        /**\n         * Clones (deeply) the array of nodes.\n         *\n         * Note: Cloning will *not* clone the context pointer.\n         *\n         * @return {TreeNodes} Array of cloned nodes.\n         */\n\n    }, {\n        key: 'clone',\n        value: function clone() {\n            return _map(this, 'clone', arguments);\n        }\n\n        /**\n         * Collapse nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'collapse',\n        value: function collapse() {\n            return _map(this, 'collapse', arguments);\n        }\n\n        /**\n         * Query for all collapsed nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'collapsed',\n        value: function collapsed() {\n            return _map(this, 'collapsed', arguments);\n        }\n\n        /**\n         * Collapse (deeply) all children.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'collapseDeep',\n        value: function collapseDeep() {\n            return _map(this, 'collapseDeep', arguments);\n        }\n\n        /**\n         * Concat multiple TreeNodes arrays.\n         *\n         * @param {TreeNodes} nodes Array of nodes.\n         * @return {TreeNodes} Resulting node array.\n         */\n\n    }, {\n        key: 'concat',\n        value: function concat() {\n            return _map(this, 'concat', arguments);\n        }\n\n        /**\n         * Copy nodes to another tree instance.\n         *\n         * @param {boolean} hierarchy Include necessary ancestors to match hierarchy.\n         * @return {object} Methods to perform action on copied nodes.\n         */\n\n    }, {\n        key: 'copy',\n        value: function copy() {\n            return _map(this, 'copy', arguments);\n        }\n\n        /**\n         * Creates a TreeNode without adding it. If the obj is already a TreeNode it's returned without modification.\n         *\n         * @param {object} obj Source node object.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'createNode',\n        value: function createNode(obj) {\n            return InspireTree.isTreeNode(obj) ? obj : objectToNode(this, obj);\n        }\n\n        /**\n         * Return deepest nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'deepest',\n        value: function deepest() {\n            return _map(this, 'deepest', arguments);\n        }\n\n        /**\n         * Deselect nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'deselect',\n        value: function deselect() {\n            return _map(this, 'deselect', arguments);\n        }\n\n        /**\n         * Deselect (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'deselectDeep',\n        value: function deselectDeep() {\n            return _map(this, 'deselectDeep', arguments);\n        }\n\n        /**\n         * Disable auto-deselection of currently selected nodes.\n         *\n         * @return {Tree} Tree instance.\n         */\n\n    }, {\n        key: 'disableDeselection',\n        value: function disableDeselection() {\n            if (this.config.selection.multiple) {\n                this.preventDeselection = true;\n            }\n\n            return this;\n        }\n\n        /**\n         * Iterate each TreeNode.\n         *\n         * @param {function} iteratee Iteratee invoke for each node.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'each',\n        value: function each() {\n            return _map(this, 'each', arguments);\n        }\n\n        /**\n         * Check if every node passes the given test.\n         *\n         * @param {function} tester Test each node in this collection,\n         * @return {boolean} True if every node passes the test.\n         */\n\n    }, {\n        key: 'every',\n        value: function every() {\n            return _map(this, 'every', arguments);\n        }\n\n        /**\n         * Query for all editable nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'editable',\n        value: function editable() {\n            return _map(this, 'editable', arguments);\n        }\n\n        /**\n         * Query for all nodes in editing mode.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'editing',\n        value: function editing() {\n            return _map(this, 'editing', arguments);\n        }\n\n        /**\n         * Enable auto-deselection of currently selected nodes.\n         *\n         * @return {Tree} Tree instance.\n         */\n\n    }, {\n        key: 'enableDeselection',\n        value: function enableDeselection() {\n            this.preventDeselection = false;\n\n            return this;\n        }\n\n        /**\n         * Release the current batch.\n         *\n         * @private\n         * @return {void}\n         */\n\n    }, {\n        key: 'end',\n        value: function end() {\n            this.batching--;\n\n            if (this.batching === 0) {\n                this.applyChanges();\n            }\n        }\n\n        /**\n         * Expand children.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'expand',\n        value: function expand() {\n            return _map(this, 'expand', arguments);\n        }\n\n        /**\n         * Expand (deeply) all nodes.\n         *\n         * @return {Promise<TreeNodes>} Promise resolved when all children have loaded and expanded.\n         */\n\n    }, {\n        key: 'expandDeep',\n        value: function expandDeep() {\n            return _map(this, 'expandDeep', arguments);\n        }\n\n        /**\n         * Query for all expanded nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'expanded',\n        value: function expanded() {\n            return _map(this, 'expanded', arguments);\n        }\n\n        /**\n         * Clone a hierarchy of all nodes matching a predicate.\n         *\n         * Because it filters deeply, we must clone all nodes so that we\n         * don't affect the actual node array.\n         *\n         * @param {string|function} predicate State flag or custom function.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'extract',\n        value: function extract() {\n            return _map(this, 'extract', arguments);\n        }\n\n        /**\n         * Filter all nodes matching the given predicate.\n         *\n         * @param {function} predicate Test function.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'filter',\n        value: function filter() {\n            return _map(this, 'filter', arguments);\n        }\n\n        /**\n         * Filter all nodes matching the given predicate.\n         *\n         * @param {string|function} predicate State flag or custom function.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'filterBy',\n        value: function filterBy() {\n            return _map(this, 'filterBy', arguments);\n        }\n\n        /**\n         * Returns the first node matching predicate.\n         *\n         * @param {function} predicate Predicate functions, accepts a single node and returns a boolean.\n         * @return {TreeNode} First matching TreeNode, or undefined.\n         */\n\n    }, {\n        key: 'find',\n        value: function find() {\n            return _map(this, 'find', arguments);\n        }\n\n        /**\n         * Flatten and get only node(s) matching the expected state or predicate function.\n         *\n         * @param {string|function} predicate State property or custom function.\n         * @return {TreeNodes} Flat array of matching nodes.\n         */\n\n    }, {\n        key: 'flatten',\n        value: function flatten() {\n            return _map(this, 'flatten', arguments);\n        }\n\n        /**\n         * Query for all focused nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'focused',\n        value: function focused() {\n            return _map(this, 'focused', arguments);\n        }\n\n        /**\n         * Iterate each TreeNode.\n         *\n         * @param {function} iteratee Iteratee invoke for each node.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'forEach',\n        value: function forEach() {\n            return _map(this, 'each', arguments);\n        }\n\n        /**\n         * Get a specific node by its index, or undefined if it doesn't exist.\n         *\n         * @param {int} index Numeric index of requested node.\n         * @return {TreeNode} Node object. Undefined if invalid index.\n         */\n\n    }, {\n        key: 'get',\n        value: function get$$1() {\n            return _map(this, 'get', arguments);\n        }\n\n        /**\n         * Query for all hidden nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'hidden',\n        value: function hidden() {\n            return _map(this, 'hidden', arguments);\n        }\n\n        /**\n         * Hide nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            return _map(this, 'hide', arguments);\n        }\n\n        /**\n         * Hide (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'hideDeep',\n        value: function hideDeep() {\n            return _map(this, 'hideDeep', arguments);\n        }\n\n        /**\n         * Query for all indeterminate nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'indeterminate',\n        value: function indeterminate() {\n            return _map(this, 'indeterminate', arguments);\n        }\n\n        /**\n         * Get the index of the given node.\n         *\n         * @param {TreeNode} node Root tree node.\n         * @return {int} Index of the node.\n         */\n\n    }, {\n        key: 'indexOf',\n        value: function indexOf() {\n            return _map(this, 'indexOf', arguments);\n        }\n\n        /**\n         * Insert a new node at the given position.\n         *\n         * @param {integer} index Index at which to insert the node.\n         * @param {object} object Raw node object or TreeNode.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'insertAt',\n        value: function insertAt() {\n            return _map(this, 'insertAt', arguments);\n        }\n\n        /**\n         * Invoke method(s) on each node.\n         *\n         * @param {string|array} methods Method name(s).\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'invoke',\n        value: function invoke() {\n            return _map(this, 'invoke', arguments);\n        }\n\n        /**\n         * Invoke method(s) deeply.\n         *\n         * @param {string|array} methods Method name(s).\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'invokeDeep',\n        value: function invokeDeep() {\n            return _map(this, 'invokeDeep', arguments);\n        }\n\n        /**\n         * Check if an event is currently muted.\n         *\n         * @param {string} eventName Event name.\n         * @return {boolean} If event is muted.\n         */\n\n    }, {\n        key: 'isEventMuted',\n        value: function isEventMuted(eventName) {\n            if (_.isBoolean(this.muted())) {\n                return this.muted();\n            }\n\n            return _.includes(this.muted(), eventName);\n        }\n\n        /**\n         * Check if an object is a Tree.\n         *\n         * @param {object} object Object\n         * @return {boolean} If object is a Tree.\n         */\n\n    }, {\n        key: 'isTree',\n        value: function isTree(object) {\n            return object instanceof InspireTree;\n        }\n\n        /**\n         * Check if an object is a TreeNode.\n         *\n         * @param {object} obj Object\n         * @return {boolean} If object is a TreeNode.\n         */\n\n    }, {\n        key: 'join',\n\n\n        /**\n         * Join nodes into a resulting string.\n         *\n         * @param {string} separator Separator, defaults to a comma\n         * @return {string} Strings from root node objects.\n         */\n        value: function join() {\n            return _map(this, 'join', arguments);\n        }\n\n        /**\n         * Get the most recently selected node, if any.\n         *\n         * @return {TreeNode} Last selected node, or undefined.\n         */\n\n    }, {\n        key: 'lastSelectedNode',\n        value: function lastSelectedNode() {\n            return this._lastSelectedNode;\n        }\n\n        /**\n         * Load data. Accepts an array, function, or promise.\n         *\n         * @param {array|function|Promise} loader Array of nodes, function, or promise resolving an array of nodes.\n         * @return {Promise<TreeNodes>} Promise resolved upon successful load, rejected on error.\n         * @example\n         *\n         * tree.load($.getJSON('nodes.json'));\n         */\n\n    }, {\n        key: 'load',\n        value: function load(loader) {\n            var _this3 = this;\n\n            var promise = new es6Promise_1(function (resolve, reject) {\n                var complete = function complete(nodes, totalNodes) {\n                    // A little type-safety for silly situations\n                    if (!_.isArrayLike(nodes)) {\n                        return reject(new TypeError('Loader requires an array-like `nodes` parameter.'));\n                    }\n\n                    // Delay event for synchronous loader. Otherwise it fires\n                    // before the user has a chance to listen.\n                    if (!_this3.initialized && _.isArrayLike(nodes)) {\n                        setTimeout(function () {\n                            _this3.emit('data.loaded', nodes);\n                        });\n                    } else {\n                        _this3.emit('data.loaded', nodes);\n                    }\n\n                    // Parse newly-loaded nodes\n                    var newModel = collectionToModel(_this3, nodes);\n\n                    // Concat only if loading is deferred\n                    if (_this3.config.deferredLoading) {\n                        _this3.model = _this3.model.concat(newModel);\n                    } else {\n                        _this3.model = newModel;\n                    }\n\n                    // Set pagination\n                    _this3.model._pagination.total = nodes.length;\n                    if (_.parseInt(totalNodes) > nodes.length) {\n                        _this3.model._pagination.total = _.parseInt(totalNodes);\n                    }\n\n                    // Set pagination totals if resolver failed to provide them\n                    if (!totalNodes) {\n                        _this3.model.recurseDown(function (node) {\n                            if (node.hasChildren()) {\n                                node.children._pagination.total = node.children.length;\n                            }\n                        });\n                    }\n\n                    if (_this3.config.selection.require && !_this3.selected().length) {\n                        _this3.selectFirstAvailableNode();\n                    }\n\n                    var init = function init() {\n                        _this3.emit('model.loaded', _this3.model);\n\n                        resolve(_this3.model);\n\n                        _this3.applyChanges();\n                    };\n\n                    // Delay event for synchronous loader\n                    if (!_this3.initialized && _.isArray(nodes)) {\n                        setTimeout(init);\n                    } else {\n                        init();\n                    }\n                };\n\n                // Data given already as an array\n                if (_.isArrayLike(loader)) {\n                    complete(loader);\n                }\n\n                // Data loader requires a caller/callback\n                else if (_.isFunction(loader)) {\n                        var resp = loader(null, complete, reject, _this3.pagination());\n\n                        // Loader returned its own object\n                        if (resp) {\n                            loader = resp;\n                        }\n                    }\n\n                // Data loader is likely a promise\n                if (_.isObject(loader)) {\n                    standardizePromise(loader).then(complete).catch(reject);\n                } else {\n                    error(new Error('Invalid data loader.'));\n                }\n            });\n\n            // Copy to event listeners\n            promise.catch(function (err) {\n                _this3.emit('data.loaderror', err);\n            });\n\n            // Cache to allow access after tree instantiation\n            this._loader = {\n                promise: promise\n            };\n\n            return promise;\n        }\n\n        /**\n         * Query for all nodes currently loading children.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'loading',\n        value: function loading() {\n            return _map(this, 'loading', arguments);\n        }\n\n        /**\n         * Load additional nodes for the root context.\n         *\n         * @param {Event} event Click or scroll event if DOM interaction triggered this call.\n         * @return {Promise<TreeNodes>} Resolves with request results.\n         */\n\n    }, {\n        key: 'loadMore',\n        value: function loadMore() {\n            return _map(this, 'loadMore', arguments);\n        }\n\n        /**\n         * Create a new collection after passing every node through iteratee.\n         *\n         * @param {function} iteratee Node iteratee.\n         * @return {TreeNodes} New array of node objects.\n         */\n\n    }, {\n        key: 'map',\n        value: function map() {\n            return _map(this, 'map', arguments);\n        }\n\n        /**\n         * Query for all nodes matched in the last search.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'matched',\n        value: function matched() {\n            return _map(this, 'matched', arguments);\n        }\n\n        /**\n         * Move node at a given index to a new index.\n         *\n         * @param {int} index Current index.\n         * @param {int} newIndex New index.\n         * @param {TreeNodes} target Target TreeNodes array. Defaults to this.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'move',\n        value: function move() {\n            return _map(this, 'move', arguments);\n        }\n\n        /**\n         * Pause events.\n         *\n         * @param {array} events Event names to mute.\n         * @return {Tree} Tree instance.\n         */\n\n    }, {\n        key: 'mute',\n        value: function mute(events) {\n            if (_.isString(events) || _.isArray(events)) {\n                this._muted = _.castArray(events);\n            } else {\n                this._muted = true;\n            }\n\n            return this;\n        }\n\n        /**\n         * Get current mute settings.\n         *\n         * @return {boolean|array} Muted events. If all, true.\n         */\n\n    }, {\n        key: 'muted',\n        value: function muted() {\n            return this._muted;\n        }\n\n        /**\n         * Get a node.\n         *\n         * @param {string|number} id ID of node.\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'node',\n        value: function node() {\n            return _map(this, 'node', arguments);\n        }\n\n        /**\n         * Get all nodes in a tree, or nodes for an array of IDs.\n         *\n         * @param {array} refs Array of ID references.\n         * @return {TreeNodes} Array of node objects.\n         * @example\n         *\n         * let all = tree.nodes()\n         * let some = tree.nodes([1, 2, 3])\n         */\n\n    }, {\n        key: 'nodes',\n        value: function nodes() {\n            return _map(this, 'nodes', arguments);\n        }\n\n        /**\n         * Get the root TreeNodes pagination.\n         *\n         * @return {object} Pagination configuration object.\n         */\n\n    }, {\n        key: 'pagination',\n        value: function pagination() {\n            return _map(this, 'pagination', arguments);\n        }\n\n        /**\n         * Pop node in the final index position.\n         *\n         * @return {TreeNode} Node object.\n         */\n\n    }, {\n        key: 'pop',\n        value: function pop() {\n            return _map(this, 'pop', arguments);\n        }\n\n        /**\n         * Add a TreeNode to the end of the root collection.\n         *\n         * @param {TreeNode} node Node object.\n         * @return {int} The new length\n         */\n\n    }, {\n        key: 'push',\n        value: function push() {\n            return _map(this, 'push', arguments);\n        }\n\n        /**\n         * Iterate down all nodes and any children.\n         *\n         * Return false to stop execution.\n         *\n         * @private\n         * @param {function} iteratee Iteratee function\n         * @return {TreeNodes} Resulting nodes.\n         */\n\n    }, {\n        key: 'recurseDown',\n        value: function recurseDown() {\n            return _map(this, 'recurseDown', arguments);\n        }\n\n        /**\n         * Reduce nodes.\n         *\n         * @param {function} iteratee Iteratee function\n         * @return {any} Resulting data.\n         */\n\n    }, {\n        key: 'reduce',\n        value: function reduce() {\n            return _map(this, 'reduce', arguments);\n        }\n\n        /**\n         * Right-reduce root nodes.\n         *\n         * @param {function} iteratee Iteratee function\n         * @return {any} Resulting data.\n         */\n\n    }, {\n        key: 'reduceRight',\n        value: function reduceRight() {\n            return _map(this, 'reduceRight', arguments);\n        }\n\n        /**\n         * Reload/re-execute the original data loader.\n         *\n         * @return {Promise<TreeNodes>} Load method promise.\n         */\n\n    }, {\n        key: 'reload',\n        value: function reload() {\n            this.removeAll();\n\n            return this.load(this.opts.data || this.config.data);\n        }\n\n        /**\n         * Remove a node.\n         *\n         * @param {TreeNode} node Node object.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove() {\n            return _map(this, 'remove', arguments);\n        }\n\n        /**\n         * Remove all nodes.\n         *\n         * @return {Tree} Tree instance.\n         */\n\n    }, {\n        key: 'removeAll',\n        value: function removeAll() {\n            this.model = new TreeNodes(this);\n            this.applyChanges();\n\n            return this;\n        }\n\n        /**\n         * Query for all soft-removed nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'removed',\n        value: function removed() {\n            return _map(this, 'removed', arguments);\n        }\n\n        /**\n         * Restore nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'restore',\n        value: function restore() {\n            return _map(this, 'restore', arguments);\n        }\n\n        /**\n         * Restore (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'restoreDeep',\n        value: function restoreDeep() {\n            return _map(this, 'restoreDeep', arguments);\n        }\n\n        /**\n         * Reverse node order.\n         *\n         * @return {TreeNodes} Reversed array of node objects.\n         */\n\n    }, {\n        key: 'reverse',\n        value: function reverse() {\n            return _map(this, 'reverse', arguments);\n        }\n\n        /**\n         * Search nodes, showing only those that match and the necessary hierarchy.\n         *\n         * @param {*} query Search string, RegExp, or function.\n         * @return {Promise<TreeNodes>} Promise resolved with an array of matching node objects.\n         */\n\n    }, {\n        key: 'search',\n        value: function search(query) {\n            var _this4 = this;\n\n            var _config$search = this.config.search,\n                matcher = _config$search.matcher,\n                matchProcessor = _config$search.matchProcessor;\n\n            // Don't search if query empty\n\n            if (!query || _.isString(query) && _.isEmpty(query)) {\n                return es6Promise_1.resolve(this.clearSearch());\n            }\n\n            this.batch();\n\n            // Reset states\n            this.recurseDown(function (node) {\n                node.state('hidden', true);\n                node.state('matched', false);\n            });\n\n            this.end();\n\n            // Query nodes for any matching the query\n            matcher = _.isFunction(matcher) ? matcher : function (query, resolve) {\n                var matches = new TreeNodes(_this4);\n\n                // Convery the query into a usable predicate\n                if (_.isString(query)) {\n                    query = new RegExp(query, 'i');\n                }\n\n                var predicate = void 0;\n                if (_.isRegExp(query)) {\n                    predicate = function predicate(node) {\n                        return query.test(node.text);\n                    };\n                } else {\n                    predicate = query;\n                }\n\n                // Recurse down and find all matches\n                _this4.model.recurseDown(function (node) {\n                    if (!node.removed()) {\n                        if (predicate(node)) {\n                            // Return as a match\n                            matches.push(node);\n                        }\n                    }\n                });\n\n                resolve(matches);\n            };\n\n            // Process all matching nodes.\n            matchProcessor = _.isFunction(matchProcessor) ? matchProcessor : function (matches) {\n                matches.each(function (node) {\n                    node.show().state('matched', true);\n\n                    node.expandParents().collapse();\n\n                    if (node.hasChildren()) {\n                        node.children.showDeep();\n                    }\n                });\n            };\n\n            // Wrap the search matcher with a promise since it could require async requests\n            return new es6Promise_1(function (resolve, reject) {\n                // Execute the matcher and pipe results to the processor\n                matcher(query, function (matches) {\n                    // Convert to a TreeNodes array if we're receiving external nodes\n                    if (!InspireTree.isTreeNodes(matches)) {\n                        matches = _this4.nodes(_.map(matches, 'id'));\n                    }\n\n                    _this4.batch();\n\n                    matchProcessor(matches);\n\n                    _this4.end();\n\n                    resolve(matches);\n                }, reject);\n            });\n        }\n\n        /**\n         * Select nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'select',\n        value: function select() {\n            return _map(this, 'select', arguments);\n        }\n\n        /**\n         * Query for all selectable nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'selectable',\n        value: function selectable() {\n            return _map(this, 'selectable', arguments);\n        }\n\n        /**\n         * Select all nodes between a start and end node.\n         * Starting node must have a higher index path so we can work down to endNode.\n         *\n         * @param {TreeNode} startNode Starting node\n         * @param {TreeNode} endNode Ending node\n         * @return {Tree} Tree instance.\n         */\n\n    }, {\n        key: 'selectBetween',\n        value: function selectBetween(startNode, endNode) {\n            this.batch();\n\n            var node = startNode.nextVisibleNode();\n            while (node.id !== endNode.id) {\n                node.select();\n\n                node = node.nextVisibleNode();\n            }\n\n            this.end();\n\n            return this;\n        }\n    }, {\n        key: 'selectDeep',\n\n\n        /**\n         * Select (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n        value: function selectDeep() {\n            return _map(this, 'selectDeep', arguments);\n        }\n\n        /**\n         * Query for all selected nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'selected',\n        value: function selected() {\n            return _map(this, 'selected', arguments);\n        }\n\n        /**\n         * Select the first available node.\n         *\n         * @return {TreeNode} Selected node object.\n         */\n\n    }, {\n        key: 'selectFirstAvailableNode',\n        value: function selectFirstAvailableNode() {\n            var node = this.model.filterBy('available').get(0);\n            if (node) {\n                node.select();\n            }\n\n            return node;\n        }\n    }, {\n        key: 'shift',\n\n\n        /**\n         * Shift node in the first index position.\n         *\n         * @return {TreeNode} Node object.\n         */\n        value: function shift() {\n            return _map(this, 'shift', arguments);\n        }\n\n        /**\n         * Show nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'show',\n        value: function show() {\n            return _map(this, 'show', arguments);\n        }\n\n        /**\n         * Show (deeply) all nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'showDeep',\n        value: function showDeep() {\n            return _map(this, 'showDeep', arguments);\n        }\n\n        /**\n         * Get a shallow copy of a portion of nodes.\n         *\n         * @param {int} begin Starting index.\n         * @param {int} end End index.\n         * @return {Array} Array of selected subset.\n         */\n\n    }, {\n        key: 'slice',\n        value: function slice() {\n            return _map(this, 'slice', arguments);\n        }\n\n        /**\n         * Soft-remove nodes.\n         *\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'softRemove',\n        value: function softRemove() {\n            return _map(this, 'softRemove', arguments);\n        }\n\n        /**\n         * Check if at least one node passes the given test.\n         *\n         * @param {function} tester Test each node in this collection,\n         * @return {boolean} True if at least one node passes the test.\n         */\n\n    }, {\n        key: 'some',\n        value: function some() {\n            return _map(this, 'some', arguments);\n        }\n\n        /**\n         * Sort nodes using a function.\n         *\n         * @param {function} compareFn Comparison function.\n         * @return {TreeNodes} Root array of node objects.\n         */\n\n    }, {\n        key: 'sort',\n        value: function sort() {\n            return _map(this, 'sort', arguments);\n        }\n\n        /**\n         * Sort nodes using a function or key name.\n         *\n         * If no custom sorter given, the configured \"sort\" value will be used.\n         *\n         * @param {string|function} sorter Sort function or property name.\n         * @return {TreeNodes} Array of node obejcts.\n         */\n\n    }, {\n        key: 'sortBy',\n        value: function sortBy() {\n            return _map(this, 'sortBy', arguments);\n        }\n\n        /**\n         * Deeply sort nodes.\n         *\n         * @param {function} compareFn Comparison function.\n         * @return {TreeNodes} Root array of node objects.\n         */\n\n    }, {\n        key: 'sortDeep',\n        value: function sortDeep() {\n            return _map(this, 'sortDeep', arguments);\n        }\n\n        /**\n         * Remove and/or add new TreeNodes into the root collection.\n         *\n         * @param {int} start Starting index.\n         * @param {int} deleteCount Count of nodes to delete.\n         * @param {TreeNode} node Node(s) to insert.\n         * @return {Array} Array of selected subset.\n         */\n\n    }, {\n        key: 'splice',\n        value: function splice() {\n            return _map(this, 'slice', arguments);\n        }\n\n        /**\n         * Set nodes' state values.\n         *\n         * @param {string} name Property name.\n         * @param {boolean} newVal New value, if setting.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'state',\n        value: function state() {\n            return _map(this, 'state', arguments);\n        }\n\n        /**\n         * Set (deeply) nodes' state values.\n         *\n         * @param {string} name Property name.\n         * @param {boolean} newVal New value, if setting.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'stateDeep',\n        value: function stateDeep() {\n            return _map(this, 'stateDeep', arguments);\n        }\n\n        /**\n         * Swap two node positions.\n         *\n         * @param {TreeNode} node1 Node 1.\n         * @param {TreeNode} node2 Node 2.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'swap',\n        value: function swap() {\n            return _map(this, 'swap', arguments);\n        }\n\n        /**\n         * Get a native node Array.\n         *\n         * @return {array} Array of node objects.\n         */\n\n    }, {\n        key: 'toArray',\n        value: function toArray$$1() {\n            return _map(this, 'toArray', arguments);\n        }\n\n        /**\n         * Get a string representation of node objects.\n         *\n         * @return {string} Strings from root node objects.\n         */\n\n    }, {\n        key: 'toString',\n        value: function toString() {\n            return _map(this, 'toString', arguments);\n        }\n\n        /**\n         * Resume events.\n         *\n         * @param {array} events Events to unmute.\n         * @return {Tree} Tree instance.\n         */\n\n    }, {\n        key: 'unmute',\n        value: function unmute(events) {\n            // Diff array and set to false if we're now empty\n            if (_.isString(events) || _.isArray(events)) {\n                this._muted = _.difference(this._muted, _.castArray(events));\n                if (!this._muted.length) {\n                    this._muted = false;\n                }\n            } else {\n                this._muted = false;\n            }\n\n            return this;\n        }\n    }, {\n        key: 'unshift',\n\n\n        /**\n         * Add a TreeNode in the first index position.\n         *\n         * @return {number} The new length\n         */\n        value: function unshift() {\n            return _map(this, 'unshift', arguments);\n        }\n\n        /**\n         * Query for all visible nodes.\n         *\n         * @param {boolean} full Retain full hiearchy.\n         * @return {TreeNodes} Array of node objects.\n         */\n\n    }, {\n        key: 'visible',\n        value: function visible() {\n            return _map(this, 'visible', arguments);\n        }\n    }], [{\n        key: 'isTreeNode',\n        value: function isTreeNode(obj) {\n            return obj instanceof TreeNode;\n        }\n\n        /**\n         * Check if an object is a TreeNodes array.\n         *\n         * @param {object} obj Object\n         * @return {boolean} If object is a TreeNodes array.\n         */\n\n    }, {\n        key: 'isTreeNodes',\n        value: function isTreeNodes(obj) {\n            return obj instanceof TreeNodes;\n        }\n    }]);\n    return InspireTree;\n}(eventemitter2_1);\n\nreturn InspireTree;\n\n})));\n","'use strict';\n\nvar warnedDoubleClickDelay;\n\n/**\n * @summary Dynamic grid property getter/setters.\n * @desc  Dynamic grid properties can make use of a _backing store._\n * This backing store is created in the same layer (the grid properties layer) by {@link Hypergrid#clearState|clearState} and backs grid-only properties. We currently do not create one for descendant objects, such as column and cell properties objects.\n * The members of the backing store have the same names as the dynamic properties that utilize them.\n * They are initialized by {@link Hypergrid#clearState|clearState} to the default values from {@link module:defaults|defaults} object members, (also) of the same name.\n *\n * Note that dynamic properties must enumerable to be visible to {@link Hypergrid#saveState}.\n * @module dynamicProperties\n */\nvar dynamicPropertyDescriptors = {\n    /**\n     * @returns {string|undefined|object} One of:\n     * * **string:** When theme name is registered (except 'default').\n     * * **undefined:** When theme layer is empty (or theme name is 'default').\n     * * **object:** When theme name is not registered.\n     * @memberOf module:dynamicProperties\n     */\n    theme: {\n        enumerable: true,\n        get: function() {\n            return this.grid.getTheme();\n        },\n        set: function(theme) {\n            this.grid.applyTheme(theme);\n        }\n    },\n\n    wheelHFactor: {\n        enumerable: true,\n        get: function() {\n            return this.grid.sbHScroller.deltaXFactor;\n        },\n        set: function(factor) {\n            this.grid.sbHScroller.deltaXFactor = factor;\n        }\n    },\n\n    wheelVFactor: {\n        enumerable: true,\n        get: function() {\n            return this.grid.sbVScroller.deltaYFactor;\n        },\n        set: function(factor) {\n            this.grid.sbVScroller.deltaYFactor = factor;\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    subgrids: {\n        enumerable: true,\n        get: function() {\n            return this.var.subgrids;\n        },\n        set: function(subgrids) {\n            this.var.subgrids = subgrids.slice();\n\n            if (this.grid.behavior) {\n                this.grid.behavior.subgrids = subgrids;\n            }\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    features: {\n        enumerable: true,\n        get: function() {\n            return this.var.features;\n        },\n        set: function(features) {\n            this.var.features = features.slice();\n            if (this.grid.behavior) {\n                this.grid.behavior.initializeFeatureChain(features);\n                this.grid.allowEvents(this.grid.getRowCount());\n            }\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    gridRenderer: {\n        enumerable: true,\n        get: function() {\n            return this.var.gridRenderer;\n        },\n        set: function(rendererName) {\n            this.var.gridRenderer = rendererName;\n            this.grid.renderer.setGridRenderer(rendererName);\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    columnIndexes: {\n        enumerable: true,\n        get: function() {\n            return this.grid.behavior.getActiveColumns().map(function(column) {\n                return column.index;\n            });\n        },\n        set: function(columnIndexes) {\n            this.grid.behavior.setColumnOrder(columnIndexes);\n            this.grid.behavior.changed();\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    columnNames: {\n        enumerable: true,\n        get: function() {\n            return this.grid.behavior.getActiveColumns().map(function(column) {\n                return column.name;\n            });\n        },\n        set: function(columnNames) {\n            this.grid.behavior.setColumnOrderByName(columnNames);\n            this.grid.behavior.changed();\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    rows: {\n        enumerable: true,\n        get: getRowPropertiesBySubgridAndRowIndex,\n        set: function(rowsHash) {\n            if (rowsHash) {\n                setRowPropertiesBySubgridAndRowIndex.call(this, rowsHash);\n                this.grid.behavior.changed();\n            }\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    columns: {\n        enumerable: true,\n        get: getColumnPropertiesByColumnIndexOrName,\n        set: function(columnsHash) {\n            if (columnsHash) {\n                setColumnPropertiesByColumnIndexOrName.call(this, columnsHash);\n                this.grid.behavior.changed();\n            }\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    cells: {\n        enumerable: true,\n        get: getCellPropertiesByColumnNameAndRowIndex,\n        set: function(cellsHash) {\n            if (cellsHash) {\n                setCellPropertiesByColumnNameAndRowIndex.call(this, cellsHash);\n                this.grid.behavior.changed();\n            }\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    rowHeaderCheckboxes: {\n        enumerable: true,\n        get: function() {\n            return this.var.rowHeaderCheckboxes;\n        },\n        set: function(enabled) {\n            this.var.rowHeaderCheckboxes = enabled;\n            this.grid.renderer.resetRowHeaderColumnWidth();\n        }\n    },\n\n    /**\n     * @memberOf module:dynamicProperties\n     */\n    rowHeaderNumbers: {\n        enumerable: true,\n        get: function() {\n            return this.var.rowHeaderNumbers;\n        },\n        set: function(enabled) {\n            this.var.rowHeaderNumbers = enabled;\n            this.grid.renderer.resetRowHeaderColumnWidth();\n        }\n    },\n\n    /**\n     * Legacy property; now points to both `rowHeaderFeatures` props.\n     * @memberOf module:dynamicProperties\n     */\n    showRowNumbers: {\n        enumerable: false,\n        get: function() {\n            return this.rowHeaderCheckboxes || this.rowHeaderNumbers;\n        },\n        set: function(enabled) {\n            this.rowHeaderCheckboxes = this.rowHeaderNumbers = enabled;\n        }\n    },\n\n    // remove to expire warning:\n    doubleClickDelay: {\n        enumerable: true,\n        get: function() {\n            return this.var.doubleClickDelay;\n        },\n        set: function(delay) {\n            if (!warnedDoubleClickDelay) {\n                warnedDoubleClickDelay = true;\n                console.warn('The doubleClickDelay property has been deprecated as of v2.1.0. Setting this property no longer has any effect. Set double-click speed in your system\\'s mouse preferences. (This warning will be removed in a future release.)');\n            }\n            this.var.doubleClickDelay = delay;\n        }\n    },\n\n    /** @summary Grid line color.\n     * @desc This is a Legacy property. It is now implemented as a dynamic property accessor:\n     * * Getting its value returns the current value of the new (as of 2.1.0) {@link module:defaults.gridLinesHColor gridLinesHColor} property.\n     * * Setting its value sets {@link module:defaults.gridLinesHColor gridLinesHColor} and {@link module:defaults.gridLinesVColor gridLinesVColor}.\n     * * It is non-enumerable; it is not output with `grid.saveState()`; the accessed properties are output instead.\n     * @memberOf module:dynamicProperties\n     */\n    lineColor: {\n        get: function() { return this.gridLinesHColor; },\n        set: function(color) { this.gridLinesHColor = this.gridLinesVColor = color; }\n    },\n\n    /** @summary Grid line width.\n     * @desc This is a Legacy property. It is now implemented as a dynamic property accessor:\n     * * Getting its value returns the current value of the new (as of 2.1.0) {@link module:defaults.gridLinesHColor gridLinesHColor} property.\n     * * Setting its value sets {@link module:defaults.gridLinesHColor gridLinesHColor} and {@link module:defaults.gridLinesVColor gridLinesVColor}.\n     * * It is non-enumerable; it is not output with `grid.saveState()`; the accessed properties are output instead.\n     * @memberOf module:dynamicProperties\n     */\n    lineWidth: {\n        get: function() { return this.gridLinesHWidth; },\n        set: function(width) { this.gridLinesHWidth = this.gridLinesVWidth = width; }\n    },\n\n    gridBorder: getGridBorderDescriptor(),\n    gridBorderLeft: getGridBorderDescriptor('Left'),\n    gridBorderRight: getGridBorderDescriptor('Right'),\n    gridBorderTop: getGridBorderDescriptor('Top'),\n    gridBorderBottom: getGridBorderDescriptor('Bottom')\n};\n\n/**\n * @name module:dynamicProperties.columnProperties\n */\ndynamicPropertyDescriptors.columnProperties = dynamicPropertyDescriptors.columns;\n\n\nfunction getRowPropertiesBySubgridAndRowIndex() { // to be called with grid.properties as context\n    var subgrids = {};\n    var behavior = this.grid.behavior;\n    var defaultRowHeight = this.grid.properties.defaultRowHeight;\n    behavior.subgrids.forEach(function(dataModel) {\n        var key = dataModel.name || dataModel.type;\n        for (var rowIndex = 0, rowCount = dataModel.getRowCount(); rowIndex < rowCount; ++rowIndex) {\n            var rowProps = behavior.getRowProperties(rowIndex, undefined, dataModel);\n            if (rowProps) {\n                // create height mixin by invoking `height` getter\n                var height = { height: rowProps.height };\n                if (height.height === defaultRowHeight) {\n                    height = undefined;\n                }\n\n                // clone it and mix in height\n                rowProps = Object.assign({}, rowProps, height);\n\n                // only include if at least one defined prop\n                if (Object.getOwnPropertyNames(rowProps).find(definedProp)) {\n                    var subgrid = subgrids[key] || (subgrids[key] = {});\n                    subgrid[rowIndex] = rowProps;\n                }\n            }\n        }\n        function definedProp(key) { return rowProps[key] !== undefined; }\n    });\n    return subgrids;\n}\n\nfunction setRowPropertiesBySubgridAndRowIndex(rowsHash) { // to be called with grid.properties as context\n    var behavior = this.grid.behavior,\n        methodName = this.settingState ? 'setRowProperties' : 'addRowProperties';\n\n    Object.keys(rowsHash).forEach(function(subgridName) {\n        var subgrid = behavior.subgrids.lookup[subgridName];\n        if (subgrid) {\n            var subgridHash = rowsHash[subgridName];\n            Object.keys(subgridHash).forEach(function(rowIndex) {\n                var properties = subgridHash[rowIndex];\n                behavior[methodName](rowIndex, properties, subgrid);\n            });\n        }\n    });\n}\n\nfunction getColumnPropertiesByColumnIndexOrName() { // to be called with grid.properties as context\n    var columns = this.grid.behavior.getColumns(),\n        headerify = this.grid.headerify;\n    return columns.reduce(function(obj, column) {\n        var properties = Object.keys(column.properties).reduce(function(properties, key) {\n            switch (key) {\n                case 'preferredWidth': // not a public property\n                    break;\n                case 'header':\n                    if (headerify && column.properties.header === headerify(column.properties.name)) {\n                        break;\n                    }\n                    // fallthrough\n                default:\n                    properties[key] = column.properties[key];\n            }\n            return properties;\n        }, {});\n        if (Object.keys(properties).length) {\n            obj[column.name] = properties;\n        }\n        return obj;\n    }, {});\n}\n\nfunction setColumnPropertiesByColumnIndexOrName(columnsHash) { // to be called with grid.properties as context\n    this.grid.behavior.addAllColumnProperties(columnsHash, this.settingState);\n}\n\nfunction getCellPropertiesByColumnNameAndRowIndex() {\n    var behavior = this.grid.behavior,\n        columns = behavior.getColumns(),\n        subgrids = {};\n\n    behavior.subgrids.forEach(function(dataModel) {\n        var key = dataModel.name || dataModel.type;\n\n        for (var rowIndex = 0, rowCount = dataModel.getRowCount(); rowIndex < rowCount; ++rowIndex) {\n            columns.forEach(copyCellOwnProperties);\n        }\n\n        function copyCellOwnProperties(column) {\n            var properties = behavior.getCellOwnProperties(column.index, rowIndex, dataModel);\n            if (properties) {\n                var subgrid = subgrids[key] = subgrids[key] || {},\n                    row = subgrid[rowIndex] = subgrid[rowIndex] = {};\n                row[column.name] = Object.assign({}, properties);\n            }\n        }\n    });\n\n    return subgrids;\n}\n\nfunction setCellPropertiesByColumnNameAndRowIndex(cellsHash) { // to be called with grid.properties as context\n    var subgrids = this.grid.behavior.subgrids,\n        columns = this.grid.behavior.getColumns(),\n        methodName = this.settingState ? 'setCellProperties' : 'addCellProperties';\n\n    Object.keys(cellsHash).forEach(function(subgridName) {\n        var subgrid = subgrids.lookup[subgridName];\n        if (subgrid) {\n            var subgridHash = cellsHash[subgridName];\n            Object.keys(subgridHash).forEach(function(rowIndex) {\n                var columnProps = subgridHash[rowIndex];\n                Object.keys(columnProps).forEach(function(columnName) {\n                    var properties = columnProps[columnName];\n                    if (properties) {\n                        var column = columns.find(function(column) {\n                            return column.name === columnName;\n                        });\n                        if (column) {\n                            column[methodName](rowIndex, properties, subgrid);\n                        }\n                    }\n                });\n            });\n        }\n    });\n}\n\nfunction getGridBorderDescriptor(edge) {\n    var propName = 'gridBorder' + (edge || '');\n\n    return {\n        enumerable: true,\n        get: function() {\n            return this.var[propName];\n        },\n        set: function(border) {\n            this.var[propName] = border;\n\n            if (!edge) {\n                this.var.gridBorderLeft = this.var.gridBorderRight = this.var.gridBorderTop = this.var.gridBorderBottom = border;\n            }\n\n            this.grid.resetGridBorder(edge);\n        }\n    };\n}\n\nmodule.exports = dynamicPropertyDescriptors;\n","'use strict';\n\nvar Rectangle = require('rectangular').Rectangle;\n\n/*\n * The Hypergrid selection model defines a rectangle's bottom and right as inclusive rather than exclusive.\n * This definition works fine so long as it is used consistently. It does however throw off `Rectangle`'s\n * `width`, `height`, and `area` properties, all of which are getters which assume an exclusive model.\n * The following `SelectionModel` object extends (subclasses) `Rectangle` to correct this problem so that\n * those properties return accurate results.\n */\nfunction InclusiveRectangle(x, y, width, height) {\n    Rectangle.call(this, x, y, width - 1, height - 1);\n}\nInclusiveRectangle.prototype = Object.create(Rectangle.prototype, {\n    width: {\n        get: function() {\n            return this.extent.x + 1;\n        }\n    },\n    height: {\n        get: function() {\n            return this.extent.y + 1;\n        }\n    }\n});\n\nmodule.exports = InclusiveRectangle;\n","'use strict';\n\nvar bundleColumns = require('./bundle-columns');\nvar bundleRows = require('./bundle-rows');\n\n/** @summary Render the grid with consolidated row OR column rects.\n * @desc Paints all the cells of a grid, one column at a time.\n *\n * First, a background rect is drawn using the grid background color.\n *\n * Then, if there are any rows with their own background color _that differs from the grid background color,_ these are consolidated and the consolidated groups of row backgrounds are all drawn before iterating through cells. These row backgrounds get priority over column backgrounds.\n *\n * If there are no such row background rects to draw, the column rects are consolidated and drawn instead (again, before the cells). Note that these column rects are _not_ suitable for clipping overflow text from previous columns. If you have overflow text, either turn on clipping (big performance hit) or turn on one of the `truncateTextWithEllipsis` options.\n *\n * `try...catch` surrounds each cell paint in case a cell renderer throws an error.\n * The error message is error-logged to console AND displayed in cell.\n *\n * Each cell to be rendered is described by a {@link CellEvent} object. For performance reasons, to avoid constantly instantiating these objects, we maintain a pool of these. When the grid shape changes, we reset their coordinates by setting {@link CellEvent#reset|reset} on each.\n *\n * See also the discussion of clipping in {@link Renderer#paintCellsByColumns|paintCellsByColumns}.\n * @this {Renderer}\n * @param {CanvasRenderingContext2D} gc\n * @memberOf Renderer.prototype\n */\nfunction paintCellsByColumnsAndRows(gc) {\n    var grid = this.grid,\n        gridProps = grid.properties,\n        prefillColor, rowPrefillColors, gridPrefillColor = gridProps.backgroundColor,\n        cellEvent,\n        rowBundle, rowBundles,\n        columnBundle, columnBundles,\n        visibleColumns = this.visibleColumns,\n        visibleRows = this.visibleRows,\n        c, C = visibleColumns.length,\n        cLast = C - 1,\n        r, R = visibleRows.length,\n        pool = this.cellEventPool,\n        preferredWidth,\n        columnClip,\n        // clipToGrid,\n        viewWidth = C ? visibleColumns[C - 1].right : 0,\n        viewHeight = R ? visibleRows[R - 1].bottom : 0;\n\n    gc.clearRect(0, 0, this.bounds.width, this.bounds.height);\n\n    if (!C || !R) { return; }\n\n    if (gc.alpha(gridPrefillColor) > 0) {\n        gc.cache.fillStyle = gridPrefillColor;\n        gc.fillRect(0, 0, viewWidth, viewHeight);\n    }\n\n    if (this.gridRenderer.reset) {\n        this.resetAllGridRenderers();\n        this.gridRenderer.reset = false;\n        bundleRows.call(this, false);\n        bundleColumns.call(this, true);\n    } else if (this.gridRenderer.rebundle) {\n        this.gridRenderer.rebundle = false;\n        bundleColumns.call(this);\n    }\n\n    rowBundles = this.rowBundles;\n    if (rowBundles.length) {\n        rowPrefillColors = this.rowPrefillColors;\n        for (r = rowBundles.length; r--;) {\n            rowBundle = rowBundles[r];\n            gc.clearFill(0, rowBundle.top, viewWidth, rowBundle.bottom - rowBundle.top, rowBundle.backgroundColor);\n        }\n    } else {\n        for (columnBundles = this.columnBundles, c = columnBundles.length; c--;) {\n            columnBundle = columnBundles[c];\n            gc.clearFill(columnBundle.left, 0, columnBundle.right - columnBundle.left, viewHeight, columnBundle.backgroundColor);\n        }\n    }\n\n    // gc.clipSave(clipToGrid, 0, 0, viewWidth, viewHeight);\n\n    // For each column...\n    var p = 0;\n    this.visibleColumns.forEachWithNeg(function(vc, c) {\n\n        cellEvent = pool[p];\n        vc = cellEvent.visibleColumn;\n\n        if (!rowPrefillColors) {\n            prefillColor = cellEvent.column.properties.backgroundColor;\n        }\n\n        // Optionally clip to visible portion of column to prevent text from overflowing to right.\n        columnClip = vc.column.properties.columnClip;\n        gc.clipSave(columnClip || columnClip === null && c === cLast, 0, 0, vc.right, viewHeight);\n\n        // For each row of each subgrid (of each column)...\n        for (preferredWidth = r = 0; r < R; r++, p++) {\n            // if (!pool[p].disabled) {\n                if (rowPrefillColors) {\n                    prefillColor = rowPrefillColors[r];\n                }\n\n                try {\n                    preferredWidth = Math.max(preferredWidth, this._paintCell(gc, pool[p], prefillColor));\n                } catch (e) {\n                    this.renderErrorCell(e, gc, vc, pool[p].visibleRow);\n                }\n            // }\n        }\n\n        gc.clipRestore(columnClip);\n\n        cellEvent.column.properties.preferredWidth = Math.round(preferredWidth);\n    }, this);\n\n    // gc.clipRestore(clipToGrid);\n\n    this.paintGridlines(gc);\n}\n\npaintCellsByColumnsAndRows.key = 'by-columns-and-rows';\npaintCellsByColumnsAndRows.rebundle = true; // see rebundleGridRenderers\n\nmodule.exports = paintCellsByColumnsAndRows;\n","'use strict';\n\nfunction bundleRows(resetCellEvents) {\n    var gridProps = this.grid.properties,\n        vr, visibleRows = this.visibleRows,\n        r, R = visibleRows.length,\n        p, pool;\n\n    if (resetCellEvents) {\n        pool = this.cellEventPool;\n        for (p = 0, r = 0; r < R; r++) {\n            vr = visibleRows[r];\n            this.visibleColumns.forEachWithNeg(function(vc) { // eslint-disable-line no-loop-func\n                p++;\n                // reset pool member to reflect coordinates of cell in newly shaped grid\n                pool[p].reset(vc, vr);\n            });\n        }\n    }\n\n    var bundle, rowBundles = [],\n        gridPrefillColor = gridProps.backgroundColor,\n        rowStripes = gridProps.rowStripes,\n        rowPrefillColors = Array(R),\n        stripe, backgroundColor;\n\n    for (r = 0; r < R; r++) {\n        vr = visibleRows[r]; // first cell in row r\n        stripe = vr.subgrid.isData && rowStripes && rowStripes[vr.rowIndex % rowStripes.length];\n        backgroundColor = rowPrefillColors[r] = stripe && stripe.backgroundColor || gridPrefillColor;\n        if (bundle && bundle.backgroundColor === backgroundColor) {\n            bundle.bottom = vr.bottom;\n        } else if (backgroundColor === gridPrefillColor) {\n            bundle = undefined;\n        } else {\n            bundle = {\n                backgroundColor: backgroundColor,\n                top: vr.top,\n                bottom: vr.bottom\n            };\n            rowBundles.push(bundle);\n        }\n    }\n\n    this.rowBundles = rowBundles;\n    this.rowPrefillColors = rowPrefillColors;\n}\n\nmodule.exports = bundleRows;\n","'use strict';\n\n/* eslint-env node, browser */\n\n(function (module) {  // eslint-disable-line no-unused-expressions\n\n    // This closure supports NodeJS-less client side includes with <script> tags. See https://github.com/joneit/mnm.\n\n    /**\n     * @constructor RangeSelectionModel\n     *\n     * @desc This object models selection of \"cells\" within an abstract single-dimensional matrix.\n     *\n     * Disjoint selections can be built with calls to the following methods:\n     * * {@link RangeSelectionModel#select|select(start, stop)} - Add a range to the matrix.\n     * * {@link RangeSelectionModel#deselect|deselect(start, stop)} - Remove a range from the matrix.\n     *\n     * Two more methods are available:\n     * * Test a cell to see if it {@link RangeSelectionModel#isSelected|isSelected(cell)}\n     * * {@link RangeSelectionModel#clear|clear()} the matrix\n     *\n     * Internally, the selection is run-length-encoded. It is therefore a \"sparse\" matrix\n     * with undefined bounds. A single data property called `selection` is an array that\n     * contains all the \"runs\" (ranges) of selected cells albeit in no particular order.\n     * This property should not normally need to be accessed directly.\n     *\n     * Note: This object should be instantiated with the `new` keyword.\n     *\n     * @returns {RangeSelectionModel} Self (i.e., `this` object).\n     */\n    function RangeSelectionModel() {\n        /**\n         * @name selection\n         * @type {Array.Array.number}\n         * @summary Unordered list of runs.\n         * @desc A \"run\" is defined as an Array(2) where:\n         * * element [0] is the beginning of the run\n         * * element [1] is the end of the run (inclusive) and is always >= element [0]\n         * The order of the runs within is undefined.\n         * @memberOf RangeSelectionModel.prototype\n         * @abstract\n         */\n        this.selection = [];\n\n        //we need to be able to go back in time\n        //the states field\n        this.states = [];\n\n        //clone and store my current state\n        //so we can unwind changes if need be\n        this.storeState = function () {\n            var sels = this.selection;\n            var state = [];\n            var copy;\n            for (var i = 0; i < sels.length; i++) {\n                copy = [].concat(sels[i]);\n                state.push(copy);\n            }\n            this.states.push(state);\n        };\n    }\n\n    RangeSelectionModel.prototype = {\n\n        /**\n         * @summary Add a contiguous run of points to the selection.\n         * @desc Insert a new run into `this.selection`.\n         * The new run will be merged with overlapping and adjacent runs.\n         *\n         * The two parameters may be given in either order.\n         * The start and stop elements in the resulting run will however always be ordered.\n         * (However, note that the order of the runs within `this.selection` is itself always unordered.)\n         *\n         * Note that `this.selection` is updated in place, preserving validity of any external references.\n         * @param {number} start - Start of run. May be greater than `stop`.\n         * @param {number} [stop=stop] - End of run (inclusive). May be less than `start`.\n         * @returns {RangeSelectionModel} Self (i.e., `this`), for chaining.\n         * @memberOf RangeSelectionModel.prototype\n         */\n        select: function (start, stop) {\n            this.storeState();\n            var run = makeRun(start, stop);\n            var splicer = [0, 1];\n            this.selection.forEach(function (each) {\n                if (overlaps(each, run) || abuts(each, run)) {\n                    run = merge(each, run);\n                } else {\n                    splicer.push(each);\n                }\n            });\n            splicer.push(run);\n            splicer[1] = this.selection.length;\n            this.selection.splice.apply(this.selection, splicer); // update in place to preserve external references\n            return this;\n        },\n\n        /**\n         * @summary Remove a contiguous run of points from the selection.\n         * @desc Truncate and/or remove run(s) from `this.selection`.\n         * Removing part of existing runs will (correctly) shorten them or break them into two fragments.\n         *\n         * The two parameters may be given in either order.\n         *\n         * Note that `this.selection` is updated in place, preserving validity of any external references.\n         * @param {number} start - Start of run. May be greater than `stop`.\n         * @param {number} [stop=stop] - End of run (inclusive). May be less than `start`.\n         * @returns {RangeSelectionModel} Self (i.e., `this`), for chaining.\n         * @memberOf RangeSelectionModel.prototype\n         */\n        deselect: function (start, stop) {\n            var run = makeRun(start, stop);\n            var splicer = [0, 0];\n            this.selection.forEach(function (each) {\n                if (overlaps(each, run)) {\n                    var pieces = subtract(each, run);\n                    splicer = splicer.concat(pieces);\n                } else {\n                    splicer.push(each);\n                }\n            });\n            splicer[1] = this.selection.length;\n            this.selection.splice.apply(this.selection, splicer); // update in place to preserve external references\n            return this;\n        },\n\n        /**\n         * @summary Empties `this.selection`, effectively removing all runs.\n         * @returns {RangeSelectionModel} Self (i.e., `this`), for chaining.\n         * @memberOf RangeSelectionModel.prototype\n         */\n        clear: function () {\n            this.states.length = 0;\n            this.selection.length = 0;\n            return this;\n        },\n\n        clearMostRecentSelection: function () {\n            if (this.states.length === 0) {\n                return;\n            }\n            this.selection = this.states.pop();\n        },\n\n        /**\n         * @summary Determines if the given `cell` is selected.\n         * @returns {boolean} `true` iff given `cell` is within any of the runs in `this.selection`.\n         * @param {number} cell - The cell to test for inclusion in the selection.\n         * @memberOf RangeSelectionModel.prototype\n         */\n        isSelected: function (cell) {\n            return this.selection.some(function (each) {\n                return each[0] <= cell && cell <= each[1];\n            });\n        },\n\n        isEmpty: function (){\n            return this.selection.length === 0;\n        },\n\n        /**\n         * @summary Return the indexes that are selected.\n         * @desc Return the indexes that are selected.\n         * @returns {Array.Array.number}\n         * @memberOf RangeSelectionModel.prototype\n         */\n        getSelections: function (){\n            var result = [];\n            this.selection.forEach(function (each) {\n                for (var i = each[0]; i <= each[1]; i++) {\n                    result.push(i);\n                }\n            });\n            result.sort(function (a, b){\n                return a - b;\n            });\n            return result;\n        }\n\n    };\n\n    /**\n     * @private\n     * @summary Preps `start` and `stop` params into order array\n     * @function makeRun\n     * @desc Utility function called by both `select()` and `deselect()`.\n     * @param {number|number[]} start - Start of run. if array, `start` and `stop` are taken from first two elements.\n     * @param {number} [stop=start] - End of run (inclusive).\n     */\n    function makeRun(start, stop) {\n        return (\n            start instanceof Array\n                ? makeRun.apply(this, start) // extract params from given array\n                : stop === undefined\n                ? [ start, start ] // single param is a run that stops where it starts\n                : start <= stop\n                ? [ start, stop ]\n                : [ stop, start ] // reverse descending params into ascending order\n        );\n    }\n\n    /**\n     * @private\n     * @function overlaps\n     * @returns {boolean} `true` iff `run1` overlaps `run2`\n     * @summary Comparison operator that determines if given runs overlap with one another.\n     * @desc Both parameters are assumed to be _ordered_ arrays.\n     *\n     * Overlap is defined to include the case where one run completely contains the other.\n     *\n     * Note: This operator is commutative.\n     * @param {number[]} run1 - first run\n     * @param {number[]} run2 - second run\n     */\n    function overlaps(run1, run2) {\n        return (\n            run1[0] <= run2[0] && run2[0] <= run1[1] || // run2's start is within run1 OR...\n            run1[0] <= run2[1] && run2[1] <= run1[1] || // run2's stop is within run1 OR...\n            run2[0] <  run1[0] && run1[1] <  run2[1]    // run2 completely contains run1\n        );\n    }\n\n    /**\n     * @private\n     * @function abuts\n     * @summary Comparison operator that determines if given runs are consecutive with one another.\n     * @returns {boolean} `true` iff `run1` is consecutive with `run2`\n     * @desc Both parameters are assumed to be _ordered_ arrays.\n     *\n     * Note: This operator is commutative.\n     * @param {number[]} run1 - first run\n     * @param {number[]} run2 - second run\n     */\n    function abuts(run1, run2) {\n        return (\n            run1[1] === run2[0] - 1 || // run1's top immediately precedes run2's start OR...\n            run2[1] === run1[0] - 1    // run2's top immediately precedes run1's start\n        );\n    }\n\n    /**\n     * @private\n     * @function subtract\n     * @summary Operator that subtracts one run from another.\n     * @returns {Array.Array.number} The remaining pieces of `minuend` after removing `subtrahend`.\n     * @desc Both parameters are assumed to be _ordered_ arrays.\n     *\n     * This function _does not assumes_ that `overlap()` has already been called with the same runs and has returned `true`.\n     *\n     * Returned array contains 0, 1, or 2 runs which are the portion(s) of `minuend` that do _not_ include `subtrahend`.\n     *\n     * Caveat: This operator is *not* commutative.\n     * @param {number[]} minuend - a run from which to \"subtract\" `subtrahend`\n     * @param {number[]} subtrahend - a run to \"subtracted\" from `minuend`\n     */\n    function subtract(minuend, subtrahend) {\n        var m0 = minuend[0];\n        var m1 = minuend[1];\n        var s0 = subtrahend[0];\n        var s1 = subtrahend[1];\n        var result = [];\n\n        if (s0 <= m0 && s1 < m1) {\n            //subtrahend extends before minuend: return remaining piece of `minuend`\n            result.push([s1 + 1, m1]);\n        } else if (s0 > m0 && s1 >= m1) {\n            //subtrahend extends after minuend: return remaining piece of `minuend`\n            result.push([m0, s0 - 1]);\n        } else if (m0 < s0 && s1 < m1) {\n            //completely inside: return 2 smaller pieces resulting from the hole\n            result.push([m0, s0 - 1]);\n            result.push([s1 + 1, m1]);\n        } else if (s1 < m0 || s0 > m1) {\n            // completely outside: return `minuend` untouched\n            result.push(minuend);\n        }\n\n        //else subtrahend must completely overlap minuend so return no pieces\n\n        return result;\n    }\n\n\n    // Local utility functions\n\n    /**\n     * @private\n     * @function merge\n     * @summary Operator that merges given runs.\n     * @returns {number[]} A single merged run.\n     * @desc Both parameters are assumed to be _ordered_ arrays.\n     *\n     * The runs are assumed to be overlapping or adjacent to one another.\n     *\n     * Note: This operator is commutative.\n     * @param {number[]} run1 - a run to merge with `run2`\n     * @param {number[]} run2 - a run to merge with `run1`\n     */\n    function merge(run1, run2) {\n        var min = Math.min(Math.min.apply(Math, run1), Math.min.apply(Math, run2));\n        var max = Math.max(Math.max.apply(Math, run1), Math.max.apply(Math, run2));\n        return [min, max];\n    }\n\n    // Interface\n    module.exports = RangeSelectionModel;\n})(\n    typeof module === 'object' && module || (window.RangeSelectionModel = {}),\n    typeof module === 'object' && module.exports || (window.RangeSelectionModel.exports = {})\n) || (\n    typeof module === 'object' || (window.RangeSelectionModel = window.RangeSelectionModel.exports)\n);\n\n/* About the above IIFE:\n * This file is a \"modified node module.\" It functions as usual in Node.js *and* is also usable directly in the browser.\n * 1. Node.js: The IIFE is superfluous but innocuous.\n * 2. In the browser: The IIFE closure serves to keep internal declarations private.\n * 2.a. In the browser as a global: The logic in the actual parameter expressions + the post-invocation expression\n * will put your API in `window.RangeSelectionModel`.\n * 2.b. In the browser as a module: If you predefine a `window.module` object, the results will be in `module.exports`.\n * The bower component `mnm` makes this easy and also provides a global `require()` function for referencing your module\n * from other closures. In either case, this works with both NodeJs-style export mechanisms -- a single API assignment,\n * `module.exports = yourAPI` *or* a series of individual property assignments, `module.exports.property = property`.\n *\n * Before the IIFE runs, the actual parameter expressions are executed:\n * 1. If `window` object undefined, we're in NodeJs so assume there is a `module` object with an `exports` property\n * 2. If `window` object defined, we're in browser\n * 2.a. If `module` object predefined, use it\n * 2.b. If `module` object undefined, create a `RangeSelectionModel` object\n *\n * After the IIFE returns:\n * Because it always returns undefined, the expression after the || will execute:\n * 1. If `window` object undefined, then we're in NodeJs so we're done\n * 2. If `window` object defined, then we're in browser\n * 2.a. If `module` object predefined, we're done; results are in `moudule.exports`\n * 2.b. If `module` object undefined, redefine`RangeSelectionModel` to be the `RangeSelectionModel.exports` object\n */\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nvar Point = require('rectangular').Point;\n\nvar Base = require('../Base');\nvar Column = require('./Column');\nvar cellEventFactory = require('../lib/cellEventFactory');\nvar fields = require('../lib/fields');\nvar featureRegistry = require('../features');\nvar ArrayDecorator = require('synonomous');\nvar assignOrDelete = require('../lib/assignOrDelete');\nvar dispatchGridEvent = require('../lib/dispatchGridEvent');\n\n\nvar noExportProperties = [\n    'columnHeader',\n    'columnHeaderColumnSelection',\n    'filterProperties',\n    'rowHeader',\n    'rowHeaderRowSelection',\n    'rowNumbersProperties',\n    'treeColumnProperties',\n    'treeColumnPropertiesColumnSelection',\n];\n\n/**\n * @mixes cellProperties.behaviorMixin\n * @mixes rowProperties.mixin\n * @mixes subgrids.mixin\n * @mixes dataModel.mixin\n * @constructor\n * @desc A controller for the data model.\n * > This constructor (actually `initialize`) will be called upon instantiation of this class or of any class that extends from this class. See {@link https://github.com/joneit/extend-me|extend-me} for more info.\n * @param {Hypergrid} grid\n * @param {object} [options] - _(Passed to {@link Behavior#reset reset})._\n * @param {DataModel} [options.dataModel] - _Per {@link Behavior#reset reset}._\n * @param {object} [options.metadata] - _Per {@link Behavior#reset reset}._\n * @param {function} [options.DataModel=require('datasaur-local')] - _Per {@link Behavior#reset reset}._\n * @param {function|object[]} [options.data] - _Per {@link Behavior#setData setData}._\n * @param {function|menuItem[]} [options.schema] - _Per {@link Behavior#setData setData}._\n * @param {subgridSpec[]} [options.subgrids=this.grid.properties.subgrids] - _Per {@link Behavior#setData setData}._\n * @param {boolean} [options.apply=true] - _Per {@link Behavior#setData setData}._\n * @abstract\n */\nvar Behavior = Base.extend('Behavior', {\n\n    initialize: function(grid, options) {\n        /**\n         * @type {Hypergrid}\n         * @memberOf Behavior#\n         */\n        this.grid = grid;\n\n        this.initializeFeatureChain();\n\n        this.grid.behavior = this;\n        this.reset(options);\n    },\n\n    /**\n     * @desc Create the feature chain - this is the [chain of responsibility](http://c2.com/cgi/wiki?ChainOfResponsibilityPattern) pattern.\n     * @param {Hypergrid} [grid] Unnecesary legacy parameter. May be omitted.\n     * @memberOf Behavior#\n     */\n    initializeFeatureChain: function(grid) {\n        var constructors;\n\n        /**\n         * @summary Controller chain of command.\n         * @desc Each feature is linked to the next feature.\n         * @type {Feature}\n         * @memberOf Behavior#\n         */\n        this.featureChain = undefined;\n\n        /**\n         * @summary Hash of instantiated features by class names.\n         * @desc Built here but otherwise not in use.\n         * @type {object}\n         * @memberOf Behavior#\n         */\n        this.featureMap = {};\n\n        this.featureRegistry = this.featureRegistry || featureRegistry;\n\n        if (this.grid.properties.features) {\n            var getFeatureConstructor = this.featureRegistry.get.bind(this.featureRegistry);\n            constructors = this.grid.properties.features.map(getFeatureConstructor);\n        } else if (this.features) {\n            constructors = this.features;\n            warnBehaviorFeaturesDeprecation.call(this);\n        }\n\n        constructors.forEach(function(FeatureConstructor, i) {\n            var feature = new FeatureConstructor;\n\n            this.featureMap[feature.$$CLASS_NAME] = feature;\n\n            if (i) {\n                this.featureChain.setNext(feature);\n            } else {\n                this.featureChain = feature;\n            }\n        }, this);\n\n        if (this.featureChain) {\n            this.featureChain.initializeOn(this.grid);\n        }\n    },\n\n    features: [], // override in implementing class; or provide feature names in grid.properties.features; else no features\n\n    /**\n     * Reset the behavior.\n     * @param {object} [options] - _Same as constructor's `options`._<br>\n     * _Passed to {@link Behavior#resetDataModel resetDataModel} and {@link Behavior#setData setData} (both of which see)._\n     * @memberOf Behavior#\n     */\n    reset: function(options) {\n        var dataModelChanged = this.resetDataModel(options);\n\n        if (dataModelChanged) {\n            // recreate `CellEvent` class so it can update its cached `grid`, `behavior`, and `dataModel` properties\n            this.CellEvent = cellEventFactory(this.grid);\n        }\n\n        this.scrollPositionX = this.scrollPositionY = 0;\n\n        this.rowPropertiesPrototype = Object.create(this.grid.properties,\n            require('./rowProperties').rowPropertiesPrototypeDescriptors);\n\n        this.clearColumns();\n        this.createColumns();\n\n        /**\n         * Ordered list of subgrids to render.\n         * @type {subgridSpec[]}\n         * @memberOf Hypergrid#\n         */\n        this.subgrids = options && options.subgrids ||\n            !dataModelChanged && this.subgrids ||\n            this.grid.properties.subgrids;\n\n        this.setData(options);\n    },\n\n    /**\n     * @memberOf Local#\n     * @description Set the header labels.\n     * @param {string[]|object} headers - The header labels. One of:\n     * * _If an array:_ Must contain all headers in column order.\n     * * _If a hash:_ May contain any headers, keyed by field name, in any order.\n     */\n    setHeaders: function(headers) {\n        if (headers instanceof Array) {\n            // Reset all headers\n            var allColumns = this.allColumns;\n            headers.forEach(function(header, index) {\n                allColumns[index].header = header; // setter updates header in both column and data source objects\n            });\n        } else if (typeof headers === 'object') {\n            // Adjust just the headers in the hash\n            this.allColumns.forEach(function(column) {\n                if (headers[column.name]) {\n                    column.header = headers[column.name];\n                }\n            });\n        }\n    },\n\n    /**\n     * @summary Set grid data.\n     * @desc Fails silently if `dataRows` and `options.data` are both undefined.\n     *\n     * @param {function|object[]} [dataRows=options.data] - Array of uniform data row objects or function returning same.\n     *\n     * @param {object} [options] - _(Promoted to first argument position when `dataRows` omitted.)_\n     *\n     * @param {function|object[]} [options.data] - The data when `dataRows` undefined.\n     *\n     * @param {function|menuItem[]} [options.schema] - May be:\n     * * A schema array\n     * * A function returning same. Called at filter reset time with behavior as context.\n     * * Omit to allow the data model to generate a basic schema from its data.\n     *\n     * @param {boolean} [options.apply=true] Apply data transformations to the new data.\n     *\n     * @memberOf Behavior#\n     */\n    setData: function(dataRows, options) {\n        if (!(Array.isArray(dataRows) || typeof dataRows === 'function')) {\n            options = dataRows;\n            dataRows = options && options.data;\n        }\n\n        dataRows = this.unwrap(dataRows);\n\n        if (dataRows === undefined) {\n            return;\n        }\n\n        if (!Array.isArray(dataRows)) {\n            throw 'Expected data to be an array (of data row objects).';\n        }\n\n        options = options || {};\n\n        var schema = this.unwrap(options.schema);\n\n        // Inform interested data models of data.\n        this.subgrids.forEach(function(dataModel) {\n            dataModel.setData(dataRows, schema);\n        });\n\n        if (this.grid.cellEditor) {\n            this.grid.cellEditor.cancelEditing();\n        }\n\n        if (options.apply || options.apply === undefined) { // default is `true`\n            this.reindex();\n        }\n\n        this.grid.allowEvents(this.getRowCount());\n    },\n\n    get renderedColumnCount() {\n        return this.grid.renderer.visibleColumns.length;\n    },\n\n    get renderedRowCount() {\n        return this.grid.renderer.visibleRows.length;\n    },\n\n    get leftMostColIndex() {\n        return this.grid.properties.showRowNumbers ? this.rowColumnIndex : (this.hasTreeColumn() ? this.treeColumnIndex : 0);\n    },\n\n    clearColumns: function() {\n        var schema = this.schema,\n            tc = this.treeColumnIndex,\n            rc = this.rowColumnIndex;\n\n        this.columnsCreated = false;\n\n        schema[tc] = schema[tc] || {};\n        schema[tc].index = tc;\n        if (schema[tc].name === undefined) { schema[tc].name = this.treeColumnNameDefault; }\n        if (schema[tc].header === undefined) { schema[tc].header = this.treeColumnHeaderDefault; }\n\n        schema[rc] = schema[rc] || {};\n        schema[rc].index = rc;\n        if (schema[rc].name === undefined) { schema[rc].name = this.rowColumnNameDefault; }\n        if (schema[rc].header === undefined) { schema[rc].header = ''; }\n\n        /**\n         * @type {Column[]}\n         * @memberOf Behavior#\n         */\n        this.columns = this.grid.decorateColumnArray();\n\n        /**\n         * @type {Column[]}\n         * @memberOf Behavior#\n         */\n        this.allColumns = this.grid.decorateColumnArray();\n\n        this.allColumns[tc] = this.columns[tc] = this.newColumn(schema[tc]);\n        this.allColumns[rc] = this.columns[rc] = this.newColumn(schema[rc]);\n\n        this.columns[tc].properties.propClassLayers = this.columns[rc].properties.propClassLayers = this.grid.properties.propClassLayersMap.NO_ROWS;\n\n        // Signal the renderer to size the now-reset handle column before next render\n        this.grid.renderer.resetRowHeaderColumnWidth();\n    },\n\n    getActiveColumn: function(x) {\n        return this.columns[x];\n    },\n\n    /**\n     * The \"grid index\" of an active column given a \"data index\" (number), column name (string), or column object\n     * @param {Column|number} columnOrIndex\n     * @returns {undefined|number} The grid index of the column or undefined if column not in grid.\n     * @memberOf Hypergrid#\n     */\n    getActiveColumnIndex: function(columnOrIndexOrName) {\n        var value = columnOrIndexOrName instanceof Column ? columnOrIndexOrName.index : columnOrIndexOrName,\n            key = typeof index === 'number' ? 'index' : 'name';\n\n        return this.columns.findIndex(function(column) { return column[key] === value; });\n    },\n\n    getColumn: function(x) {\n        return this.allColumns[x];\n    },\n\n    newColumn: function(options) {\n        return new Column(this, options);\n    },\n\n    addColumn: function(options) {\n        var column = this.newColumn(options),\n            arrayDecorator = new ArrayDecorator,\n            synonyms = arrayDecorator.getSynonyms(column.name);\n\n        this.columns.push(column);\n        arrayDecorator.decorateObject(this.columns, synonyms, column);\n\n        this.allColumns.push(column);\n        arrayDecorator.decorateObject(this.allColumns, synonyms, column);\n\n        return column;\n    },\n\n    createColumns: function(realImplementation) {\n        var schema = this.dataModel.getSchema();\n\n        fields.normalizeSchema(schema);\n        fields.decorateSchema(schema);\n        fields.decorateColumnSchema(schema, this.grid.properties.headerify);\n\n        this.createDataRowProxy();\n\n        this.clearColumns();\n\n        if (realImplementation) {\n            realImplementation.call(this);\n        }\n\n        this.columnsCreated = true;\n\n        this.changed();\n\n        dispatchGridEvent.call(this.grid, 'fin-hypergrid-columns-created');\n    },\n\n    createDataRowProxy: function() {\n        // concrete implementation here if behavior doesn't implement its own getRow()\n    },\n\n    getColumnWidth: function(x) {\n        var column = (x !== this.treeColumnIndex || this.hasTreeColumn()) && this.getActiveColumn(x);\n        return column ? column.getWidth() : 0;\n    },\n\n    /**\n     * @param {Column|number} columnOrIndex - The column or active column index.\n     * @param width\n     * @memberOf Hypergrid#\n     */\n    setColumnWidth: function(columnOrIndex, width) {\n        var column = columnOrIndex >= -2 ? // relation operator tests for number (index) vs column (object)\n            this.getActiveColumn(columnOrIndex) : columnOrIndex;\n        column.setWidth(width);\n        this.stateChanged();\n    },\n\n    /**\n     * @memberOf Behavior#\n     */\n    reindex: function() {\n        this.dataModel.reindex();\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc utility function to empty an object of its members\n     * @param {object} obj - the object to empty\n     * @param {boolean} [exportProps]\n     * * `undefined` (omitted) - delete *all* properties\n     * * **falsy** - delete *only* the export properties\n     * * **truthy** - delete all properties *except* the export properties\n     */\n    clearObjectProperties: function(obj, exportProps) {\n        for (var key in obj) {\n            if (\n                obj.hasOwnProperty(key) && (\n                    exportProps === undefined ||\n                    !exportProps && noExportProperties.indexOf(key) >= 0 ||\n                    exportProps && noExportProperties.indexOf(key) < 0\n                )\n            ) {\n                delete obj[key];\n            }\n        }\n    },\n\n    //this is effectively a clone, with certain things removed....\n    getState: function() {\n        var copy = JSON.parse(JSON.stringify(this.grid.properties));\n        this.clearObjectProperties(copy.columnProperties, false);\n        return copy;\n    },\n    /**\n     * @memberOf Behavior#\n     * @desc clear all table state\n     */\n    clearState: function() {\n        this.grid.clearState();\n        this.createColumns();\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc Restore this table to a previous state.\n     * See the [memento pattern](http://c2.com/cgi/wiki?MementoPattern).\n     * @param {Object} properties - assignable grid properties\n     */\n    setState: function(properties) {\n        this.addState(properties, true);\n    },\n\n    /**\n     *\n     * @param {Object} properties - assignable grid properties\n     * @param {boolean} [settingState] - Clear properties object before assignments.\n     */\n    addState: function(properties, settingState) {\n        if (settingState) {\n            this.clearState();\n        }\n\n        var gridProps = this.grid.properties;\n\n        gridProps.settingState = settingState;\n        assignOrDelete(gridProps, properties);\n        delete gridProps.settingState;\n\n        this.reindex();\n    },\n\n    /**\n     * @summary Sets properties for active columns.\n     * @desc Sets multiple columns' properties from elements of given array or collection. Keys may be column indexes or column names. The properties collection is cleared first. Falsy elements are ignored.\n     * @param {object[]|undefined} columnsHash - If undefined, this call is a no-op.\n     */\n    setAllColumnProperties: function(columnsHash) {\n        this.addAllColumnProperties(columnsHash, true);\n    },\n\n    /**\n     * @summary Adds properties for multiple columns.\n     * @desc Adds . The properties collection is optionally cleared first. Falsy elements are ignored.\n     * @param {object[]|undefined} columnsHash - If undefined, this call is a no-op.\n     * @param {boolean} [settingState] - Clear columns' properties objects before copying properties.\n     */\n    addAllColumnProperties: function(columnsHash, settingState) {\n        if (!columnsHash) {\n            return;\n        }\n\n        var columns = this.grid.behavior.getColumns();\n\n        Object.keys(columnsHash).forEach(function(key) {\n            var column = columns[key];\n            if (column) {\n                column.addProperties(columnsHash[key], settingState);\n            }\n        });\n    },\n\n    setColumnOrder: function(columnIndexes) {\n        if (Array.isArray(columnIndexes)){\n            var columns = this.columns,\n                allColumns = this.allColumns,\n                arrayDecorator = new ArrayDecorator;\n\n            // avoid recreating the `columns` array object to keep refs valid; just empty it\n            columns.length = 0;\n            var tc = this.treeColumnIndex.toString(), rc = this.rowColumnIndex.toString();\n            Object.keys(columns).forEach(function(key) {\n                switch (key) {\n                    case tc:\n                    case rc:\n                        break;\n                    default:\n                        delete columns[key];\n                }\n            });\n\n            columnIndexes.forEach(function(index) {\n                columns.push(allColumns[index]);\n            });\n\n            arrayDecorator.decorateArray(columns);\n        }\n    },\n\n    setColumnOrderByName: function(columnNames) {\n        if (Array.isArray(columnNames)) {\n            var allColumns = this.allColumns;\n            this.setColumnOrder(columnNames.map(function(name) { return allColumns[name].index; }));\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc Rebuild the column order indexes\n     * @param {Array} columnIndexes - list of column indexes\n     * @param {Boolean} [silent=false] - whether to trigger column changed event\n     */\n    setColumnIndexes: function(columnIndexes, silent) {\n        this.grid.properties.columnIndexes = columnIndexes;\n        if (!silent) {\n            this.grid.fireSyntheticOnColumnsChangedEvent();\n        }\n    },\n\n    /**\n     * @summary Show inactive column(s) or move active column(s).\n     *\n     * @desc Adds one or several columns to the \"active\" column list.\n     *\n     * @param {boolean} [isActiveColumnIndexes=false] - Which list `columnIndexes` refers to:\n     * * `true` - The active column list. This can only move columns around within the active column list; it cannot add inactive columns (because it can only refer to columns in the active column list).\n     * * `false` - The full column list (as per column schema array). This inserts columns from the \"inactive\" column list, moving columns that are already active.\n     *\n     * @param {number|number[]} columnIndexes - Column index(es) into list as determined by `isActiveColumnIndexes`. One of:\n     * * **Scalar column index** - Adds single column at insertion point.\n     * * **Array of column indexes** - Adds multiple consecutive columns at insertion point.\n     *\n     * _This required parameter is promoted left one arg position when `isActiveColumnIndexes` omitted._\n     *\n     * @param {number} [referenceIndex=this.columns.length] - Insertion point, _i.e.,_ the element to insert before. A negative values skips the reinsert. Default is to insert new columns at end of active column list.\n     *\n     * _Promoted left one arg position when `isActiveColumnIndexes` omitted._\n     *\n     * @param {boolean} [allowDuplicateColumns=false] - Unless true, already visible columns are removed first.\n     *\n     * _Promoted left one arg position when `isActiveColumnIndexes` omitted + one position when `referenceIndex` omitted._\n     *\n     * @memberOf Behavior#\n     */\n    showColumns: function(isActiveColumnIndexes, columnIndexes, referenceIndex, allowDuplicateColumns) {\n        // Promote args when isActiveColumnIndexes omitted\n        if (typeof isActiveColumnIndexes === 'number' || Array.isArray(isActiveColumnIndexes)) {\n            allowDuplicateColumns = referenceIndex;\n            referenceIndex = columnIndexes;\n            columnIndexes = isActiveColumnIndexes;\n            isActiveColumnIndexes = false;\n        }\n\n        var activeColumns = this.columns,\n            sourceColumnList = isActiveColumnIndexes ? activeColumns : this.allColumns;\n\n        // Nest scalar index\n        if (typeof columnIndexes === 'number') {\n            columnIndexes = [columnIndexes];\n        }\n\n        var newColumns = columnIndexes\n            .map(function(index) { return sourceColumnList[index]; }) // Look up columns using provided indexes\n            .filter(function(column) { return column; }); // Remove any undefined columns\n\n        // Default insertion point is end (i.e., before (last+1)th element)\n        if (typeof referenceIndex !== 'number') {\n            allowDuplicateColumns = referenceIndex; // assume reference index was omitted when not a number\n            referenceIndex = activeColumns.length;\n        }\n\n        // Remove already visible columns and adjust insertion point\n        if (!allowDuplicateColumns) {\n            newColumns.forEach(function(column) {\n                var i = activeColumns.indexOf(column);\n                if (i >= 0) {\n                    activeColumns.splice(i, 1);\n                    if (referenceIndex > i) {\n                        --referenceIndex;\n                    }\n                }\n            });\n        }\n\n        // Insert the new columns at the insertion point\n        if (referenceIndex >= 0) {\n            activeColumns.splice.apply(activeColumns, [referenceIndex, 0].concat(newColumns));\n        }\n\n        this.grid.properties.columnIndexes = activeColumns.map(function(column) { return column.index; });\n    },\n\n    /**\n     * @summary Hide active column(s).\n     * @desc Removes one or several columns from the \"active\" column list.\n     * @param {boolean} [isActiveColumnIndexes=false] - Which list `columnIndexes` refers to:\n     * * `true` - The active column list.\n     * * `false` - The full column list (as per column schema array).\n     * @param {number|number[]} columnIndexes - Column index(es) into list as determined by `isActiveColumnIndexes`. One of:\n     * * **Scalar column index** - Adds single column at insertion point.\n     * * **Array of column indexes** - Adds multiple consecutive columns at insertion point.\n     *\n     * _This required parameter is promoted left one arg position when `isActiveColumnIndexes` omitted._\n     * @memberOf Behavior#\n     */\n    hideColumns: function(isActiveColumnIndexes, columnIndexes) {\n        var args = Array.prototype.slice.call(arguments); // Convert to array so we can add an argument (element)\n        args.push(-1); // Remove only; do not reinsert.\n        this.showColumns.apply(this, args);\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc fetch the value for a property key\n     * @returns {*} The value of the given property.\n     * @param {string} key - a property name\n     */\n    resolveProperty: function(key) {\n        // todo: remove when we remove the deprecated grid.resolveProperty\n        return this.grid.resolveProperty(key);\n    },\n\n    lookupFeature: function(key) {\n        return this.featureMap[key];\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @return {number} The width of the fixed column area in the hypergrid.\n     */\n    getFixedColumnsWidth: function() {\n        var count = this.getFixedColumnCount(),\n            columnWidth,\n            total = 0,\n            i = this.leftMostColIndex,\n            gridProps = this.grid.properties,\n            contentBox = gridProps.boxSizing !== 'border-box',\n            gridLinesVWidth = gridProps.gridLinesVWidth;\n\n        for (; i < count; i++) {\n            columnWidth = this.getColumnWidth(i);\n            if (columnWidth) {\n                total += columnWidth;\n                if (contentBox) {\n                    total += gridLinesVWidth;\n                }\n            }\n        }\n\n        // add in fixed rule thickness excess\n        if (gridProps.fixedLinesVWidth) {\n            total += gridProps.fixedLinesHWidth - gridLinesVWidth;\n        }\n\n        return total;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc This exists to support \"floating\" columns.\n     * @return {number} The total width of the fixed columns area.\n     */\n    getFixedColumnsMaxWidth: function() {\n        return this.getFixedColumnsWidth();\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate setting the cursor up the feature chain of responsibility\n     * @param {Hypergrid} grid\n     */\n    setCursor: function(grid) {\n        grid.updateCursor();\n        this.featureChain.setCursor(grid);\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling mouse move to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onMouseMove: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleMouseMove(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling tap to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onClick: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleClick(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling tap to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onContextMenu: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleContextMenu(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling wheel moved to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onWheelMoved: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleWheelMoved(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling mouse up to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onMouseUp: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleMouseUp(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling mouse drag to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onMouseDrag: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleMouseDrag(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling key down to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onKeyDown: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleKeyDown(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling key up to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onKeyUp: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleKeyUp(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling double click to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    onDoubleClick: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleDoubleClick(grid, event);\n            this.setCursor(grid);\n        }\n    },\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling mouse down to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDown: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleMouseDown(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc delegate handling mouse exit to the feature chain of responsibility\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseExit: function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleMouseExit(grid, event);\n            this.setCursor(grid);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc I've been notified that the behavior has changed.\n     */\n    changed: function() { this.grid.behaviorChanged(); },\n\n    /**\n     * @memberOf Behavior#\n     * @desc The dimensions of the grid data have changed. You've been notified.\n     */\n    shapeChanged: function() { this.grid.behaviorShapeChanged(); },\n\n    /**\n     * @memberOf Behavior#\n     * @desc The dimensions of the grid data have changed. You've been notified.\n     */\n    stateChanged: function() { this.grid.behaviorStateChanged(); },\n\n    /**\n     * @memberOf Behavior#\n     * @return {boolean} Can re-order columns.\n     */\n    isColumnReorderable: function() {\n        return this.deprecated('isColumnReorderable()', 'grid.properties.columnsReorderable', '2.1.3');\n    },\n\n    /**\n     * @param {index} x - Data x coordinate.\n     * @return {Object} The properties for a specific column.\n     * @memberOf Behavior#\n     */\n    getColumnProperties: function(x) {\n        var column = (x !== this.treeColumnIndex || this.hasTreeColumn()) && this.getColumn(x);\n        return column && column.properties;\n    },\n\n    /**\n     * @param {index} x - Data x coordinate.\n     * @return {Object} The properties for a specific column.\n     * @memberOf Behavior#\n     */\n    setColumnProperties: function(x, properties) {\n        var column = this.getColumn(x);\n        if (!column) {\n            throw 'Expected column.';\n        }\n        var result = Object.assign(column.properties, properties);\n        this.changed();\n        return result;\n    },\n\n    /**\n     * Clears all cell properties of given column or of all columns.\n     * @param {number} [x] - Omit for all columns.\n     * @memberOf Behavior#\n     */\n    clearAllCellProperties: function(x) {\n        var X;\n\n        if (x === undefined) {\n            x = 0;\n            X = this.columns.length;\n        } else {\n            X = x + 1;\n        }\n\n        for (; x < X; x++) {\n            var column = this.getColumn(x);\n            if (column) {\n                column.clearAllCellProperties();\n            }\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @return {string[]} All the currently hidden column header labels.\n     */\n    getHiddenColumnDescriptors: function() {\n        var tableState = this.grid.properties;\n        var indexes = tableState.columnIndexes;\n        var labels = [];\n        var columnCount = this.getActiveColumnCount();\n        for (var i = 0; i < columnCount; i++) {\n            if (indexes.indexOf(i) === -1) {\n                var column = this.getActiveColumn(i);\n                labels.push({\n                    id: i,\n                    header: column.header,\n                    field: column.name\n                });\n            }\n        }\n        return labels;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @return {number} The number of fixed columns.\n     */\n    getFixedColumnCount: function() {\n        return this.grid.properties.fixedColumnCount;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc set the number of fixed columns\n     * @param {number} n - the integer count of how many columns to be fixed\n     */\n    setFixedColumnCount: function(n) {\n        this.grid.properties.fixedColumnCount = n;\n    },\n\n    /**\n     * @summary The number of \"fixed rows.\"\n     * @desc The number of (non-scrollable) rows preceding the (scrollable) data subgrid.\n     * @memberOf Behavior#\n     * @return {number} The sum of:\n     * 1. All rows of all subgrids preceding the data subgrid.\n     * 2. The first `fixedRowCount` rows of the data subgrid.\n     */\n    getFixedRowCount: function() {\n        return (\n            this.getHeaderRowCount() +\n            this.grid.properties.fixedRowCount\n        );\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc Set the number of fixed rows, which includes (top to bottom order):\n     * 1. The header rows\n     *    1. The header labels row (optional)\n     *    2. The filter row (optional)\n     *    3. The top total rows (0 or more)\n     * 2. The non-scrolling rows (externally called \"the fixed rows\")\n     *\n     * @returns {number} Sum of the above or 0 if none of the above are in use.\n     *\n     * @param {number} The number of rows.\n     */\n    setFixedRowCount: function(n) {\n        this.grid.properties.fixedRowCount = n;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc a dnd column has just been dropped, we've been notified\n     */\n    endDragColumnNotification: function() {},\n\n    /**\n     * @memberOf Behavior#\n     * @return {null} the cursor at a specific x,y coordinate\n     * @param {number} x - the x coordinate\n     * @param {number} y - the y coordinate\n     */\n    getCursorAt: function(x, y) {\n        return null;\n    },\n\n    /**\n     * Number of _visible_ columns.\n     * @memberOf Behavior#\n     * @return {number} The total number of columns.\n     */\n    getActiveColumnCount: function() {\n        return this.columns.length;\n    },\n\n    /**\n     * @summary Column alignment of given grid column.\n     * @desc One of:\n     * * `'left'`\n     * * `'center'`\n     * * `'right'`\n     *\n     * Cascades to grid.\n     * @memberOf Behavior#\n     * @desc Quietly set the horizontal scroll position.\n     * @param {number} x - The new position in pixels.\n     */\n    setScrollPositionX: function(x) {\n        /**\n         * @memberOf Behavior#\n         * @type {number}\n         */\n        this.scrollPositionX = x;\n    },\n\n    getScrollPositionX: function() {\n        return this.scrollPositionX;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc Quietly set the vertical scroll position.\n     * @param {number} y - The new position in pixels.\n     */\n    setScrollPositionY: function(y) {\n        /**\n         * @memberOf Behavior#\n         * @type {number}\n         */\n        this.scrollPositionY = y;\n    },\n\n    getScrollPositionY: function() {\n        return this.scrollPositionY;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @return {cellEditor} The cell editor for the cell at the given coordinates.\n     * @param {CellEvent} editPoint - The grid cell coordinates.\n     */\n    getCellEditorAt: function(event) {\n        return event.isDataColumn && event.column.getCellEditorAt(event);\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @return {boolean} `true` if we should highlight on hover\n     * @param {boolean} isColumnHovered - the column is hovered or not\n     * @param {boolean} isRowHovered - the row is hovered or not\n     */\n    highlightCellOnHover: function(isColumnHovered, isRowHovered) {\n        return isColumnHovered && isRowHovered;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc this function is a hook and is called just before the painting of a cell occurs\n     * @param {Point} cell\n     */\n    set cellPropertiesPrePaintNotification(cell) {\n        throw new this.HypergridError('cellPropertiesPrePaintNotification has been deprecated as of v3.0.0. Code to inspect or mutate the render config object should be moved to the getCell hook.');\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc swap src and tar columns\n     * @param {number} src - column index\n     * @param {number} tar - column index\n     */\n    swapColumns: function(source, target) {\n        var columns = this.columns;\n        var tmp = columns[source];\n        columns[source] = columns[target];\n        columns[target] = tmp;\n        this.changed();\n    },\n\n    convertViewPointToDataPoint: function(unscrolled) {\n        return new Point(\n            this.getActiveColumn(unscrolled.x).index,\n            unscrolled.y\n        );\n    },\n\n    hasTreeColumn: function(columnIndex) {\n        return false;\n    },\n\n    getSelectionMatrixFunction: function(selectedRows) {\n        return function() {\n            return null;\n        };\n    },\n\n    getRowHeaderColumn: function() {\n        return this.allColumns[this.rowColumnIndex];\n    },\n\n    getTreeColumn: function() {\n        return this.allColumns[this.treeColumnIndex];\n    },\n\n    autosizeAllColumns: function() {\n        this.checkColumnAutosizing(true);\n        this.changed();\n    },\n\n    checkColumnAutosizing: function(force) {\n        var autoSized = this.autoSizeRowNumberColumn(force) || this.autoSizeTreeColumn(force);\n\n        this.allColumns.findWithNeg(function(column) {\n            autoSized = column.checkColumnAutosizing(force) || autoSized;\n        });\n\n        return autoSized;\n    },\n\n    autoSizeRowNumberColumn: function(force) {\n        if (this.grid.properties.showRowNumbers && this.grid.properties.rowNumberAutosizing) {\n            return this.getRowHeaderColumn().checkColumnAutosizing(force);\n        }\n    },\n\n    autoSizeTreeColumn: function(force) {\n        if (this.grid.properties.showTreeColumn && this.grid.properties.treeColumnAutosizing) {\n            return this.getTreeColumn().checkColumnAutosizing(force);\n        }\n    },\n\n    getColumns: function() {\n        return this.allColumns;\n    },\n\n    getActiveColumns: function() {\n        return this.columns;\n    },\n\n    getHiddenColumns: function() {\n        var visible = this.columns;\n        var all = this.allColumns;\n        var hidden = [];\n        for (var i = 0; i < all.length; i++) {\n            if (visible.indexOf(all[i]) === -1) {\n                hidden.push(all[i]);\n            }\n        }\n        hidden.sort(function(a, b) {\n            return a.header < b.header;\n        });\n        return hidden;\n    },\n\n    getSelectedRows: function() {\n        return this.grid.selectionModel.getSelectedRows();\n    },\n\n    getSelectedColumns: function() {\n        return this.grid.selectionModel.getSelectedColumns();\n    },\n\n    getSelections: function() {\n        return this.grid.selectionModel.getSelections();\n    },\n\n    getIndexedData: function() {\n        return this.deprecated('getIndexedData()', 'getData()', '3.0.0');\n    }\n});\n\n\n// tree and row number column defaults; define indexes as immutable (i.e., !writable)\nObject.defineProperties(Behavior.prototype, {\n    treeColumnIndex: { value: -1 },\n    treeColumnNameDefault: { value: 'Tree', writable: true },\n    treeColumnHeaderDefault: { value: 'Tree', writable: true },\n\n    rowColumnIndex: { value: -2 },\n    rowColumnNameDefault: { value: 'RowHeader', writable: true }\n});\n\n\nfunction warnBehaviorFeaturesDeprecation() {\n    var featureNames = [], unregisteredFeatures = [], n = 0;\n\n    this.features.forEach(function(FeatureConstructor) {\n        var className = FeatureConstructor.prototype.$$CLASS_NAME || FeatureConstructor.name,\n            featureName = className || 'feature' + n++;\n\n        // build list of feature names\n        featureNames.push(featureName);\n\n        // build list of unregistered features\n        if (!this.featureRegistry.get(featureName, true)) {\n            var constructorName = FeatureConstructor.name || FeatureConstructor.prototype.$$CLASS_NAME || 'FeatureConstructor' + n,\n                params = [];\n            if (!className) {\n                params.push('\\'' + featureName + '\\'');\n            }\n            params.push(constructorName);\n            unregisteredFeatures.push(params.join(', '));\n        }\n    }, this);\n\n    if (featureNames.length) {\n        var sampleCode = 'Hypergrid.defaults.features = [\\n' + join('\\t\\'', featureNames, '\\',\\n') + '];';\n\n        if (unregisteredFeatures.length) {\n            sampleCode += '\\n\\nThe following custom features are unregistered and will need to be registered prior to behavior instantiation:\\n\\n' +\n                join('Features.add(', unregisteredFeatures, ');\\n');\n        }\n\n        if (n) {\n            sampleCode += '\\n\\n(You should provide meaningful names for your custom features rather than the generated names above.)';\n        }\n\n        console.warn('`grid.behavior.features` (array of feature constructors) has been deprecated as of version 2.1.0 in favor of `grid.properties.features` (array of feature names). Remove `features` array from your behavior and add `features` property to your grid state object (or Hypergrid.defaults), e.g.:\\n\\n' + sampleCode);\n    }\n}\n\nfunction join(prefix, array, suffix) {\n    return prefix + array.join(suffix + prefix) + suffix;\n}\n\n\n// synonyms\n\n/**\n * Synonym of {@link Behavior#reindex}.\n * @name applyAnalytics\n * @deprecated\n * @memberOf Behavior#\n */\nBehavior.prototype.applyAnalytics = Behavior.prototype.reindex;\n\n\n// mix-ins\nBehavior.prototype.mixIn(require('./rowProperties').mixin);\nBehavior.prototype.mixIn(require('./gridCellProperties').mixin);\nBehavior.prototype.mixIn(require('./dataModel').mixin);\nBehavior.prototype.mixIn(require('./subgrids').mixin);\n\n\nmodule.exports = Behavior;\n","'use strict';\n\n/**\n * Behavior.js mixes this module into its prototype.\n * @mixin\n */\nexports.mixin = {\n    /**\n     * @summary The total height of the \"fixed rows.\"\n     * @desc The total height of all (non-scrollable) rows preceding the (scrollable) data subgrid.\n     * @memberOf Behavior#\n     * @return {number} The height in pixels of the fixed rows area of the hypergrid, the total height of:\n     * 1. All rows of all subgrids preceding the data subgrid.\n     * 2. The first `fixedRowCount` rows of the data subgrid.\n     */\n    getFixedRowsHeight: function() {\n        var subgrid, isData, r, R,\n            subgrids = this.subgrids,\n            height = 0,\n            gridProps = this.grid.properties,\n            contentBox = gridProps.boxSizing !== 'border-box',\n            gridLinesHWidth = gridProps.gridLinesHWidth;\n\n        for (var i = 0; i < subgrids.length && !isData; ++i) {\n            subgrid = subgrids[i];\n            isData = subgrid.isData;\n            R = isData ? gridProps.fixedRowCount : subgrid.getRowCount();\n            for (r = 0; r < R; ++r) {\n                height += this.getRowHeight(r, subgrid);\n                if (contentBox) {\n                    height += gridLinesHWidth;\n                }\n            }\n            // add in fixed rule thickness excess\n            if (isData && gridProps.fixedLinesHWidth) {\n                height += gridProps.fixedLinesHWidth - gridLinesHWidth;\n            }\n        }\n\n        return height;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @param {number|CellEvent} yOrCellEvent - Data row index local to `dataModel`; or a `CellEvent` object.\n     * @param {boolean} [prototype] - Prototype for a new properties object when one does not already exist. If you don't define this and one does not already exist, this call will return `undefined`.\n     * Typical defined value is `null`, which creates a plain object with no prototype, or `Object.prototype` for a more \"natural\" object.\n     * _(Required when 3rd param provided.)_\n     * @param {DataModel} [dataModel=this.dataModel] - This is the subgrid. You only need to provide the subgrid when it is not the data subgrid _and_ you did not give a `CellEvent` object in the first param (which already knows what subgrid it's in).\n     * @returns {object|undefined} The row properties object which will be one of:\n     * * object - existing row properties object or new row properties object created from `prototype`; else\n     * * `false` - row found but no existing row properties object and `prototype` was not defined; else\n     * * `undefined` - no such row\n     */\n    getRowProperties: function(yOrCellEvent, prototype, dataModel) {\n        if (typeof yOrCellEvent === 'object') {\n            dataModel = yOrCellEvent.subgrid;\n            yOrCellEvent = yOrCellEvent.dataCell.y;\n        }\n\n        var metadata = (dataModel || this.dataModel).getRowMetadata(yOrCellEvent, prototype === undefined ? undefined : null);\n        return metadata && (metadata.__ROW || prototype !== undefined && (metadata.__ROW = Object.create(prototype)));\n    },\n\n    /**\n     * Reset the row properties in its entirety to the given row properties object.\n     * @memberOf Behavior#\n     * @param {number|CellEvent} yOrCellEvent - Data row index local to `dataModel`; or a `CellEvent` object.\n     * @param {object|undefined} properties - The new row properties object. If `undefined`, this call is a no-op.\n     * @param {DataModel} [dataModel=this.dataModel] - This is the subgrid. You only need to provide the subgrid when it is not the data subgrid _and_ you did not give a `CellEvent` object in the first param (which already knows what subgrid it's in).\n     */\n    setRowProperties: function(yOrCellEvent, properties, dataModel) {\n        if (!properties) {\n            return;\n        }\n\n        if (typeof yOrCellEvent === 'object') {\n            dataModel = yOrCellEvent.subgrid;\n            yOrCellEvent = yOrCellEvent.dataCell.y;\n        }\n\n        var metadata = (dataModel || this.dataModel).getRowMetadata(yOrCellEvent, null);\n        if (metadata) {\n            metadata.__ROW = Object.create(this.rowPropertiesPrototype);\n            this.addRowProperties(yOrCellEvent, properties, dataModel, metadata.__ROW);\n            this.stateChanged();\n        }\n    },\n\n    /**\n     * Sets a single row property on a specific individual row.\n     * @memberOf Behavior#\n     * @param {number|CellEvent} yOrCellEvent - Data row index local to `dataModel`; or a `CellEvent` object.\n     * @param {string} key - The property name.\n     * @param value - The new property value.\n     * @param {DataModel} [dataModel=this.dataModel] - This is the subgrid. You only need to provide the subgrid when it is not the data subgrid _and_ you did not give a `CellEvent` object in the first param (which already knows what subgrid it's in).\n     */\n    setRowProperty: function(yOrCellEvent, key, value, dataModel) {\n        var rowProps;\n        var isHeight = (key === 'height');\n\n        if (value !== undefined) {\n            rowProps = this.getRowProperties(yOrCellEvent, this.rowPropertiesPrototype, dataModel);\n            rowProps[key] = value;\n        } else {\n            // only try to undefine key if row props object exists; no point in creating it just to delete a non-existant key\n            rowProps = this.getRowProperties(yOrCellEvent, undefined, dataModel);\n            if (rowProps) {\n                delete rowProps[isHeight ? '_height' : key];\n            }\n        }\n\n        if (isHeight) {\n            this.shapeChanged();\n        } else {\n            this.stateChanged();\n        }\n    },\n\n    /**\n     * Add all the properties in the given row properties object to the row properties.\n     * @memberOf Behavior#\n     * @param {number|CellEvent} yOrCellEvent - Data row index local to `dataModel`; or a `CellEvent` object.\n     * @param {object|undefined} properties - An object containing new property values(s) to assign to the row properties. If `undefined`, this call is a no-op.\n     * @param {DataModel} [dataModel=this.dataModel] - This is the subgrid. You only need to provide the subgrid when it is not the data subgrid _and_ you did not give a `CellEvent` object in the first param (which already knows what subgrid it's in).\n     */\n    addRowProperties: function(yOrCellEvent, properties, dataModel, rowProps) {\n        if (!properties) {\n            return;\n        }\n\n        var isHeight, hasHeight;\n\n        rowProps = rowProps || this.getRowProperties(yOrCellEvent, this.rowPropertiesPrototype, dataModel);\n\n        if (rowProps) {\n            Object.keys(properties).forEach(function(key) {\n                var value = properties[key];\n                if (value !== undefined) {\n                    rowProps[key] = value;\n                } else {\n                    isHeight = key === 'height';\n                    delete rowProps[isHeight ? '_height' : key];\n                    hasHeight = hasHeight || isHeight;\n                }\n            });\n\n            if (hasHeight) {\n                this.shapeChanged();\n            } else {\n                this.stateChanged();\n            }\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @param {number} yOrCellEvent - Data row index local to `dataModel`.\n     * @param {DataModel} [dataModel=this.dataModel]\n     * @returns {number} The row height in pixels.\n     */\n    getRowHeight: function(yOrCellEvent, dataModel) {\n        var rowProps = this.getRowProperties(yOrCellEvent, undefined, dataModel);\n        return rowProps && rowProps.height || this.grid.properties.defaultRowHeight;\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc set the pixel height of a specific row\n     * @param {number} yOrCellEvent - Data row index local to dataModel.\n     * @param {number} height - pixel height\n     * @param {DataModel} [dataModel=this.dataModel]\n     */\n    setRowHeight: function(yOrCellEvent, height, dataModel) {\n        this.setRowProperty(yOrCellEvent, 'height', height, dataModel);\n    }\n};\n\n\nexports.rowPropertiesPrototypeDescriptors = {\n    height: {\n        enumerable: true,\n        get: function() {\n            return this._height || this.defaultRowHeight;\n        },\n        set: function(height) {\n            height = Math.max(5, Math.ceil(height));\n            if (isNaN(height)) {\n                height = undefined;\n            }\n            if (height !== this._height) {\n                if (!height) {\n                    delete this._height;\n                } else {\n                    // Define `_height` as non-enumerable so won't be included in output of saveState.\n                    // (Instead the `height` getter is explicitly invoked and the result is included.)\n                    Object.defineProperty(this, '_height', { value: height, configurable: true });\n                }\n                this.grid.behaviorStateChanged();\n            }\n        }\n    }\n};\n","/* eslint-env browser */\n\n'use strict';\n\nvar DatasaurBase = require('datasaur-base');\n\n/** @typedef {object} columnSchemaObject\n * @property {string} name - The required column name.\n * @property {string} [header] - An override for derived header\n * @property {function} [calculator] - A function for a computed column. Undefined for normal data columns.\n * @property {string} [type] - Used for sorting when and only when comparator not given.\n * @property {object} [comparator] - For sorting, both of following required:\n * @property {function} comparator.asc - ascending comparator\n * @property {function} comparator.desc - descending comparator\n */\n\n\n/**\n * @param {object} [options]\n * @param {object[]} [options.data]\n * @param {object[]} [options.schema]\n * @constructor\n */\nvar DatasaurLocal = DatasaurBase.extend('DatasaurLocal',  {\n\n    initialize: function(datasaur, options) {\n        this.reset();\n    },\n\n    reset: function() {\n        /**\n         * @summary The array of column schema objects.\n         * @name schema\n         * @type {columnSchemaObject[]}\n         * @memberOf DatasaurLocal#\n         */\n        this.schema = [];\n\n        /**\n         * @summary The array of uniform data objects.\n         * @name data\n         * @type {object[]}\n         * @memberOf DatasaurLocal#\n         */\n        this.data = [];\n    },\n\n    /**\n     * Establish new data and schema.\n     * If no data provided, data will be set to 0 rows.\n     * If no schema provided AND no previously set schema, new schema will be derived from data.\n     * @param {object[]} [data=[]] - Array of uniform objects containing the grid data.\n     * @param {columnSchemaObject[]} [schema=[]]\n     * @memberOf DatasaurLocal#\n     */\n    setData: function(data, schema) {\n        /**\n         * @summary The array of uniform data objects.\n         * @name data\n         * @type {object[]}\n         * @memberOf DatasaurLocal#\n         */\n        this.data = data || [];\n\n        if (schema) {\n            this.setSchema(schema);\n        } else if (this.data.length && !this.schema.length) {\n            this.setSchema([]);\n        }\n\n        this.dispatchEvent('fin-hypergrid-data-loaded');\n    },\n\n    /**\n     * @see {@link https://fin-hypergrid.github.io/3.0.0/doc/dataModelAPI#getSchema}\n     * @memberOf DatasaurLocal#\n     */\n    getSchema:  function(){\n        return this.schema;\n    },\n    /**\n     * @see {@link https://fin-hypergrid.github.io/3.0.0/doc/dataModelAPI#setSchema}\n     * @memberOf DatasaurLocal#\n     */\n    setSchema: function(newSchema){\n        if (!newSchema.length) {\n            var dataRow = this.getFirstRow();\n            if (dataRow) {\n                newSchema = Object.keys(dataRow);\n            }\n        }\n\n        this.schema = newSchema;\n        this.dispatchEvent('fin-hypergrid-schema-loaded');\n    },\n\n    /**\n     * @summary Find first extant AND defined element.\n     * @desc Uses for...in to find extant rows plus a truthiness test to return only a defined row.\n     * @returns {dataRow|undefined} Returns undefined if there are no such rows.\n     */\n    getFirstRow: function() {\n        for (var i in this.data) {\n            if (this.data[i]) {\n                return this.data[i];\n            }\n        }\n    },\n\n    /**\n     * @param y\n     * @returns {dataRowObject}\n     * @memberOf DatasaurLocal#\n     */\n    getRow: function(y) {\n        return this.data[y];\n    },\n\n    /**\n     * Update or blank row in place.\n     *\n     * _Note parameter order is the reverse of `addRow`._\n     * @param {number} y\n     * @param {object} [dataRow] - if omitted or otherwise falsy, row renders as blank\n     * @memberOf DatasaurLocal#\n     */\n    setRow: function(y, dataRow) {\n        this.data[y] = dataRow || undefined;\n    },\n\n    /**\n     * @see {@link https://fin-hypergrid.github.io/3.0.0/doc/dataModelAPI#getRowMetadata}\n     * @memberOf DatasaurLocal#\n     */\n    getRowMetadata: function(y, prototype) {\n        var dataRow = this.data[y];\n        return dataRow && (dataRow.__META || (prototype !== undefined && (dataRow.__META = Object.create(prototype))));\n    },\n\n    /**\n     * @see {@link https://fin-hypergrid.github.io/3.0.0/doc/dataModelAPI#setRowMetadata}\n     * @memberOf DatasaurLocal#\n     */\n    setRowMetadata: function(y, metadata) {\n        var dataRow = this.data[y];\n        if (dataRow) {\n            if (metadata) {\n                dataRow.__META = metadata;\n            } else {\n                delete dataRow.__META;\n            }\n        }\n        return !!dataRow;\n    },\n\n    /**\n     * Insert or append a new row.\n     *\n     * _Note parameter order is the reverse of `setRow`._\n     * @param {object} dataRow\n     * @param {number} [y=Infinity] - The index of the new row. If `y` >= row count, row is appended to end; otherwise row is inserted at `y` and row indexes of all remaining rows are incremented.\n     * @memberOf DatasaurLocal#\n     */\n    addRow: function(y, dataRow) {\n        if (arguments.length === 1) {\n            dataRow = arguments[0];\n            y = undefined;\n        }\n        if (y === undefined || y >= this.getRowCount()) {\n            this.data.push(dataRow);\n        } else {\n            this.data.splice(y, 0, dataRow);\n        }\n        this.dispatchEvent('fin-hypergrid-data-shape-changed');\n    },\n\n    /**\n     * Rows are removed entirely and no longer render.\n     * Indexes of all remaining rows are decreased by `rowCount`.\n     * @param {number} y\n     * @param {number} [rowCount=1]\n     * @returns {dataRowObject[]}\n     * @memberOf DatasaurLocal#\n     */\n    delRow: function(y, rowCount) {\n        var rows = this.data.splice(y, rowCount === undefined ? 1 : rowCount);\n        if (rows.length) {\n            this.dispatchEvent('fin-hypergrid-data-shape-changed');\n        }\n        return rows;\n    },\n\n    /**\n     * @see {@link https://fin-hypergrid.github.io/3.0.0/doc/dataModelAPI#getValue}\n     * @memberOf DatasaurLocal#\n     */\n    getValue: function(x, y) {\n        var row = this.data[y];\n        if (!row) {\n            return null;\n        }\n        return row[this.schema[x].name];\n    },\n\n    /**\n     * @see {@link https://fin-hypergrid.github.io/3.0.0/doc/dataModelAPI#setValue}\n     * @memberOf DatasaurLocal#\n     */\n    setValue: function(x, y, value) {\n        this.data[y][this.schema[x].name] = value;\n    },\n\n    /**\n     * @see {@link https://fin-hypergrid.github.io/3.0.0/doc/dataModelAPI#getRowCount}\n     * @memberOf DatasaurLocal#\n     */\n    getRowCount: function() {\n        return this.data.length;\n    },\n\n    /**\n     * @see {@link https://fin-hypergrid.github.io/3.0.0/doc/dataModelAPI#getColumnCount}\n     * @memberOf DatasaurLocal#\n     */\n    getColumnCount: function() {\n        return this.schema.length;\n    }\n});\n\nmodule.exports = DatasaurLocal;\n","'use strict';\n\n/**\n * @namespace dataModelEventHandlers\n * @desc These handlers are called by {@link module:decorators.dispatchDataModelEvent dataModel.dispatchEvent}.\n *\n * (Hypergrid registers itself with the data model by calling `dataModel.addListener`. Both `addListener` and `dispatchEvent` are optional API. If the data model lacks `addListener`, Hypergrid inserts a bound version of `dispatchEvent` directly into the data model.)\n *\n * They perform some Hypergrid housekeeping chores before (and possibly after) optionally re-emiting the event as a standard\n * Hypergrid event (to the `<canvas>` element).\n *\n * All the built-in data model events re-emit their events (all non-cancelable).\n *\n * #### Coding patterns\n * These handlers should return a boolean if they re-emit the event as a grid event themselves, when they have chores to perform post-re-emission. If they don't, they should return `undefined` which signals the caller (`dataModel.dispatchEvent`) to re-emit it as a grid event as a final step for the handler.\n *\n * Given the above, there are four typical coding patterns for these handlers:\n * 1. Perform chores with no event re-emission:\n * ```\n * Chores();\n * return true; // (or any defined value) signals caller not to re-emit the event\n * ```\n * 2. First perform chores; then re-emit the event as a grid event:\n * ```\n * Chores();\n * return undefined; // (or omit) signals caller to re-emit the event for us\n * ```\n * 3. First perform some pre-re-emit chores (optional); then re-emit the event as a _non-cancelable_ grid event; then perform remaining chores:\n * ```\n * optionalPreReemitChores();\n * var dispatchGridEvent = require('../../lib/dispatchGridEvent.js');\n * dispatchGridEvent.call(this, event.type, event); // non-cancelable\n * remainingChores();\n * return true; // signals caller that we've already re-emitted the event and it was not canceled\n * ```\n * 3. First perform some pre-re-emit chores (optional); then re-emit the event as a _cancelable_ grid event; then perform remaining chores conditionally [iff](https://en.wikipedia.org/wiki/If_and_only_if) not canceled (_important:_ note the `true` in the following):\n * ```\n * optionalPreReemitChores();\n * if (dispatchGridEvent.call(this, event.type, true, event)) { // `true` here means cancelable\n *     conditionalChores();\n *     return true; // signals caller that we've already re-emitted the event (which was not canceled)\n * } else {\n *     return false; // signals caller that we've already re-emitted the event (which was canceled)\n * }\n * ```\n */\nmodule.exports = {\n    /**\n     * _See the data model API page for event semantics (link below)._\n     * @param {NormalizedDataModelEvent} event\n     * @returns {undefined|boolean} Result of re-emitted event or `undefined` if event not re-emitted.\n     * @see {@link DataModel#event:fin-hypergrid-schema-loaded}\n     * @memberOf dataModelEventHandlers\n     */\n    'fin-hypergrid-schema-loaded': function(event) {\n        this.behavior.createColumns();\n    },\n\n    /**\n     * _See the data model API page for event semantics (link below)._\n     * @param {NormalizedDataModelEvent} event\n     * @returns {undefined|boolean} Result of re-emitted event or `undefined` if event not re-emitted.\n     * @see {@link DataModel#event:fin-hypergrid-data-loaded}\n     * @memberOf dataModelEventHandlers\n     */\n    'fin-hypergrid-data-loaded': function(event) {\n        this.repaint();\n    },\n\n    /**\n     * _See the data model API page for event semantics (link below)._\n     * @param {NormalizedDataModelEvent} event\n     * @returns {undefined|boolean} Result of re-emitted event or `undefined` if event not re-emitted.\n     * @see {@link DataModel#event:fin-hypergrid-data-shape-changed}\n     * @memberOf dataModelEventHandlers\n     */\n    'fin-hypergrid-data-shape-changed': function(event) {\n        this.behaviorShapeChanged();\n    },\n\n    /**\n     * _See the data model API page for event semantics (link below)._\n     * @param {NormalizedDataModelEvent} event\n     * @returns {undefined|boolean} Result of re-emitted event or `undefined` if event not re-emitted.\n     * @see {@link DataModel#event:fin-hypergrid-data-prereindex}\n     * @memberOf dataModelEventHandlers\n     */\n    'fin-hypergrid-data-prereindex': function(event) {\n        this.stashRowSelections();\n        this.stashColumnSelections();\n    },\n\n    /**\n     * _See the data model API page for event semantics (link below)._\n     * @param {{type}} event\n     * @returns {undefined|boolean} Result of re-emitted event or `undefined` if event not re-emitted.\n     * @see {@link DataModel#event:fin-hypergrid-data-postreindex}\n     * @memberOf dataModelEventHandlers\n     */\n    'fin-hypergrid-data-postreindex': function(event) {\n        this.selectionModel.reset();\n        this.unstashRowSelections();\n        this.unstashColumnSelections();\n        this.behaviorShapeChanged();\n    }\n};\n","'use strict';\n\n// `columnEnum` et al, have been deprecated as of 3.0.0 in favor of accessing column schema\n// through .schema, .columns, and .allColumns, all of which now sport self-referential dictionaries.\n// To finally remove, delete this file and all lines using `_columnEnum`\n\nvar ArrayDecorator = require('synonomous');\nvar transformers = require('synonomous/transformers');\n\nvar warned = {};\n\nfunction warnColumnEnumDeprecation(method, msg) {\n    if (!warned[method]) {\n        console.warn('.' + method + ' has been deprecated as of v3.0.0. (Will be removed in a future release.) ' + (msg || ''));\n        warned[method] = true;\n    }\n}\n\nexports.mixin = {\n    columnEnumSynchronize: function() {\n        this._columnEnumKey = this._columnEnumKey || 'toAllCaps';\n\n        var columnEnum = this._columnEnum || (this._columnEnum = {}),\n            allColumns = this.allColumns,\n            arrayDecorator = new ArrayDecorator({ transformations: [this._columnEnumKey] }),\n            dict = arrayDecorator.decorateArray(allColumns.slice());\n\n        dict.length = 0;\n        Object.keys(dict).reduce(function(columnEnum, key) {\n            columnEnum[key] = dict[key].index;\n            return columnEnum;\n        }, columnEnum);\n\n        // clean up\n        Object.keys(columnEnum).forEach(function(key) {\n            if (!(key in dict)) {\n                delete columnEnum[key];\n            }\n        });\n    },\n\n    get columnEnum() {\n        if (!warned.columnEnum) {\n            console.warn('.columnEnum[propName] has been deprecated as of v3.0.0 in favor of either .getColumns()[propName].index or .schema[propName].index. (Will be removed in a future release.)');\n            warned.columnEnum = true;\n        }\n        return this._columnEnum;\n    },\n\n    get columnEnumKey() {\n        warnColumnEnumDeprecation('columnEnumKey');\n        return this._columnEnumKey === 'verbatim' ? 'passThrough' : this._columnEnumKey;\n    },\n    set columnEnumKey(transformer) {\n        warnColumnEnumDeprecation('columnEnumKey');\n        var type = typeof transformer,\n            keys = Object.keys(transformers);\n        switch (type) {\n            case 'string':\n                if (transformer === 'passThrough') {\n                    transformer = 'verbatim';\n                } else if (!(transformer in transformers)) {\n                    throw new this.HypergridError('Expected registered transformer for .columnEnumKey value from: ' + keys);\n                }\n                this._columnEnumKey = transformer;\n                break;\n            case 'function':\n                this._columnEnumKey = keys.find(function(key) { return transformer === transformers[key]; });\n                if (!this._columnEnumKey) {\n                    throw new this.HypergridError('.columnEnumKey has been deprecated as of v3.0.0 and now accepts a function reference (or string key) from require(\"synonmous/transformers\"): ' + keys);\n                }\n                break;\n            default:\n                throw new this.HypergridError('Expected string or function for .columnEnumKey assignment but received ' + type + '.');\n        }\n    }\n};\n\nexports.mixInShared = {\n    get columnEnumDecorators() {\n        warnColumnEnumDeprecation('columnEnumDecorators');\n        return transformers;\n    }\n};\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\n\n/**\n * The default cell rendering function for a button cell.\n * @constructor\n * @extends CellRenderer\n */\nvar Button = CellRenderer.extend('Button', {\n    paint: function(gc, config) {\n        var val = config.value,\n            bounds = config.bounds,\n            x = bounds.x + 1,\n            y = bounds.y + 1,\n            width = bounds.width - 2,\n            height = bounds.height - 2,\n            radius = height / 2,\n            arcGradient = gc.createLinearGradient(x, y, x, y + height);\n\n        if (config.boxSizing === 'border-box') {\n            width -= config.gridLinesVWidth;\n            height -= config.gridLinesHWidth;\n        }\n\n        if (config.mouseDown) {\n            arcGradient.addColorStop(0, '#B5CBED');\n            arcGradient.addColorStop(1, '#4d74ea');\n        } else {\n            arcGradient.addColorStop(0, '#ffffff');\n            arcGradient.addColorStop(1, '#aaaaaa');\n        }\n\n        // draw the background\n        gc.cache.fillStyle = config.backgroundColor;\n        gc.fillRect(bounds.x, bounds.y, bounds.width, bounds.height);\n\n        // draw the capsule\n        gc.cache.fillStyle = arcGradient;\n        gc.cache.strokeStyle = '#000000';\n        this.roundRect(gc, x, y, width, height, radius, arcGradient, true);\n\n        var ox = (width - gc.getTextWidth(val)) / 2;\n        var oy = (height - gc.getTextHeight(gc.cache.font).descent) / 2;\n\n        // draw the text\n        gc.cache.textBaseline = 'middle';\n        gc.cache.fillStyle = '#333333';\n        gc.cache.font = height - 2 + 'px sans-serif';\n        config.backgroundColor = 'rgba(0,0,0,0)';\n        gc.fillText(val, x + ox, y + oy);\n    }\n});\n\nmodule.exports = Button;\n\n\n","'use strict';\n\n/*\n * This module is the namespace of loaded external modules known to `Hypergrid.require`,\n * which may include loaded application modules, datasource modules, and plug-in modules.\n *\n * Applications can override the \"overridable\" modules. For example, to override `finbars` with\n * a compatible module (that conforms to the same interface), just assign it like so:\n * ```js\n * Hypergrid.modules.Scrollbar = myFinbarReplacement;\n * ```\n */\n\n// overridable modules\n// Hypergrid vectors through here for these modules\nmodule.exports = {\n    Scrollbar: require('finbars'),\n    templater: require('mustache') // mustache interface: { render: function(template, context) }\n};\n\n// non-overridable modules\n// Access via `Hypergrid.require`\n// For users of pre-bundled build file (others should use `require`)\n// These are NOT overridable so non-configurable, non-writable\nObject.defineProperties(module.exports, {\n    'datasaur-base': { value: require('datasaur-base') }, // may be removed in a future release\n    'datasaur-local': { value: require('datasaur-local') }, // may be removed in a future release\n    'extend-me': {value: require('extend-me') },\n    'object-iterators': { value: require('object-iterators') },\n    overrider: { value: require('overrider') },\n    rectangular: { value: require('rectangular') },\n    'sparse-boolean-array': { value: require('sparse-boolean-array') },\n    synonomous: { value: require('synonomous') }\n});\n","'use strict';\n\n// This file creates the Hypergrid theme registry, exposed via:\n// shared methods `Hypergrid.registerTheme` and `Hypergrid.applyTheme`\n// and instance methods `myGrid.applyTheme`.\n// The initial registry consists of a single theme ('default').\n// Application developers can add additional themes to this registry.\n\nvar _ = require('object-iterators'); // fyi: installs the Array.prototype.find polyfill, as needed\n\nvar defaults = require('../defaults');\nvar dynamicPropertyDescriptors = require('../lib/dynamicProperties');\nvar HypergridError = require('../lib/error');\n\nvar styles = [\n    'BackgroundColor',\n    'Color',\n    'Font'\n];\n\nvar stylesWithHalign = styles.concat([\n    'Halign'\n]);\n\nvar dataCellStyles = stylesWithHalign.concat([\n    'cellPadding',\n    'iconPadding'\n]);\n\nvar stylers = [\n    { prefix: '',                                props: dataCellStyles },\n    { prefix: 'foregroundSelection',             props: styles },\n    { prefix: 'columnHeader',                    props: stylesWithHalign },\n    { prefix: 'columnHeaderForegroundSelection', props: styles },\n    { prefix: 'rowHeader',                       props: styles },\n    { prefix: 'rowHeaderForegroundSelection',    props: styles }\n];\n\nvar dynamicCosmetics = {\n    rowHeaderCheckboxes: defaults.rowHeaderCheckboxes,\n    rowHeaderNumbers: defaults.rowHeaderNumbers,\n    gridBorder: defaults.gridBorder,\n    gridBorderTop: defaults.gridBorderTop,\n    gridBorderRight: defaults.gridBorderRight,\n    gridBorderBottom: defaults.gridBorderBottom,\n    gridBorderLeft: defaults.gridBorderLeft,\n    gridRenderer: defaults.gridRenderer\n};\n\n// Create the `defaultTheme` theme by copying over the theme props,\n// which is a subset of all the props defined in defaults.js, beginning with\n// they dynamic cosmetics and `themeName`...\nvar defaultTheme = Object.assign({}, dynamicCosmetics, {\n    themeName: defaults.themeName\n});\n\n// ...and then adding non-dynamic cosmetics into `defaultTheme`, by combining the above\n// prefixes with their styles to get prop names and then copy those props from `defaults`.\nstylers.reduce(function(theme, styler) {\n    return styler.props.reduce(function(theme, prop) {\n        prop = styler.prefix + prop;\n        prop = prop.replace('ForegroundSelectionBackground', 'BackgroundSelection'); // unfortunate!\n        prop = prop[0].toLowerCase() + prop.substr(1);\n        theme[prop] = defaults[prop];\n        return theme;\n    }, theme);\n}, defaultTheme);\n\n/**\n * @summary The Hypergrid theme registry.\n * @desc The standard registry consists of a single theme, `default`, built from values in defaults.js.\n */\nvar registry = Object.create(null, {\n    default: { value: defaultTheme }\n});\nvar pseudopropAdvice = {\n    showRowNumbers: 'rowHeaderCheckboxes and rowHeaderNumbers',\n    lineColor: 'gridLinesHColor and gridLinesVColor',\n    lineWidth: 'gridLinesHWidth and gridLinesVWidth',\n    gridBorder: 'gridBorderLeft, gridBorderRight, gridBorderTop, and gridBorderBottom'\n};\n\nfunction applyTheme(theme) {\n    var themeLayer, grids, props;\n\n    if (theme && typeof theme === 'object' && !Object.getOwnPropertyNames(theme).length) {\n        theme = null;\n    }\n\n    if (this._theme) {\n        grids = [this];\n        themeLayer = this._theme;\n        props = this.properties;\n\n        // If removing theme, reset props to defaults\n        if (!theme) {\n            // Delete (non-dynamic) grid props named in this theme, revealing defaults\n            Object.keys(themeLayer).forEach(function(key) {\n                if (!(key in dynamicPropertyDescriptors)) {\n                    delete props[key];\n                }\n            });\n\n            // Reset dynamic cosmetic props to defaults\n            Object.keys(dynamicCosmetics).forEach(function(key) {\n                props.var[key] = defaults[key];\n            });\n        }\n\n        // Delete all own props from this grid instance's theme layer (defined by an eariler call)\n        Object.keys(themeLayer).forEach(function(key) {\n            delete themeLayer[key];\n        });\n    } else {\n        grids = this.grids;\n        themeLayer = defaults; // global theme layer\n        theme = theme || 'default';\n    }\n\n    if (typeof theme === 'string') {\n        if (!registry[theme]) {\n            throw new HypergridError('Unknown theme \"' + theme + '\"');\n        }\n        theme = registry[theme];\n    }\n\n    if (theme) {\n        // When no theme name, set it to explicit `undefined` (to mask defaults.themeName).\n        if (!theme.themeName) {\n            theme.themeName = undefined;\n        }\n\n        Object.keys(theme).forEach(function(key) {\n            if (key in dynamicPropertyDescriptors) {\n                if (key in dynamicCosmetics) {\n                    grids.forEach(function(grid) {\n                        grid.properties[key] = theme[key];\n                    });\n                } else {\n                    // Dynamic properties are defined on properties layer; defining these\n                    // r-values on the theme layer is ineffective so let's not allow it.\n                    var message = pseudopropAdvice[key];\n                    message = message\n                        ? 'Ignoring unexpected pseudo-prop ' + key + ' in theme object. Use actual props ' + message + ' instead.'\n                        : 'Ignoring invalid property ' + key + ' in theme object.';\n                    console.warn(message);\n                    delete theme[key];\n                }\n            }\n        });\n\n        // No .assign() because themeName is read-only in defaults layer\n        Object.defineProperties(themeLayer, Object.getOwnPropertyDescriptors(theme));\n    }\n\n    grids.forEach(function(grid) {\n        grid.repaint();\n    });\n}\n\n\n/**\n * @summary Instance theme support.\n * @desc Additions to `Hypergrid.prototype` for setting an instance theme.\n *\n * All members are documented on the {@link Hypergrid} page.\n * @mixin themes.mixin\n */\nvar mixin = {\n    initThemeLayer: function() {\n        /**\n         * Descends from {@link module:defaults|defaults}.\n         * @memberOf Hypergrid#\n         * @private\n         */\n        this._theme = Object.create(defaults);\n\n        return Object.create(this._theme, dynamicPropertyDescriptors);\n    },\n\n    /**\n     * @summary Apply a grid theme.\n     * @desc Apply props from the given theme object to the grid instance,\n     * the instance's `myGrid.themeLayer` layer in the properties hierarchy.\n     * @this {Hypergrid}\n     * @param {object|string} [theme] - One of:\n     * * **string:** A registered theme name.\n     * * **object:** A unregistered (anonymous) theme object. Empty object removes grid theme, exposing global theme.\n     * * _falsy value:_ Also removes grid theme.\n     * @param {string|undefined} [theme.themeName=undefined]\n     * @memberOf Hypergrid#\n     */\n    applyTheme: applyTheme,\n\n    /**\n     * @summary Get currently active theme.\n     * @desc May return a theme name or a theme object.\n     * @returns {string|undefined|object} One of:\n     * * **string:** Theme name (registered theme).\n     * * **object:** Theme object (unregistered anonymous theme).\n     * * **undefined:** No theme (i.e., the default theme).\n     * @memberOf Hypergrid#\n     */\n    getTheme: function() {\n        var themeLayer = this._theme,\n            themeName = themeLayer.themeName;\n        return themeName === 'default' || !Object.getOwnPropertyNames(themeLayer).length\n            ? undefined // default theme or no theme\n            : themeName in registry\n                ? themeName // registered theme name\n                : themeLayer; // unregistered theme object\n    }\n};\nObject.defineProperty(mixin, 'theme', {\n    enumerable: true,\n    set: mixin.applyTheme,\n    get: mixin.getTheme\n});\n\n\n/**\n * @summary Theme registration and global theme support.\n * @desc Shared properties of `Hypergrid` \"class\" (_i.e.,_ \"static\" properties of constructor function) for registering themes and setting a global theme.\n *\n * All members are documented on the {@link Hypergrid} page (annotated as \"(static)\").\n * @mixin themes.sharedMixin\n */\nvar sharedMixin = {\n    /**\n     * @param {string} [name] - A registry name for the new theme. May be omitted if the theme has an embedded name (in `theme.themeName`).\n     * _If omitted, the 2nd parameter (`theme`) is promoted to first position._\n     * @param {HypergridThemeObject} [theme]\n     * To build a Hypergrid theme object from a loaded {@link https://polymerthemes.com Polymer Theme} CSS stylesheet:\n     * ```javascript\n     * var myTheme = require('fin-hypergrid-themes').buildTheme();\n     * ```\n     * If omitted, the theme named in the first parameter is unregistered.\n     * Grid instances that have previously applied the named theme are unaffected by this action (whether re-registering or unregistering).\n     * @memberOf Hypergrid.\n     */\n    registerTheme: function(name, theme) {\n        if (typeof name === 'object') {\n            theme = name;\n            name = theme.themeName;\n        }\n\n        if (!name) {\n            throw new HypergridError('Cannot register an anonymous theme.');\n        }\n\n        if (name === 'default') {\n            throw new HypergridError('Cannot register or unregister the \"default\" theme.');\n        }\n\n        if (theme) {\n            theme.themeName = name;\n            registry[name] = theme;\n        } else {\n            delete registry[name];\n        }\n    },\n\n    /**\n     * App developers are free to add in additional themes, such as those in {@link https://openfin.github.com/fin-hypergrid-themes/themes}:\n     * ```javascript\n     * Hypergrind.registerThemes(require('fin-hypergrid-themes'));\n     * ```\n     * @param {object} themeCollection\n     * @memberOf Hypergrid.\n     */\n    registerThemes: function(themeCollection) {\n        if (themeCollection) {\n            _(themeCollection).each(function(theme, name) {\n                this.registerTheme(name, theme);\n            }, this);\n        } else {\n            Object.keys(registry).forEach(function(themeName) {\n                this.registerTheme(themeName);\n            }, this);\n        }\n    },\n\n    /**\n     * @summary Apply global theme.\n     * @desc Apply props from the given theme object to the global theme object,\n     * the `defaults` layer at the bottom of the properties hierarchy.\n     * @this {Hypergrid.}\n     * @param {object|string} [theme=registry.default] - One of:\n     * * **string:** A registered theme name.\n     * * **object:** A theme object. Empty object removes global them, restoring defaults.\n     * * _falsy value:_ Also restores defaults.\n     * @param {string|undefined} [theme.themeName=undefined]\n     * @memberOf Hypergrid.\n     */\n    applyTheme: applyTheme\n};\nObject.defineProperty(sharedMixin, 'theme', { // global theme setter/getter\n    enumerable: true,\n    set: applyTheme,\n    get: function() { return defaults; } // the defaults layer *is* the global theme layer\n});\n\n\nmodule.exports = {\n    mixin: mixin,\n    sharedMixin: sharedMixin\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","/* flatpickr v4.5.2, @license MIT */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.flatpickr = factory());\n}(this, (function () { 'use strict';\n\n    var pad = function pad(number) {\n      return (\"0\" + number).slice(-2);\n    };\n    var int = function int(bool) {\n      return bool === true ? 1 : 0;\n    };\n    function debounce(func, wait, immediate) {\n      if (immediate === void 0) {\n        immediate = false;\n      }\n\n      var timeout;\n      return function () {\n        var context = this,\n            args = arguments;\n        timeout !== null && clearTimeout(timeout);\n        timeout = window.setTimeout(function () {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        }, wait);\n        if (immediate && !timeout) func.apply(context, args);\n      };\n    }\n    var arrayify = function arrayify(obj) {\n      return obj instanceof Array ? obj : [obj];\n    };\n\n    var do_nothing = function do_nothing() {\n      return undefined;\n    };\n\n    var monthToStr = function monthToStr(monthNumber, shorthand, locale) {\n      return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n    };\n    var revFormat = {\n      D: do_nothing,\n      F: function F(dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n      },\n      G: function G(dateObj, hour) {\n        dateObj.setHours(parseFloat(hour));\n      },\n      H: function H(dateObj, hour) {\n        dateObj.setHours(parseFloat(hour));\n      },\n      J: function J(dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n      },\n      K: function K(dateObj, amPM, locale) {\n        dateObj.setHours(dateObj.getHours() % 12 + 12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n      },\n      M: function M(dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n      },\n      S: function S(dateObj, seconds) {\n        dateObj.setSeconds(parseFloat(seconds));\n      },\n      U: function U(_, unixSeconds) {\n        return new Date(parseFloat(unixSeconds) * 1000);\n      },\n      W: function W(dateObj, weekNum) {\n        var weekNumber = parseInt(weekNum);\n        return new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n      },\n      Y: function Y(dateObj, year) {\n        dateObj.setFullYear(parseFloat(year));\n      },\n      Z: function Z(_, ISODate) {\n        return new Date(ISODate);\n      },\n      d: function d(dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n      },\n      h: function h(dateObj, hour) {\n        dateObj.setHours(parseFloat(hour));\n      },\n      i: function i(dateObj, minutes) {\n        dateObj.setMinutes(parseFloat(minutes));\n      },\n      j: function j(dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n      },\n      l: do_nothing,\n      m: function m(dateObj, month) {\n        dateObj.setMonth(parseFloat(month) - 1);\n      },\n      n: function n(dateObj, month) {\n        dateObj.setMonth(parseFloat(month) - 1);\n      },\n      s: function s(dateObj, seconds) {\n        dateObj.setSeconds(parseFloat(seconds));\n      },\n      w: do_nothing,\n      y: function y(dateObj, year) {\n        dateObj.setFullYear(2000 + parseFloat(year));\n      }\n    };\n    var tokenRegex = {\n      D: \"(\\\\w+)\",\n      F: \"(\\\\w+)\",\n      G: \"(\\\\d\\\\d|\\\\d)\",\n      H: \"(\\\\d\\\\d|\\\\d)\",\n      J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n      K: \"\",\n      M: \"(\\\\w+)\",\n      S: \"(\\\\d\\\\d|\\\\d)\",\n      U: \"(.+)\",\n      W: \"(\\\\d\\\\d|\\\\d)\",\n      Y: \"(\\\\d{4})\",\n      Z: \"(.+)\",\n      d: \"(\\\\d\\\\d|\\\\d)\",\n      h: \"(\\\\d\\\\d|\\\\d)\",\n      i: \"(\\\\d\\\\d|\\\\d)\",\n      j: \"(\\\\d\\\\d|\\\\d)\",\n      l: \"(\\\\w+)\",\n      m: \"(\\\\d\\\\d|\\\\d)\",\n      n: \"(\\\\d\\\\d|\\\\d)\",\n      s: \"(\\\\d\\\\d|\\\\d)\",\n      w: \"(\\\\d\\\\d|\\\\d)\",\n      y: \"(\\\\d{2})\"\n    };\n    var formats = {\n      Z: function Z(date) {\n        return date.toISOString();\n      },\n      D: function D(date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n      },\n      F: function F(date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n      },\n      G: function G(date, locale, options) {\n        return pad(formats.h(date, locale, options));\n      },\n      H: function H(date) {\n        return pad(date.getHours());\n      },\n      J: function J(date, locale) {\n        return locale.ordinal !== undefined ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();\n      },\n      K: function K(date, locale) {\n        return locale.amPM[int(date.getHours() > 11)];\n      },\n      M: function M(date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n      },\n      S: function S(date) {\n        return pad(date.getSeconds());\n      },\n      U: function U(date) {\n        return date.getTime() / 1000;\n      },\n      W: function W(date, _, options) {\n        return options.getWeek(date);\n      },\n      Y: function Y(date) {\n        return date.getFullYear();\n      },\n      d: function d(date) {\n        return pad(date.getDate());\n      },\n      h: function h(date) {\n        return date.getHours() % 12 ? date.getHours() % 12 : 12;\n      },\n      i: function i(date) {\n        return pad(date.getMinutes());\n      },\n      j: function j(date) {\n        return date.getDate();\n      },\n      l: function l(date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n      },\n      m: function m(date) {\n        return pad(date.getMonth() + 1);\n      },\n      n: function n(date) {\n        return date.getMonth() + 1;\n      },\n      s: function s(date) {\n        return date.getSeconds();\n      },\n      w: function w(date) {\n        return date.getDay();\n      },\n      y: function y(date) {\n        return String(date.getFullYear()).substring(2);\n      }\n    };\n\n    var english = {\n      weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n      },\n      months: {\n        shorthand: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        longhand: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n      },\n      daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n      firstDayOfWeek: 0,\n      ordinal: function ordinal(nth) {\n        var s = nth % 100;\n        if (s > 3 && s < 21) return \"th\";\n\n        switch (s % 10) {\n          case 1:\n            return \"st\";\n\n          case 2:\n            return \"nd\";\n\n          case 3:\n            return \"rd\";\n\n          default:\n            return \"th\";\n        }\n      },\n      rangeSeparator: \" to \",\n      weekAbbreviation: \"Wk\",\n      scrollTitle: \"Scroll to increment\",\n      toggleTitle: \"Click to toggle\",\n      amPM: [\"AM\", \"PM\"],\n      yearAriaLabel: \"Year\"\n    };\n\n    var createDateFormatter = function createDateFormatter(_ref) {\n      var _ref$config = _ref.config,\n          config = _ref$config === void 0 ? defaults : _ref$config,\n          _ref$l10n = _ref.l10n,\n          l10n = _ref$l10n === void 0 ? english : _ref$l10n;\n      return function (dateObj, frmt, overrideLocale) {\n        var locale = overrideLocale || l10n;\n\n        if (config.formatDate !== undefined) {\n          return config.formatDate(dateObj, frmt, locale);\n        }\n\n        return frmt.split(\"\").map(function (c, i, arr) {\n          return formats[c] && arr[i - 1] !== \"\\\\\" ? formats[c](dateObj, locale, config) : c !== \"\\\\\" ? c : \"\";\n        }).join(\"\");\n      };\n    };\n    var createDateParser = function createDateParser(_ref2) {\n      var _ref2$config = _ref2.config,\n          config = _ref2$config === void 0 ? defaults : _ref2$config,\n          _ref2$l10n = _ref2.l10n,\n          l10n = _ref2$l10n === void 0 ? english : _ref2$l10n;\n      return function (date, givenFormat, timeless, customLocale) {\n        if (date !== 0 && !date) return undefined;\n        var locale = customLocale || l10n;\n        var parsedDate;\n        var date_orig = date;\n        if (date instanceof Date) parsedDate = new Date(date.getTime());else if (typeof date !== \"string\" && date.toFixed !== undefined) parsedDate = new Date(date);else if (typeof date === \"string\") {\n          var format = givenFormat || (config || defaults).dateFormat;\n          var datestr = String(date).trim();\n\n          if (datestr === \"today\") {\n            parsedDate = new Date();\n            timeless = true;\n          } else if (/Z$/.test(datestr) || /GMT$/.test(datestr)) parsedDate = new Date(date);else if (config && config.parseDate) parsedDate = config.parseDate(date, format);else {\n            parsedDate = !config || !config.noCalendar ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0) : new Date(new Date().setHours(0, 0, 0, 0));\n            var matched,\n                ops = [];\n\n            for (var i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n              var token = format[i];\n              var isBackSlash = token === \"\\\\\";\n              var escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n\n              if (tokenRegex[token] && !escaped) {\n                regexStr += tokenRegex[token];\n                var match = new RegExp(regexStr).exec(date);\n\n                if (match && (matched = true)) {\n                  ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                    fn: revFormat[token],\n                    val: match[++matchIndex]\n                  });\n                }\n              } else if (!isBackSlash) regexStr += \".\";\n\n              ops.forEach(function (_ref3) {\n                var fn = _ref3.fn,\n                    val = _ref3.val;\n                return parsedDate = fn(parsedDate, val, locale) || parsedDate;\n              });\n            }\n\n            parsedDate = matched ? parsedDate : undefined;\n          }\n        }\n\n        if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n          config.errorHandler(new Error(\"Invalid date provided: \" + date_orig));\n          return undefined;\n        }\n\n        if (timeless === true) parsedDate.setHours(0, 0, 0, 0);\n        return parsedDate;\n      };\n    };\n    function compareDates(date1, date2, timeless) {\n      if (timeless === void 0) {\n        timeless = true;\n      }\n\n      if (timeless !== false) {\n        return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);\n      }\n\n      return date1.getTime() - date2.getTime();\n    }\n    var getWeek = function getWeek(givenDate) {\n      var date = new Date(givenDate.getTime());\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\n      var week1 = new Date(date.getFullYear(), 0, 4);\n      return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\n    };\n    var isBetween = function isBetween(ts, ts1, ts2) {\n      return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n    };\n    var duration = {\n      DAY: 86400000\n    };\n\n    var HOOKS = [\"onChange\", \"onClose\", \"onDayCreate\", \"onDestroy\", \"onKeyDown\", \"onMonthChange\", \"onOpen\", \"onParseConfig\", \"onReady\", \"onValueUpdate\", \"onYearChange\", \"onPreCalendarPosition\"];\n    var defaults = {\n      _disable: [],\n      _enable: [],\n      allowInput: false,\n      altFormat: \"F j, Y\",\n      altInput: false,\n      altInputClass: \"form-control input\",\n      animate: typeof window === \"object\" && window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n      ariaDateFormat: \"F j, Y\",\n      clickOpens: true,\n      closeOnSelect: true,\n      conjunction: \", \",\n      dateFormat: \"Y-m-d\",\n      defaultHour: 12,\n      defaultMinute: 0,\n      defaultSeconds: 0,\n      disable: [],\n      disableMobile: false,\n      enable: [],\n      enableSeconds: false,\n      enableTime: false,\n      errorHandler: function errorHandler(err) {\n        return typeof console !== \"undefined\" && console.warn(err);\n      },\n      getWeek: getWeek,\n      hourIncrement: 1,\n      ignoredFocusElements: [],\n      inline: false,\n      locale: \"default\",\n      minuteIncrement: 5,\n      mode: \"single\",\n      nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n      noCalendar: false,\n      now: new Date(),\n      onChange: [],\n      onClose: [],\n      onDayCreate: [],\n      onDestroy: [],\n      onKeyDown: [],\n      onMonthChange: [],\n      onOpen: [],\n      onParseConfig: [],\n      onReady: [],\n      onValueUpdate: [],\n      onYearChange: [],\n      onPreCalendarPosition: [],\n      plugins: [],\n      position: \"auto\",\n      positionElement: undefined,\n      prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n      shorthandCurrentMonth: false,\n      showMonths: 1,\n      static: false,\n      time_24hr: false,\n      weekNumbers: false,\n      wrap: false\n    };\n\n    function toggleClass(elem, className, bool) {\n      if (bool === true) return elem.classList.add(className);\n      elem.classList.remove(className);\n    }\n    function createElement(tag, className, content) {\n      var e = window.document.createElement(tag);\n      className = className || \"\";\n      content = content || \"\";\n      e.className = className;\n      if (content !== undefined) e.textContent = content;\n      return e;\n    }\n    function clearNode(node) {\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n    }\n    function findParent(node, condition) {\n      if (condition(node)) return node;else if (node.parentNode) return findParent(node.parentNode, condition);\n      return undefined;\n    }\n    function createNumberInput(inputClassName, opts) {\n      var wrapper = createElement(\"div\", \"numInputWrapper\"),\n          numInput = createElement(\"input\", \"numInput \" + inputClassName),\n          arrowUp = createElement(\"span\", \"arrowUp\"),\n          arrowDown = createElement(\"span\", \"arrowDown\");\n      numInput.type = \"text\";\n      numInput.pattern = \"\\\\d*\";\n      if (opts !== undefined) for (var key in opts) {\n        numInput.setAttribute(key, opts[key]);\n      }\n      wrapper.appendChild(numInput);\n      wrapper.appendChild(arrowUp);\n      wrapper.appendChild(arrowDown);\n      return wrapper;\n    }\n\n    if (typeof Object.assign !== \"function\") {\n      Object.assign = function (target) {\n        if (!target) {\n          throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var _loop = function _loop() {\n          var source = args[_i];\n\n          if (source) {\n            Object.keys(source).forEach(function (key) {\n              return target[key] = source[key];\n            });\n          }\n        };\n\n        for (var _i = 0; _i < args.length; _i++) {\n          _loop();\n        }\n\n        return target;\n      };\n    }\n\n    var DEBOUNCED_CHANGE_MS = 300;\n\n    function FlatpickrInstance(element, instanceConfig) {\n      var self = {\n        config: Object.assign({}, flatpickr.defaultConfig),\n        l10n: english\n      };\n      self.parseDate = createDateParser({\n        config: self.config,\n        l10n: self.l10n\n      });\n      self._handlers = [];\n      self._bind = bind;\n      self._setHoursFromDate = setHoursFromDate;\n      self._positionCalendar = positionCalendar;\n      self.changeMonth = changeMonth;\n      self.changeYear = changeYear;\n      self.clear = clear;\n      self.close = close;\n      self._createElement = createElement;\n      self.destroy = destroy;\n      self.isEnabled = isEnabled;\n      self.jumpToDate = jumpToDate;\n      self.open = open;\n      self.redraw = redraw;\n      self.set = set;\n      self.setDate = setDate;\n      self.toggle = toggle;\n\n      function setupHelperFunctions() {\n        self.utils = {\n          getDaysInMonth: function getDaysInMonth(month, yr) {\n            if (month === void 0) {\n              month = self.currentMonth;\n            }\n\n            if (yr === void 0) {\n              yr = self.currentYear;\n            }\n\n            if (month === 1 && (yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0)) return 29;\n            return self.l10n.daysInMonth[month];\n          }\n        };\n      }\n\n      function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile) build();\n        bindEvents();\n\n        if (self.selectedDates.length || self.config.noCalendar) {\n          if (self.config.enableTime) {\n            setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj || self.config.minDate : undefined);\n          }\n\n          updateValue(false);\n        }\n\n        setCalendarWidth();\n        self.showTimeInput = self.selectedDates.length > 0 || self.config.noCalendar;\n        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n        if (!self.isMobile && isSafari) {\n          positionCalendar();\n        }\n\n        triggerEvent(\"onReady\");\n      }\n\n      function bindToInstance(fn) {\n        return fn.bind(self);\n      }\n\n      function setCalendarWidth() {\n        var config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) return;else if (config.noCalendar !== true) {\n          window.requestAnimationFrame(function () {\n            self.calendarContainer.style.visibility = \"hidden\";\n            self.calendarContainer.style.display = \"block\";\n\n            if (self.daysContainer !== undefined) {\n              var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n              self.daysContainer.style.width = daysWidth + \"px\";\n              self.calendarContainer.style.width = daysWidth + (self.weekWrapper !== undefined ? self.weekWrapper.offsetWidth : 0) + \"px\";\n              self.calendarContainer.style.removeProperty(\"visibility\");\n              self.calendarContainer.style.removeProperty(\"display\");\n            }\n          });\n        }\n      }\n\n      function updateTime(e) {\n        if (self.selectedDates.length === 0) return;\n\n        if (e !== undefined && e.type !== \"blur\") {\n          timeWrapper(e);\n        }\n\n        var prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n\n        if (self._input.value !== prevValue) {\n          self._debouncedChange();\n        }\n      }\n\n      function ampm2military(hour, amPM) {\n        return hour % 12 + 12 * int(amPM === self.l10n.amPM[1]);\n      }\n\n      function military2ampm(hour) {\n        switch (hour % 24) {\n          case 0:\n          case 12:\n            return 12;\n\n          default:\n            return hour % 12;\n        }\n      }\n\n      function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined) return;\n        var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24,\n            minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60,\n            seconds = self.secondElement !== undefined ? (parseInt(self.secondElement.value, 10) || 0) % 60 : 0;\n\n        if (self.amPM !== undefined) {\n          hours = ampm2military(hours, self.amPM.textContent);\n        }\n\n        var limitMinHours = self.config.minTime !== undefined || self.config.minDate && self.minDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.minDate, true) === 0;\n        var limitMaxHours = self.config.maxTime !== undefined || self.config.maxDate && self.maxDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.maxDate, true) === 0;\n\n        if (limitMaxHours) {\n          var maxTime = self.config.maxTime !== undefined ? self.config.maxTime : self.config.maxDate;\n          hours = Math.min(hours, maxTime.getHours());\n          if (hours === maxTime.getHours()) minutes = Math.min(minutes, maxTime.getMinutes());\n          if (minutes === maxTime.getMinutes()) seconds = Math.min(seconds, maxTime.getSeconds());\n        }\n\n        if (limitMinHours) {\n          var minTime = self.config.minTime !== undefined ? self.config.minTime : self.config.minDate;\n          hours = Math.max(hours, minTime.getHours());\n          if (hours === minTime.getHours()) minutes = Math.max(minutes, minTime.getMinutes());\n          if (minutes === minTime.getMinutes()) seconds = Math.max(seconds, minTime.getSeconds());\n        }\n\n        setHours(hours, minutes, seconds);\n      }\n\n      function setHoursFromDate(dateObj) {\n        var date = dateObj || self.latestSelectedDateObj;\n        if (date) setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n      }\n\n      function setDefaultHours() {\n        var hours = self.config.defaultHour;\n        var minutes = self.config.defaultMinute;\n        var seconds = self.config.defaultSeconds;\n\n        if (self.config.minDate !== undefined) {\n          var min_hr = self.config.minDate.getHours();\n          var min_minutes = self.config.minDate.getMinutes();\n          hours = Math.max(hours, min_hr);\n          if (hours === min_hr) minutes = Math.max(min_minutes, minutes);\n          if (hours === min_hr && minutes === min_minutes) seconds = self.config.minDate.getSeconds();\n        }\n\n        if (self.config.maxDate !== undefined) {\n          var max_hr = self.config.maxDate.getHours();\n          var max_minutes = self.config.maxDate.getMinutes();\n          hours = Math.min(hours, max_hr);\n          if (hours === max_hr) minutes = Math.min(max_minutes, minutes);\n          if (hours === max_hr && minutes === max_minutes) seconds = self.config.maxDate.getSeconds();\n        }\n\n        setHours(hours, minutes, seconds);\n      }\n\n      function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n          self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n\n        if (!self.hourElement || !self.minuteElement || self.isMobile) return;\n        self.hourElement.value = pad(!self.config.time_24hr ? (12 + hours) % 12 + 12 * int(hours % 12 === 0) : hours);\n        self.minuteElement.value = pad(minutes);\n        if (self.amPM !== undefined) self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n        if (self.secondElement !== undefined) self.secondElement.value = pad(seconds);\n      }\n\n      function onYearInput(event) {\n        var year = parseInt(event.target.value) + (event.delta || 0);\n\n        if (year / 1000 > 1 || event.key === \"Enter\" && !/[^\\d]/.test(year.toString())) {\n          changeYear(year);\n        }\n      }\n\n      function bind(element, event, handler, options) {\n        if (event instanceof Array) return event.forEach(function (ev) {\n          return bind(element, ev, handler, options);\n        });\n        if (element instanceof Array) return element.forEach(function (el) {\n          return bind(el, event, handler, options);\n        });\n        element.addEventListener(event, handler, options);\n\n        self._handlers.push({\n          element: element,\n          event: event,\n          handler: handler,\n          options: options\n        });\n      }\n\n      function onClick(handler) {\n        return function (evt) {\n          evt.which === 1 && handler(evt);\n        };\n      }\n\n      function triggerChange() {\n        triggerEvent(\"onChange\");\n      }\n\n      function bindEvents() {\n        if (self.config.wrap) {\n          [\"open\", \"close\", \"toggle\", \"clear\"].forEach(function (evt) {\n            Array.prototype.forEach.call(self.element.querySelectorAll(\"[data-\" + evt + \"]\"), function (el) {\n              return bind(el, \"click\", self[evt]);\n            });\n          });\n        }\n\n        if (self.isMobile) {\n          setupMobile();\n          return;\n        }\n\n        var debouncedResize = debounce(onResize, 50);\n        self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent)) bind(self.daysContainer, \"mouseover\", function (e) {\n          if (self.config.mode === \"range\") onMouseOver(e.target);\n        });\n        bind(window.document.body, \"keydown\", onKeyDown);\n        if (!self.config.static) bind(self._input, \"keydown\", onKeyDown);\n        if (!self.config.inline && !self.config.static) bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined) bind(window.document, \"click\", documentClick);else bind(window.document, \"mousedown\", onClick(documentClick));\n        bind(window.document, \"focus\", documentClick, {\n          capture: true\n        });\n\n        if (self.config.clickOpens === true) {\n          bind(self._input, \"focus\", self.open);\n          bind(self._input, \"mousedown\", onClick(self.open));\n        }\n\n        if (self.daysContainer !== undefined) {\n          bind(self.monthNav, \"mousedown\", onClick(onMonthNavClick));\n          bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n          bind(self.daysContainer, \"mousedown\", onClick(selectDate));\n        }\n\n        if (self.timeContainer !== undefined && self.minuteElement !== undefined && self.hourElement !== undefined) {\n          var selText = function selText(e) {\n            return e.target.select();\n          };\n\n          bind(self.timeContainer, [\"increment\"], updateTime);\n          bind(self.timeContainer, \"blur\", updateTime, {\n            capture: true\n          });\n          bind(self.timeContainer, \"mousedown\", onClick(timeIncrement));\n          bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n          if (self.secondElement !== undefined) bind(self.secondElement, \"focus\", function () {\n            return self.secondElement && self.secondElement.select();\n          });\n\n          if (self.amPM !== undefined) {\n            bind(self.amPM, \"mousedown\", onClick(function (e) {\n              updateTime(e);\n              triggerChange();\n            }));\n          }\n        }\n      }\n\n      function jumpToDate(jumpDate) {\n        var jumpTo = jumpDate !== undefined ? self.parseDate(jumpDate) : self.latestSelectedDateObj || (self.config.minDate && self.config.minDate > self.now ? self.config.minDate : self.config.maxDate && self.config.maxDate < self.now ? self.config.maxDate : self.now);\n\n        try {\n          if (jumpTo !== undefined) {\n            self.currentYear = jumpTo.getFullYear();\n            self.currentMonth = jumpTo.getMonth();\n          }\n        } catch (e) {\n          e.message = \"Invalid date supplied: \" + jumpTo;\n          self.config.errorHandler(e);\n        }\n\n        self.redraw();\n      }\n\n      function timeIncrement(e) {\n        if (~e.target.className.indexOf(\"arrow\")) incrementNumInput(e, e.target.classList.contains(\"arrowUp\") ? 1 : -1);\n      }\n\n      function incrementNumInput(e, delta, inputElem) {\n        var target = e && e.target;\n        var input = inputElem || target && target.parentNode && target.parentNode.firstChild;\n        var event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n      }\n\n      function build() {\n        var fragment = window.document.createDocumentFragment();\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n\n        if (!self.config.noCalendar) {\n          fragment.appendChild(buildMonthNav());\n          self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n\n          if (self.config.weekNumbers) {\n            var _buildWeeks = buildWeeks(),\n                weekWrapper = _buildWeeks.weekWrapper,\n                weekNumbers = _buildWeeks.weekNumbers;\n\n            self.innerContainer.appendChild(weekWrapper);\n            self.weekNumbers = weekNumbers;\n            self.weekWrapper = weekWrapper;\n          }\n\n          self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n          self.rContainer.appendChild(buildWeekdays());\n\n          if (!self.daysContainer) {\n            self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n            self.daysContainer.tabIndex = -1;\n          }\n\n          buildDays();\n          self.rContainer.appendChild(self.daysContainer);\n          self.innerContainer.appendChild(self.rContainer);\n          fragment.appendChild(self.innerContainer);\n        }\n\n        if (self.config.enableTime) {\n          fragment.appendChild(buildTime());\n        }\n\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n        toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        var customAppend = self.config.appendTo !== undefined && self.config.appendTo.nodeType !== undefined;\n\n        if (self.config.inline || self.config.static) {\n          self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n\n          if (self.config.inline) {\n            if (!customAppend && self.element.parentNode) self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);else if (self.config.appendTo !== undefined) self.config.appendTo.appendChild(self.calendarContainer);\n          }\n\n          if (self.config.static) {\n            var wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n            if (self.element.parentNode) self.element.parentNode.insertBefore(wrapper, self.element);\n            wrapper.appendChild(self.element);\n            if (self.altInput) wrapper.appendChild(self.altInput);\n            wrapper.appendChild(self.calendarContainer);\n          }\n        }\n\n        if (!self.config.static && !self.config.inline) (self.config.appendTo !== undefined ? self.config.appendTo : window.document.body).appendChild(self.calendarContainer);\n      }\n\n      function createDay(className, date, dayNumber, i) {\n        var dateIsEnabled = isEnabled(date, true),\n            dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n\n        if (className.indexOf(\"hidden\") === -1 && compareDates(date, self.now) === 0) {\n          self.todayDateElem = dayElement;\n          dayElement.classList.add(\"today\");\n          dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n\n        if (dateIsEnabled) {\n          dayElement.tabIndex = -1;\n\n          if (isDateSelected(date)) {\n            dayElement.classList.add(\"selected\");\n            self.selectedDateElem = dayElement;\n\n            if (self.config.mode === \"range\") {\n              toggleClass(dayElement, \"startRange\", self.selectedDates[0] && compareDates(date, self.selectedDates[0], true) === 0);\n              toggleClass(dayElement, \"endRange\", self.selectedDates[1] && compareDates(date, self.selectedDates[1], true) === 0);\n              if (className === \"nextMonthDay\") dayElement.classList.add(\"inRange\");\n            }\n          }\n        } else {\n          dayElement.classList.add(\"disabled\");\n        }\n\n        if (self.config.mode === \"range\") {\n          if (isDateInRange(date) && !isDateSelected(date)) dayElement.classList.add(\"inRange\");\n        }\n\n        if (self.weekNumbers && self.config.showMonths === 1 && className !== \"prevMonthDay\" && dayNumber % 7 === 1) {\n          self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n      }\n\n      function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\") onMouseOver(targetNode);\n      }\n\n      function getFirstAvailableDay(delta) {\n        var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        var endMonth = delta > 0 ? self.config.showMonths : -1;\n\n        for (var m = startMonth; m != endMonth; m += delta) {\n          var month = self.daysContainer.children[m];\n          var startIndex = delta > 0 ? 0 : month.children.length - 1;\n          var endIndex = delta > 0 ? month.children.length : -1;\n\n          for (var i = startIndex; i != endIndex; i += delta) {\n            var c = month.children[i];\n            if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj)) return c;\n          }\n        }\n\n        return undefined;\n      }\n\n      function getNextAvailableDay(current, delta) {\n        var givenMonth = current.className.indexOf(\"Month\") === -1 ? current.dateObj.getMonth() : self.currentMonth;\n        var endMonth = delta > 0 ? self.config.showMonths : -1;\n        var loopDelta = delta > 0 ? 1 : -1;\n\n        for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n          var month = self.daysContainer.children[m];\n          var startIndex = givenMonth - self.currentMonth === m ? current.$i + delta : delta < 0 ? month.children.length - 1 : 0;\n          var numMonthDays = month.children.length;\n\n          for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n            var c = month.children[i];\n            if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj) && Math.abs(current.$i - i) >= Math.abs(delta)) return focusOnDayElem(c);\n          }\n        }\n\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n      }\n\n      function focusOnDay(current, offset) {\n        var dayFocused = isInView(document.activeElement || document.body);\n        var startElem = current !== undefined ? current : dayFocused ? document.activeElement : self.selectedDateElem !== undefined && isInView(self.selectedDateElem) ? self.selectedDateElem : self.todayDateElem !== undefined && isInView(self.todayDateElem) ? self.todayDateElem : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) return self._input.focus();\n        if (!dayFocused) return focusOnDayElem(startElem);\n        getNextAvailableDay(startElem, offset);\n      }\n\n      function buildMonthDays(year, month) {\n        var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12);\n        var daysInMonth = self.utils.getDaysInMonth(month),\n            days = window.document.createDocumentFragment(),\n            isMultiMonth = self.config.showMonths > 1,\n            prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\",\n            nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        var dayNumber = prevMonthDays + 1 - firstOfMonth,\n            dayIndex = 0;\n\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n          days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n          days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n\n        for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth && (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n          days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n\n        var dayContainer = createElement(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n      }\n\n      function buildDays() {\n        if (self.daysContainer === undefined) {\n          return;\n        }\n\n        clearNode(self.daysContainer);\n        if (self.weekNumbers) clearNode(self.weekNumbers);\n        var frag = document.createDocumentFragment();\n\n        for (var i = 0; i < self.config.showMonths; i++) {\n          var d = new Date(self.currentYear, self.currentMonth, 1);\n          d.setMonth(self.currentMonth + i);\n          frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n          onMouseOver();\n        }\n      }\n\n      function buildMonth() {\n        var container = createElement(\"div\", \"flatpickr-month\");\n        var monthNavFragment = window.document.createDocumentFragment();\n        var monthElement = createElement(\"span\", \"cur-month\");\n        var yearInput = createNumberInput(\"cur-year\", {\n          tabindex: \"-1\"\n        });\n        var yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) yearElement.setAttribute(\"data-min\", self.config.minDate.getFullYear().toString());\n\n        if (self.config.maxDate) {\n          yearElement.setAttribute(\"data-max\", self.config.maxDate.getFullYear().toString());\n          yearElement.disabled = !!self.config.minDate && self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n\n        var currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n          container: container,\n          yearElement: yearElement,\n          monthElement: monthElement\n        };\n      }\n\n      function buildMonths() {\n        clearNode(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n\n        for (var m = self.config.showMonths; m--;) {\n          var month = buildMonth();\n          self.yearElements.push(month.yearElement);\n          self.monthElements.push(month.monthElement);\n          self.monthNav.appendChild(month.container);\n        }\n\n        self.monthNav.appendChild(self.nextMonthNav);\n      }\n\n      function buildMonthNav() {\n        self.monthNav = createElement(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n          get: function get() {\n            return self.__hidePrevMonthArrow;\n          },\n          set: function set(bool) {\n            if (self.__hidePrevMonthArrow !== bool) {\n              toggleClass(self.prevMonthNav, \"disabled\", bool);\n              self.__hidePrevMonthArrow = bool;\n            }\n          }\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n          get: function get() {\n            return self.__hideNextMonthArrow;\n          },\n          set: function set(bool) {\n            if (self.__hideNextMonthArrow !== bool) {\n              toggleClass(self.nextMonthNav, \"disabled\", bool);\n              self.__hideNextMonthArrow = bool;\n            }\n          }\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n      }\n\n      function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar) self.calendarContainer.classList.add(\"noCalendar\");\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        var separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n        var hourInput = createNumberInput(\"flatpickr-hour\");\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        var minuteInput = createNumberInput(\"flatpickr-minute\");\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getHours() : self.config.time_24hr ? self.config.defaultHour : military2ampm(self.config.defaultHour));\n        self.minuteElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getMinutes() : self.config.defaultMinute);\n        self.hourElement.setAttribute(\"data-step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"data-step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"data-min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"data-max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.minuteElement.setAttribute(\"data-min\", \"0\");\n        self.minuteElement.setAttribute(\"data-max\", \"59\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr) self.timeContainer.classList.add(\"time24hr\");\n\n        if (self.config.enableSeconds) {\n          self.timeContainer.classList.add(\"hasSeconds\");\n          var secondInput = createNumberInput(\"flatpickr-second\");\n          self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n          self.secondElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getSeconds() : self.config.defaultSeconds);\n          self.secondElement.setAttribute(\"data-step\", self.minuteElement.getAttribute(\"data-step\"));\n          self.secondElement.setAttribute(\"data-min\", self.minuteElement.getAttribute(\"data-min\"));\n          self.secondElement.setAttribute(\"data-max\", self.minuteElement.getAttribute(\"data-max\"));\n          self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n          self.timeContainer.appendChild(secondInput);\n        }\n\n        if (!self.config.time_24hr) {\n          self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj ? self.hourElement.value : self.config.defaultHour) > 11)]);\n          self.amPM.title = self.l10n.toggleTitle;\n          self.amPM.tabIndex = -1;\n          self.timeContainer.appendChild(self.amPM);\n        }\n\n        return self.timeContainer;\n      }\n\n      function buildWeekdays() {\n        if (!self.weekdayContainer) self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");else clearNode(self.weekdayContainer);\n\n        for (var i = self.config.showMonths; i--;) {\n          var container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n          self.weekdayContainer.appendChild(container);\n        }\n\n        updateWeekdays();\n        return self.weekdayContainer;\n      }\n\n      function updateWeekdays() {\n        var firstDayOfWeek = self.l10n.firstDayOfWeek;\n        var weekdays = self.l10n.weekdays.shorthand.concat();\n\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n          weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));\n        }\n\n        for (var i = self.config.showMonths; i--;) {\n          self.weekdayContainer.children[i].innerHTML = \"\\n      <span class=flatpickr-weekday>\\n        \" + weekdays.join(\"</span><span class=flatpickr-weekday>\") + \"\\n      </span>\\n      \";\n        }\n      }\n\n      function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        var weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        var weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n          weekWrapper: weekWrapper,\n          weekNumbers: weekNumbers\n        };\n      }\n\n      function changeMonth(value, is_offset) {\n        if (is_offset === void 0) {\n          is_offset = true;\n        }\n\n        var delta = is_offset ? value : value - self.currentMonth;\n        if (delta < 0 && self._hidePrevMonthArrow === true || delta > 0 && self._hideNextMonthArrow === true) return;\n        self.currentMonth += delta;\n\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n          self.currentYear += self.currentMonth > 11 ? 1 : -1;\n          self.currentMonth = (self.currentMonth + 12) % 12;\n          triggerEvent(\"onYearChange\");\n        }\n\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n      }\n\n      function clear(triggerChangeEvent) {\n        if (triggerChangeEvent === void 0) {\n          triggerChangeEvent = true;\n        }\n\n        self.input.value = \"\";\n        if (self.altInput !== undefined) self.altInput.value = \"\";\n        if (self.mobileInput !== undefined) self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        self.showTimeInput = false;\n\n        if (self.config.enableTime === true) {\n          setDefaultHours();\n        }\n\n        self.redraw();\n        if (triggerChangeEvent) triggerEvent(\"onChange\");\n      }\n\n      function close() {\n        self.isOpen = false;\n\n        if (!self.isMobile) {\n          self.calendarContainer.classList.remove(\"open\");\n\n          self._input.classList.remove(\"active\");\n        }\n\n        triggerEvent(\"onClose\");\n      }\n\n      function destroy() {\n        if (self.config !== undefined) triggerEvent(\"onDestroy\");\n\n        for (var i = self._handlers.length; i--;) {\n          var h = self._handlers[i];\n          h.element.removeEventListener(h.event, h.handler, h.options);\n        }\n\n        self._handlers = [];\n\n        if (self.mobileInput) {\n          if (self.mobileInput.parentNode) self.mobileInput.parentNode.removeChild(self.mobileInput);\n          self.mobileInput = undefined;\n        } else if (self.calendarContainer && self.calendarContainer.parentNode) {\n          if (self.config.static && self.calendarContainer.parentNode) {\n            var wrapper = self.calendarContainer.parentNode;\n            wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n\n            if (wrapper.parentNode) {\n              while (wrapper.firstChild) {\n                wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n              }\n\n              wrapper.parentNode.removeChild(wrapper);\n            }\n          } else self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n\n        if (self.altInput) {\n          self.input.type = \"text\";\n          if (self.altInput.parentNode) self.altInput.parentNode.removeChild(self.altInput);\n          delete self.altInput;\n        }\n\n        if (self.input) {\n          self.input.type = self.input._type;\n          self.input.classList.remove(\"flatpickr-input\");\n          self.input.removeAttribute(\"readonly\");\n          self.input.value = \"\";\n        }\n\n        [\"_showTimeInput\", \"latestSelectedDateObj\", \"_hideNextMonthArrow\", \"_hidePrevMonthArrow\", \"__hideNextMonthArrow\", \"__hidePrevMonthArrow\", \"isMobile\", \"isOpen\", \"selectedDateElem\", \"minDateHasTime\", \"maxDateHasTime\", \"days\", \"daysContainer\", \"_input\", \"_positionElement\", \"innerContainer\", \"rContainer\", \"monthNav\", \"todayDateElem\", \"calendarContainer\", \"weekdayContainer\", \"prevMonthNav\", \"nextMonthNav\", \"currentMonthElement\", \"currentYearElement\", \"navigationCurrentMonth\", \"selectedDateElem\", \"config\"].forEach(function (k) {\n          try {\n            delete self[k];\n          } catch (_) {}\n        });\n      }\n\n      function isCalendarElem(elem) {\n        if (self.config.appendTo && self.config.appendTo.contains(elem)) return true;\n        return self.calendarContainer.contains(elem);\n      }\n\n      function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n          var isCalendarElement = isCalendarElem(e.target);\n          var isInput = e.target === self.input || e.target === self.altInput || self.element.contains(e.target) || e.path && e.path.indexOf && (~e.path.indexOf(self.input) || ~e.path.indexOf(self.altInput));\n          var lostFocus = e.type === \"blur\" ? isInput && e.relatedTarget && !isCalendarElem(e.relatedTarget) : !isInput && !isCalendarElement;\n          var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {\n            return elem.contains(e.target);\n          });\n\n          if (lostFocus && isIgnored) {\n            self.close();\n\n            if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n              self.clear(false);\n              self.redraw();\n            }\n          }\n        }\n      }\n\n      function changeYear(newYear) {\n        if (!newYear || self.config.minDate && newYear < self.config.minDate.getFullYear() || self.config.maxDate && newYear > self.config.maxDate.getFullYear()) return;\n        var newYearNum = newYear,\n            isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n\n        if (self.config.maxDate && self.currentYear === self.config.maxDate.getFullYear()) {\n          self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        } else if (self.config.minDate && self.currentYear === self.config.minDate.getFullYear()) {\n          self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n\n        if (isNewYear) {\n          self.redraw();\n          triggerEvent(\"onYearChange\");\n        }\n      }\n\n      function isEnabled(date, timeless) {\n        if (timeless === void 0) {\n          timeless = true;\n        }\n\n        var dateToCheck = self.parseDate(date, undefined, timeless);\n        if (self.config.minDate && dateToCheck && compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0 || self.config.maxDate && dateToCheck && compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0) return false;\n        if (self.config.enable.length === 0 && self.config.disable.length === 0) return true;\n        if (dateToCheck === undefined) return false;\n        var bool = self.config.enable.length > 0,\n            array = bool ? self.config.enable : self.config.disable;\n\n        for (var i = 0, d; i < array.length; i++) {\n          d = array[i];\n          if (typeof d === \"function\" && d(dateToCheck)) return bool;else if (d instanceof Date && dateToCheck !== undefined && d.getTime() === dateToCheck.getTime()) return bool;else if (typeof d === \"string\" && dateToCheck !== undefined) {\n            var parsed = self.parseDate(d, undefined, true);\n            return parsed && parsed.getTime() === dateToCheck.getTime() ? bool : !bool;\n          } else if (typeof d === \"object\" && dateToCheck !== undefined && d.from && d.to && dateToCheck.getTime() >= d.from.getTime() && dateToCheck.getTime() <= d.to.getTime()) return bool;\n        }\n\n        return !bool;\n      }\n\n      function isInView(elem) {\n        if (self.daysContainer !== undefined) return elem.className.indexOf(\"hidden\") === -1 && self.daysContainer.contains(elem);\n        return false;\n      }\n\n      function onKeyDown(e) {\n        var isInput = e.target === self._input;\n        var allowInput = self.config.allowInput;\n        var allowKeydown = self.isOpen && (!allowInput || !isInput);\n        var allowInlineKeydown = self.config.inline && isInput && !allowInput;\n\n        if (e.keyCode === 13 && isInput) {\n          if (allowInput) {\n            self.setDate(self._input.value, true, e.target === self.altInput ? self.config.altFormat : self.config.dateFormat);\n            return e.target.blur();\n          } else self.open();\n        } else if (isCalendarElem(e.target) || allowKeydown || allowInlineKeydown) {\n          var isTimeObj = !!self.timeContainer && self.timeContainer.contains(e.target);\n\n          switch (e.keyCode) {\n            case 13:\n              if (isTimeObj) updateTime();else selectDate(e);\n              break;\n\n            case 27:\n              e.preventDefault();\n              focusAndClose();\n              break;\n\n            case 8:\n            case 46:\n              if (isInput && !self.config.allowInput) {\n                e.preventDefault();\n                self.clear();\n              }\n\n              break;\n\n            case 37:\n            case 39:\n              if (!isTimeObj) {\n                e.preventDefault();\n\n                if (self.daysContainer !== undefined && (allowInput === false || isInView(document.activeElement))) {\n                  var _delta = e.keyCode === 39 ? 1 : -1;\n\n                  if (!e.ctrlKey) focusOnDay(undefined, _delta);else {\n                    changeMonth(_delta);\n                    focusOnDay(getFirstAvailableDay(1), 0);\n                  }\n                }\n              } else if (self.hourElement) self.hourElement.focus();\n\n              break;\n\n            case 38:\n            case 40:\n              e.preventDefault();\n              var delta = e.keyCode === 40 ? 1 : -1;\n\n              if (self.daysContainer && e.target.$i !== undefined) {\n                if (e.ctrlKey) {\n                  changeYear(self.currentYear - delta);\n                  focusOnDay(getFirstAvailableDay(1), 0);\n                } else if (!isTimeObj) focusOnDay(undefined, delta * 7);\n              } else if (self.config.enableTime) {\n                if (!isTimeObj && self.hourElement) self.hourElement.focus();\n                updateTime(e);\n\n                self._debouncedChange();\n              }\n\n              break;\n\n            case 9:\n              if (!isTimeObj) {\n                self.element.focus();\n                break;\n              }\n\n              var elems = [self.hourElement, self.minuteElement, self.secondElement, self.amPM].filter(function (x) {\n                return x;\n              });\n              var i = elems.indexOf(e.target);\n\n              if (i !== -1) {\n                var target = elems[i + (e.shiftKey ? -1 : 1)];\n\n                if (target !== undefined) {\n                  e.preventDefault();\n                  target.focus();\n                } else {\n                  self.element.focus();\n                }\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        if (self.amPM !== undefined && e.target === self.amPM) {\n          switch (e.key) {\n            case self.l10n.amPM[0].charAt(0):\n            case self.l10n.amPM[0].charAt(0).toLowerCase():\n              self.amPM.textContent = self.l10n.amPM[0];\n              setHoursFromInputs();\n              updateValue();\n              break;\n\n            case self.l10n.amPM[1].charAt(0):\n            case self.l10n.amPM[1].charAt(0).toLowerCase():\n              self.amPM.textContent = self.l10n.amPM[1];\n              setHoursFromInputs();\n              updateValue();\n              break;\n          }\n        }\n\n        triggerEvent(\"onKeyDown\", e);\n      }\n\n      function onMouseOver(elem) {\n        if (self.selectedDates.length !== 1 || elem && (!elem.classList.contains(\"flatpickr-day\") || elem.classList.contains(\"disabled\"))) return;\n        var hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(),\n            initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(),\n            rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()),\n            rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime()),\n            lastDate = self.daysContainer.lastChild.lastChild.dateObj.getTime();\n        var containsDisabled = false;\n        var minRange = 0,\n            maxRange = 0;\n\n        for (var t = rangeStartDate; t < lastDate; t += duration.DAY) {\n          if (!isEnabled(new Date(t), true)) {\n            containsDisabled = containsDisabled || t > rangeStartDate && t < rangeEndDate;\n            if (t < initialDate && (!minRange || t > minRange)) minRange = t;else if (t > initialDate && (!maxRange || t < maxRange)) maxRange = t;\n          }\n        }\n\n        for (var m = 0; m < self.config.showMonths; m++) {\n          var month = self.daysContainer.children[m];\n          var prevMonth = self.daysContainer.children[m - 1];\n\n          var _loop = function _loop(i, l) {\n            var dayElem = month.children[i],\n                date = dayElem.dateObj;\n            var timestamp = date.getTime();\n            var outOfRange = minRange > 0 && timestamp < minRange || maxRange > 0 && timestamp > maxRange;\n\n            if (outOfRange) {\n              dayElem.classList.add(\"notAllowed\");\n              [\"inRange\", \"startRange\", \"endRange\"].forEach(function (c) {\n                dayElem.classList.remove(c);\n              });\n              return \"continue\";\n            } else if (containsDisabled && !outOfRange) return \"continue\";\n\n            [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach(function (c) {\n              dayElem.classList.remove(c);\n            });\n\n            if (elem !== undefined) {\n              elem.classList.add(hoverDate < self.selectedDates[0].getTime() ? \"startRange\" : \"endRange\");\n\n              if (month.contains(elem) || !(m > 0 && prevMonth && prevMonth.lastChild.dateObj.getTime() >= timestamp)) {\n                if (initialDate < hoverDate && timestamp === initialDate) dayElem.classList.add(\"startRange\");else if (initialDate > hoverDate && timestamp === initialDate) dayElem.classList.add(\"endRange\");\n                if (timestamp >= minRange && (maxRange === 0 || timestamp <= maxRange) && isBetween(timestamp, initialDate, hoverDate)) dayElem.classList.add(\"inRange\");\n              }\n            }\n          };\n\n          for (var i = 0, l = month.children.length; i < l; i++) {\n            var _ret = _loop(i, l);\n\n            if (_ret === \"continue\") continue;\n          }\n        }\n      }\n\n      function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline) positionCalendar();\n      }\n\n      function open(e, positionElement) {\n        if (positionElement === void 0) {\n          positionElement = self._positionElement;\n        }\n\n        if (self.isMobile === true) {\n          if (e) {\n            e.preventDefault();\n            e.target && e.target.blur();\n          }\n\n          if (self.mobileInput !== undefined) {\n            self.mobileInput.focus();\n            self.mobileInput.click();\n          }\n\n          triggerEvent(\"onOpen\");\n          return;\n        }\n\n        if (self._input.disabled || self.config.inline) return;\n        var wasOpen = self.isOpen;\n        self.isOpen = true;\n\n        if (!wasOpen) {\n          self.calendarContainer.classList.add(\"open\");\n\n          self._input.classList.add(\"active\");\n\n          triggerEvent(\"onOpen\");\n          positionCalendar(positionElement);\n        }\n\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n          if (self.selectedDates.length === 0) {\n            self.setDate(self.config.minDate !== undefined ? new Date(self.config.minDate.getTime()) : new Date(), false);\n            setDefaultHours();\n            updateValue();\n          }\n\n          if (self.config.allowInput === false && (e === undefined || !self.timeContainer.contains(e.relatedTarget))) {\n            setTimeout(function () {\n              return self.hourElement.select();\n            }, 50);\n          }\n        }\n      }\n\n      function minMaxDateSetter(type) {\n        return function (date) {\n          var dateObj = self.config[\"_\" + type + \"Date\"] = self.parseDate(date, self.config.dateFormat);\n          var inverseDateObj = self.config[\"_\" + (type === \"min\" ? \"max\" : \"min\") + \"Date\"];\n\n          if (dateObj !== undefined) {\n            self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] = dateObj.getHours() > 0 || dateObj.getMinutes() > 0 || dateObj.getSeconds() > 0;\n          }\n\n          if (self.selectedDates) {\n            self.selectedDates = self.selectedDates.filter(function (d) {\n              return isEnabled(d);\n            });\n            if (!self.selectedDates.length && type === \"min\") setHoursFromDate(dateObj);\n            updateValue();\n          }\n\n          if (self.daysContainer) {\n            redraw();\n            if (dateObj !== undefined) self.currentYearElement[type] = dateObj.getFullYear().toString();else self.currentYearElement.removeAttribute(type);\n            self.currentYearElement.disabled = !!inverseDateObj && dateObj !== undefined && inverseDateObj.getFullYear() === dateObj.getFullYear();\n          }\n        };\n      }\n\n      function parseConfig() {\n        var boolOpts = [\"wrap\", \"weekNumbers\", \"allowInput\", \"clickOpens\", \"time_24hr\", \"enableTime\", \"noCalendar\", \"altInput\", \"shorthandCurrentMonth\", \"inline\", \"static\", \"enableSeconds\", \"disableMobile\"];\n        var userConfig = Object.assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));\n        var formats$$1 = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n          get: function get() {\n            return self.config._enable;\n          },\n          set: function set(dates) {\n            self.config._enable = parseDateRules(dates);\n          }\n        });\n        Object.defineProperty(self.config, \"disable\", {\n          get: function get() {\n            return self.config._disable;\n          },\n          set: function set(dates) {\n            self.config._disable = parseDateRules(dates);\n          }\n        });\n        var timeMode = userConfig.mode === \"time\";\n\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n          formats$$1.dateFormat = userConfig.noCalendar || timeMode ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\") : flatpickr.defaultConfig.dateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n\n        if (userConfig.altInput && (userConfig.enableTime || timeMode) && !userConfig.altFormat) {\n          formats$$1.altFormat = userConfig.noCalendar || timeMode ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\") : flatpickr.defaultConfig.altFormat + (\" h:i\" + (userConfig.enableSeconds ? \":S\" : \"\") + \" K\");\n        }\n\n        Object.defineProperty(self.config, \"minDate\", {\n          get: function get() {\n            return self.config._minDate;\n          },\n          set: minMaxDateSetter(\"min\")\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n          get: function get() {\n            return self.config._maxDate;\n          },\n          set: minMaxDateSetter(\"max\")\n        });\n\n        var minMaxTimeSetter = function minMaxTimeSetter(type) {\n          return function (val) {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i\");\n          };\n        };\n\n        Object.defineProperty(self.config, \"minTime\", {\n          get: function get() {\n            return self.config._minTime;\n          },\n          set: minMaxTimeSetter(\"min\")\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n          get: function get() {\n            return self.config._maxTime;\n          },\n          set: minMaxTimeSetter(\"max\")\n        });\n\n        if (userConfig.mode === \"time\") {\n          self.config.noCalendar = true;\n          self.config.enableTime = true;\n        }\n\n        Object.assign(self.config, formats$$1, userConfig);\n\n        for (var i = 0; i < boolOpts.length; i++) {\n          self.config[boolOpts[i]] = self.config[boolOpts[i]] === true || self.config[boolOpts[i]] === \"true\";\n        }\n\n        HOOKS.filter(function (hook) {\n          return self.config[hook] !== undefined;\n        }).forEach(function (hook) {\n          self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile = !self.config.disableMobile && !self.config.inline && self.config.mode === \"single\" && !self.config.disable.length && !self.config.enable.length && !self.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n        for (var _i = 0; _i < self.config.plugins.length; _i++) {\n          var pluginConf = self.config.plugins[_i](self) || {};\n\n          for (var key in pluginConf) {\n            if (HOOKS.indexOf(key) > -1) {\n              self.config[key] = arrayify(pluginConf[key]).map(bindToInstance).concat(self.config[key]);\n            } else if (typeof userConfig[key] === \"undefined\") self.config[key] = pluginConf[key];\n          }\n        }\n\n        triggerEvent(\"onParseConfig\");\n      }\n\n      function setupLocale() {\n        if (typeof self.config.locale !== \"object\" && typeof flatpickr.l10ns[self.config.locale] === \"undefined\") self.config.errorHandler(new Error(\"flatpickr: invalid locale \" + self.config.locale));\n        self.l10n = Object.assign({}, flatpickr.l10ns.default, typeof self.config.locale === \"object\" ? self.config.locale : self.config.locale !== \"default\" ? flatpickr.l10ns[self.config.locale] : undefined);\n        tokenRegex.K = \"(\" + self.l10n.amPM[0] + \"|\" + self.l10n.amPM[1] + \"|\" + self.l10n.amPM[0].toLowerCase() + \"|\" + self.l10n.amPM[1].toLowerCase() + \")\";\n        self.formatDate = createDateFormatter(self);\n        self.parseDate = createDateParser({\n          config: self.config,\n          l10n: self.l10n\n        });\n      }\n\n      function positionCalendar(customPositionElement) {\n        if (self.calendarContainer === undefined) return;\n        triggerEvent(\"onPreCalendarPosition\");\n        var positionElement = customPositionElement || self._positionElement;\n        var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, function (acc, child) {\n          return acc + child.offsetHeight;\n        }, 0),\n            calendarWidth = self.calendarContainer.offsetWidth,\n            configPos = self.config.position.split(\" \"),\n            configPosVertical = configPos[0],\n            configPosHorizontal = configPos.length > 1 ? configPos[1] : null,\n            inputBounds = positionElement.getBoundingClientRect(),\n            distanceFromBottom = window.innerHeight - inputBounds.bottom,\n            showOnTop = configPosVertical === \"above\" || configPosVertical !== \"below\" && distanceFromBottom < calendarHeight && inputBounds.top > calendarHeight;\n        var top = window.pageYOffset + inputBounds.top + (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline) return;\n        var left = window.pageXOffset + inputBounds.left - (configPosHorizontal != null && configPosHorizontal === \"center\" ? (calendarWidth - inputBounds.width) / 2 : 0);\n        var right = window.document.body.offsetWidth - inputBounds.right;\n        var rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static) return;\n        self.calendarContainer.style.top = top + \"px\";\n\n        if (!rightMost) {\n          self.calendarContainer.style.left = left + \"px\";\n          self.calendarContainer.style.right = \"auto\";\n        } else {\n          self.calendarContainer.style.left = \"auto\";\n          self.calendarContainer.style.right = right + \"px\";\n        }\n      }\n\n      function redraw() {\n        if (self.config.noCalendar || self.isMobile) return;\n        updateNavigationCurrentMonth();\n        buildDays();\n      }\n\n      function focusAndClose() {\n        self._input.focus();\n\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 || navigator.msMaxTouchPoints !== undefined) {\n          setTimeout(self.close, 0);\n        } else {\n          self.close();\n        }\n      }\n\n      function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        var isSelectable = function isSelectable(day) {\n          return day.classList && day.classList.contains(\"flatpickr-day\") && !day.classList.contains(\"disabled\") && !day.classList.contains(\"notAllowed\");\n        };\n\n        var t = findParent(e.target, isSelectable);\n        if (t === undefined) return;\n        var target = t;\n        var selectedDate = self.latestSelectedDateObj = new Date(target.dateObj.getTime());\n        var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth || selectedDate.getMonth() > self.currentMonth + self.config.showMonths - 1) && self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\") self.selectedDates = [selectedDate];else if (self.config.mode === \"multiple\") {\n          var selectedIndex = isDateSelected(selectedDate);\n          if (selectedIndex) self.selectedDates.splice(parseInt(selectedIndex), 1);else self.selectedDates.push(selectedDate);\n        } else if (self.config.mode === \"range\") {\n          if (self.selectedDates.length === 2) self.clear(false);\n          self.selectedDates.push(selectedDate);\n          if (compareDates(selectedDate, self.selectedDates[0], true) !== 0) self.selectedDates.sort(function (a, b) {\n            return a.getTime() - b.getTime();\n          });\n        }\n        setHoursFromInputs();\n\n        if (shouldChangeMonth) {\n          var isNewYear = self.currentYear !== selectedDate.getFullYear();\n          self.currentYear = selectedDate.getFullYear();\n          self.currentMonth = selectedDate.getMonth();\n          if (isNewYear) triggerEvent(\"onYearChange\");\n          triggerEvent(\"onMonthChange\");\n        }\n\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (self.config.enableTime) setTimeout(function () {\n          return self.showTimeInput = true;\n        }, 50);\n        if (!shouldChangeMonth && self.config.mode !== \"range\" && self.config.showMonths === 1) focusOnDayElem(target);else self.selectedDateElem && self.selectedDateElem.focus();\n        if (self.hourElement !== undefined) setTimeout(function () {\n          return self.hourElement !== undefined && self.hourElement.select();\n        }, 451);\n\n        if (self.config.closeOnSelect) {\n          var single = self.config.mode === \"single\" && !self.config.enableTime;\n          var range = self.config.mode === \"range\" && self.selectedDates.length === 2 && !self.config.enableTime;\n\n          if (single || range) {\n            focusAndClose();\n          }\n        }\n\n        triggerChange();\n      }\n\n      var CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays]\n      };\n\n      function set(option, value) {\n        if (option !== null && typeof option === \"object\") Object.assign(self.config, option);else {\n          self.config[option] = value;\n          if (CALLBACKS[option] !== undefined) CALLBACKS[option].forEach(function (x) {\n            return x();\n          });else if (HOOKS.indexOf(option) > -1) self.config[option] = arrayify(value);\n        }\n        self.redraw();\n        jumpToDate();\n        updateValue(false);\n      }\n\n      function setSelectedDate(inputDate, format) {\n        var dates = [];\n        if (inputDate instanceof Array) dates = inputDate.map(function (d) {\n          return self.parseDate(d, format);\n        });else if (inputDate instanceof Date || typeof inputDate === \"number\") dates = [self.parseDate(inputDate, format)];else if (typeof inputDate === \"string\") {\n          switch (self.config.mode) {\n            case \"single\":\n            case \"time\":\n              dates = [self.parseDate(inputDate, format)];\n              break;\n\n            case \"multiple\":\n              dates = inputDate.split(self.config.conjunction).map(function (date) {\n                return self.parseDate(date, format);\n              });\n              break;\n\n            case \"range\":\n              dates = inputDate.split(self.l10n.rangeSeparator).map(function (date) {\n                return self.parseDate(date, format);\n              });\n              break;\n\n            default:\n              break;\n          }\n        } else self.config.errorHandler(new Error(\"Invalid date supplied: \" + JSON.stringify(inputDate)));\n        self.selectedDates = dates.filter(function (d) {\n          return d instanceof Date && isEnabled(d, false);\n        });\n        if (self.config.mode === \"range\") self.selectedDates.sort(function (a, b) {\n          return a.getTime() - b.getTime();\n        });\n      }\n\n      function setDate(date, triggerChange, format) {\n        if (triggerChange === void 0) {\n          triggerChange = false;\n        }\n\n        if (format === void 0) {\n          format = self.config.dateFormat;\n        }\n\n        if (date !== 0 && !date || date instanceof Array && date.length === 0) return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.showTimeInput = self.selectedDates.length > 0;\n        self.latestSelectedDateObj = self.selectedDates[0];\n        self.redraw();\n        jumpToDate();\n        setHoursFromDate();\n        updateValue(triggerChange);\n        if (triggerChange) triggerEvent(\"onChange\");\n      }\n\n      function parseDateRules(arr) {\n        return arr.slice().map(function (rule) {\n          if (typeof rule === \"string\" || typeof rule === \"number\" || rule instanceof Date) {\n            return self.parseDate(rule, undefined, true);\n          } else if (rule && typeof rule === \"object\" && rule.from && rule.to) return {\n            from: self.parseDate(rule.from, undefined),\n            to: self.parseDate(rule.to, undefined)\n          };\n\n          return rule;\n        }).filter(function (x) {\n          return x;\n        });\n      }\n\n      function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        var preloadedDate = self.config.defaultDate || ((self.input.nodeName === \"INPUT\" || self.input.nodeName === \"TEXTAREA\") && self.input.placeholder && self.input.value === self.input.placeholder ? null : self.input.value);\n        if (preloadedDate) setSelectedDate(preloadedDate, self.config.dateFormat);\n        var initialDate = self.selectedDates.length > 0 ? self.selectedDates[0] : self.config.minDate && self.config.minDate.getTime() > self.now.getTime() ? self.config.minDate : self.config.maxDate && self.config.maxDate.getTime() < self.now.getTime() ? self.config.maxDate : self.now;\n        self.currentYear = initialDate.getFullYear();\n        self.currentMonth = initialDate.getMonth();\n        if (self.selectedDates.length > 0) self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined) self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined) self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime = !!self.config.minDate && (self.config.minDate.getHours() > 0 || self.config.minDate.getMinutes() > 0 || self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime = !!self.config.maxDate && (self.config.maxDate.getHours() > 0 || self.config.maxDate.getMinutes() > 0 || self.config.maxDate.getSeconds() > 0);\n        Object.defineProperty(self, \"showTimeInput\", {\n          get: function get() {\n            return self._showTimeInput;\n          },\n          set: function set(bool) {\n            self._showTimeInput = bool;\n            if (self.calendarContainer) toggleClass(self.calendarContainer, \"showTimeInput\", bool);\n            self.isOpen && positionCalendar();\n          }\n        });\n      }\n\n      function setupInputs() {\n        self.input = self.config.wrap ? element.querySelector(\"[data-input]\") : element;\n\n        if (!self.input) {\n          self.config.errorHandler(new Error(\"Invalid input element specified\"));\n          return;\n        }\n\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n\n        if (self.config.altInput) {\n          self.altInput = createElement(self.input.nodeName, self.input.className + \" \" + self.config.altInputClass);\n          self._input = self.altInput;\n          self.altInput.placeholder = self.input.placeholder;\n          self.altInput.disabled = self.input.disabled;\n          self.altInput.required = self.input.required;\n          self.altInput.tabIndex = self.input.tabIndex;\n          self.altInput.type = \"text\";\n          self.input.setAttribute(\"type\", \"hidden\");\n          if (!self.config.static && self.input.parentNode) self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n\n        if (!self.config.allowInput) self._input.setAttribute(\"readonly\", \"readonly\");\n        self._positionElement = self.config.positionElement || self._input;\n      }\n\n      function setupMobile() {\n        var inputType = self.config.enableTime ? self.config.noCalendar ? \"time\" : \"datetime-local\" : \"date\";\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.step = self.input.getAttribute(\"step\") || \"any\";\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr = inputType === \"datetime-local\" ? \"Y-m-d\\\\TH:i:S\" : inputType === \"date\" ? \"Y-m-d\" : \"H:i:S\";\n\n        if (self.selectedDates.length > 0) {\n          self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n\n        if (self.config.minDate) self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate) self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined) self.altInput.type = \"hidden\";\n\n        try {\n          if (self.input.parentNode) self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        } catch (_a) {}\n\n        bind(self.mobileInput, \"change\", function (e) {\n          self.setDate(e.target.value, false, self.mobileFormatStr);\n          triggerEvent(\"onChange\");\n          triggerEvent(\"onClose\");\n        });\n      }\n\n      function toggle(e) {\n        if (self.isOpen === true) return self.close();\n        self.open(e);\n      }\n\n      function triggerEvent(event, data) {\n        if (self.config === undefined) return;\n        var hooks = self.config[event];\n\n        if (hooks !== undefined && hooks.length > 0) {\n          for (var i = 0; hooks[i] && i < hooks.length; i++) {\n            hooks[i](self.selectedDates, self.input.value, self, data);\n          }\n        }\n\n        if (event === \"onChange\") {\n          self.input.dispatchEvent(createEvent(\"change\"));\n          self.input.dispatchEvent(createEvent(\"input\"));\n        }\n      }\n\n      function createEvent(name) {\n        var e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n      }\n\n      function isDateSelected(date) {\n        for (var i = 0; i < self.selectedDates.length; i++) {\n          if (compareDates(self.selectedDates[i], date) === 0) return \"\" + i;\n        }\n\n        return false;\n      }\n\n      function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2) return false;\n        return compareDates(date, self.selectedDates[0]) >= 0 && compareDates(date, self.selectedDates[1]) <= 0;\n      }\n\n      function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav) return;\n        self.yearElements.forEach(function (yearElement, i) {\n          var d = new Date(self.currentYear, self.currentMonth, 1);\n          d.setMonth(self.currentMonth + i);\n          self.monthElements[i].textContent = monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n          yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow = self.config.minDate !== undefined && (self.currentYear === self.config.minDate.getFullYear() ? self.currentMonth <= self.config.minDate.getMonth() : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow = self.config.maxDate !== undefined && (self.currentYear === self.config.maxDate.getFullYear() ? self.currentMonth + 1 > self.config.maxDate.getMonth() : self.currentYear > self.config.maxDate.getFullYear());\n      }\n\n      function getDateStr(format) {\n        return self.selectedDates.map(function (dObj) {\n          return self.formatDate(dObj, format);\n        }).filter(function (d, i, arr) {\n          return self.config.mode !== \"range\" || self.config.enableTime || arr.indexOf(d) === i;\n        }).join(self.config.mode !== \"range\" ? self.config.conjunction : self.l10n.rangeSeparator);\n      }\n\n      function updateValue(triggerChange) {\n        if (triggerChange === void 0) {\n          triggerChange = true;\n        }\n\n        if (self.selectedDates.length === 0) return self.clear(triggerChange);\n\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n          self.mobileInput.value = self.latestSelectedDateObj !== undefined ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr) : \"\";\n        }\n\n        self.input.value = getDateStr(self.config.dateFormat);\n\n        if (self.altInput !== undefined) {\n          self.altInput.value = getDateStr(self.config.altFormat);\n        }\n\n        if (triggerChange !== false) triggerEvent(\"onValueUpdate\");\n      }\n\n      function onMonthNavClick(e) {\n        e.preventDefault();\n        var isPrevMonth = self.prevMonthNav.contains(e.target);\n        var isNextMonth = self.nextMonthNav.contains(e.target);\n\n        if (isPrevMonth || isNextMonth) {\n          changeMonth(isPrevMonth ? -1 : 1);\n        } else if (self.yearElements.indexOf(e.target) >= 0) {\n          e.target.select();\n        } else if (e.target.classList.contains(\"arrowUp\")) {\n          self.changeYear(self.currentYear + 1);\n        } else if (e.target.classList.contains(\"arrowDown\")) {\n          self.changeYear(self.currentYear - 1);\n        }\n      }\n\n      function timeWrapper(e) {\n        e.preventDefault();\n        var isKeyDown = e.type === \"keydown\",\n            input = e.target;\n\n        if (self.amPM !== undefined && e.target === self.amPM) {\n          self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n\n        var min = parseFloat(input.getAttribute(\"data-min\")),\n            max = parseFloat(input.getAttribute(\"data-max\")),\n            step = parseFloat(input.getAttribute(\"data-step\")),\n            curValue = parseInt(input.value, 10),\n            delta = e.delta || (isKeyDown ? e.which === 38 ? 1 : -1 : 0);\n        var newValue = curValue + step * delta;\n\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n          var isHourElem = input === self.hourElement,\n              isMinuteElem = input === self.minuteElement;\n\n          if (newValue < min) {\n            newValue = max + newValue + int(!isHourElem) + (int(isHourElem) && int(!self.amPM));\n            if (isMinuteElem) incrementNumInput(undefined, -1, self.hourElement);\n          } else if (newValue > max) {\n            newValue = input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n            if (isMinuteElem) incrementNumInput(undefined, 1, self.hourElement);\n          }\n\n          if (self.amPM && isHourElem && (step === 1 ? newValue + curValue === 23 : Math.abs(newValue - curValue) > step)) {\n            self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n          }\n\n          input.value = pad(newValue);\n        }\n      }\n\n      init();\n      return self;\n    }\n\n    function _flatpickr(nodeList, config) {\n      var nodes = Array.prototype.slice.call(nodeList);\n      var instances = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n\n        try {\n          if (node.getAttribute(\"data-fp-omit\") !== null) continue;\n\n          if (node._flatpickr !== undefined) {\n            node._flatpickr.destroy();\n\n            node._flatpickr = undefined;\n          }\n\n          node._flatpickr = FlatpickrInstance(node, config || {});\n          instances.push(node._flatpickr);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      return instances.length === 1 ? instances[0] : instances;\n    }\n\n    if (typeof HTMLElement !== \"undefined\") {\n      HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n      };\n\n      HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n      };\n    }\n\n    var flatpickr = function flatpickr(selector, config) {\n      if (selector instanceof NodeList) return _flatpickr(selector, config);else if (typeof selector === \"string\") return _flatpickr(window.document.querySelectorAll(selector), config);\n      return _flatpickr([selector], config);\n    };\n\n    flatpickr.defaultConfig = defaults;\n    flatpickr.l10ns = {\n      en: Object.assign({}, english),\n      default: Object.assign({}, english)\n    };\n\n    flatpickr.localize = function (l10n) {\n      flatpickr.l10ns.default = Object.assign({}, flatpickr.l10ns.default, l10n);\n    };\n\n    flatpickr.setDefaults = function (config) {\n      flatpickr.defaultConfig = Object.assign({}, flatpickr.defaultConfig, config);\n    };\n\n    flatpickr.parseDate = createDateParser({});\n    flatpickr.formatDate = createDateFormatter({});\n    flatpickr.compareDates = compareDates;\n\n    if (typeof jQuery !== \"undefined\") {\n      jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n      };\n    }\n\n    Date.prototype.fp_incr = function (days) {\n      return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n    };\n\n    if (typeof window !== \"undefined\") {\n      window.flatpickr = flatpickr;\n    }\n\n    return flatpickr;\n\n})));\n","/* Inspire Tree DOM\n * @version 4.0.6\n * https://github.com/helion3/inspire-tree-dom\n * @copyright Copyright 2015 Helion3, and other contributors\n * @license Licensed under MIT\n *          see https://github.com/helion3/inspire-tree-dom/blob/master/LICENSE\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('inspire-tree')) :\n    typeof define === 'function' && define.amd ? define(['lodash', 'inspire-tree'], factory) :\n    (global.InspireTreeDOM = factory(global._,global.InspireTree));\n}(this, (function (_,InspireTree) { 'use strict';\n\n    InspireTree = InspireTree && InspireTree.hasOwnProperty('default') ? InspireTree['default'] : InspireTree;\n\n    var NO_OP = '$NO_OP';\r\n    var ERROR_MSG = 'a runtime error occured! Use Inferno in development environment to find the error.';\r\n    var isBrowser = !!(typeof window !== 'undefined' && window.document);\r\n    var isArray = Array.isArray;\r\n    function isStringOrNumber(o) {\r\n        var type = typeof o;\r\n        return type === 'string' || type === 'number';\r\n    }\r\n    function isNullOrUndef(o) {\r\n        return isUndefined(o) || isNull(o);\r\n    }\r\n    function isInvalid(o) {\r\n        return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n    }\r\n    function isFunction(o) {\r\n        return typeof o === 'function';\r\n    }\r\n    function isString(o) {\r\n        return typeof o === 'string';\r\n    }\r\n    function isNumber(o) {\r\n        return typeof o === 'number';\r\n    }\r\n    function isNull(o) {\r\n        return o === null;\r\n    }\r\n    function isTrue(o) {\r\n        return o === true;\r\n    }\r\n    function isUndefined(o) {\r\n        return o === void 0;\r\n    }\r\n    function throwError(message) {\r\n        if (!message) {\r\n            message = ERROR_MSG;\r\n        }\r\n        throw new Error((\"Inferno Error: \" + message));\r\n    }\r\n    function combineFrom(first, second) {\r\n        var out = {};\r\n        if (first) {\r\n            for (var key in first) {\r\n                out[key] = first[key];\r\n            }\r\n        }\r\n        if (second) {\r\n            for (var key$1 in second) {\r\n                out[key$1] = second[key$1];\r\n            }\r\n        }\r\n        return out;\r\n    }\n\n    var keyPrefix = '$';\r\n    function getVNode(childFlags, children, className, flags, key, props, ref, type) {\r\n        return {\r\n            childFlags: childFlags,\r\n            children: children,\r\n            className: className,\r\n            dom: null,\r\n            flags: flags,\r\n            key: key === void 0 ? null : key,\r\n            parentVNode: null,\r\n            props: props === void 0 ? null : props,\r\n            ref: ref === void 0 ? null : ref,\r\n            type: type\r\n        };\r\n    }\r\n    function createVNode(flags, type, className, children, childFlags, props, key, ref) {\r\n        var childFlag = childFlags === void 0 ? 1 /* HasInvalidChildren */ : childFlags;\r\n        var vNode = getVNode(childFlag, children, className, flags, key, props, ref, type);\r\n        if (childFlag === 0 /* UnknownChildren */) {\r\n            normalizeChildren(vNode, vNode.children);\r\n        }\r\n        return vNode;\r\n    }\r\n    function createComponentVNode(flags, type, props, key, ref) {\r\n        if ((flags & 2 /* ComponentUnknown */) > 0) {\r\n            flags = type.prototype && isFunction(type.prototype.render) ? 4 /* ComponentClass */ : 8 /* ComponentFunction */;\r\n        }\r\n        // set default props\r\n        var defaultProps = type.defaultProps;\r\n        if (!isNullOrUndef(defaultProps)) {\r\n            if (!props) {\r\n                props = {}; // Props can be referenced and modified at application level so always create new object\r\n            }\r\n            for (var prop in defaultProps) {\r\n                if (isUndefined(props[prop])) {\r\n                    props[prop] = defaultProps[prop];\r\n                }\r\n            }\r\n        }\r\n        if ((flags & 8 /* ComponentFunction */) > 0) {\r\n            var defaultHooks = type.defaultHooks;\r\n            if (!isNullOrUndef(defaultHooks)) {\r\n                if (!ref) {\r\n                    // As ref cannot be referenced from application level, we can use the same refs object\r\n                    ref = defaultHooks;\r\n                }\r\n                else {\r\n                    for (var prop$1 in defaultHooks) {\r\n                        if (isUndefined(ref[prop$1])) {\r\n                            ref[prop$1] = defaultHooks[prop$1];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var vNode = getVNode(1 /* HasInvalidChildren */, null, null, flags, key, props, ref, type);\r\n        var optsVNode = options.createVNode;\r\n        if (isFunction(optsVNode)) {\r\n            optsVNode(vNode);\r\n        }\r\n        return vNode;\r\n    }\r\n    function createTextVNode(text, key) {\r\n        return getVNode(1 /* HasInvalidChildren */, isNullOrUndef(text) ? '' : text, null, 16 /* Text */, key, null, null, null);\r\n    }\r\n    function normalizeProps(vNode) {\r\n        var props = vNode.props;\r\n        if (props) {\r\n            var flags = vNode.flags;\r\n            if (flags & 481 /* Element */) {\r\n                if (props.children !== void 0 && isNullOrUndef(vNode.children)) {\r\n                    normalizeChildren(vNode, props.children);\r\n                }\r\n                if (props.className !== void 0) {\r\n                    vNode.className = props.className || null;\r\n                    props.className = undefined;\r\n                }\r\n            }\r\n            if (props.key !== void 0) {\r\n                vNode.key = props.key;\r\n                props.key = undefined;\r\n            }\r\n            if (props.ref !== void 0) {\r\n                if (flags & 8 /* ComponentFunction */) {\r\n                    vNode.ref = combineFrom(vNode.ref, props.ref);\r\n                }\r\n                else {\r\n                    vNode.ref = props.ref;\r\n                }\r\n                props.ref = undefined;\r\n            }\r\n        }\r\n        return vNode;\r\n    }\r\n    function directClone(vNodeToClone) {\r\n        var newVNode;\r\n        var flags = vNodeToClone.flags;\r\n        if (flags & 14 /* Component */) {\r\n            var props;\r\n            var propsToClone = vNodeToClone.props;\r\n            if (!isNull(propsToClone)) {\r\n                props = {};\r\n                for (var key in propsToClone) {\r\n                    props[key] = propsToClone[key];\r\n                }\r\n            }\r\n            newVNode = createComponentVNode(flags, vNodeToClone.type, props, vNodeToClone.key, vNodeToClone.ref);\r\n        }\r\n        else if (flags & 481 /* Element */) {\r\n            newVNode = createVNode(flags, vNodeToClone.type, vNodeToClone.className, vNodeToClone.children, vNodeToClone.childFlags, vNodeToClone.props, vNodeToClone.key, vNodeToClone.ref);\r\n        }\r\n        else if (flags & 16 /* Text */) {\r\n            newVNode = createTextVNode(vNodeToClone.children, vNodeToClone.key);\r\n        }\r\n        else if (flags & 1024 /* Portal */) {\r\n            newVNode = vNodeToClone;\r\n        }\r\n        return newVNode;\r\n    }\r\n    function createVoidVNode() {\r\n        return createTextVNode('', null);\r\n    }\r\n    function _normalizeVNodes(nodes, result, index, currentKey) {\r\n        for (var len = nodes.length; index < len; index++) {\r\n            var n = nodes[index];\r\n            if (!isInvalid(n)) {\r\n                var newKey = currentKey + keyPrefix + index;\r\n                if (isArray(n)) {\r\n                    _normalizeVNodes(n, result, 0, newKey);\r\n                }\r\n                else {\r\n                    if (isStringOrNumber(n)) {\r\n                        n = createTextVNode(n, newKey);\r\n                    }\r\n                    else {\r\n                        var oldKey = n.key;\r\n                        var isPrefixedKey = isString(oldKey) && oldKey[0] === keyPrefix;\r\n                        if (!isNull(n.dom) || isPrefixedKey) {\r\n                            n = directClone(n);\r\n                        }\r\n                        if (isNull(oldKey) || isPrefixedKey) {\r\n                            n.key = newKey;\r\n                        }\r\n                        else {\r\n                            n.key = currentKey + oldKey;\r\n                        }\r\n                    }\r\n                    result.push(n);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function normalizeChildren(vNode, children) {\r\n        var newChildren;\r\n        var newChildFlags = 1 /* HasInvalidChildren */;\r\n        // Don't change children to match strict equal (===) true in patching\r\n        if (isInvalid(children)) {\r\n            newChildren = children;\r\n        }\r\n        else if (isString(children)) {\r\n            newChildFlags = 2 /* HasVNodeChildren */;\r\n            newChildren = createTextVNode(children);\r\n        }\r\n        else if (isNumber(children)) {\r\n            newChildFlags = 2 /* HasVNodeChildren */;\r\n            newChildren = createTextVNode(children + '');\r\n        }\r\n        else if (isArray(children)) {\r\n            var len = children.length;\r\n            if (len === 0) {\r\n                newChildren = null;\r\n                newChildFlags = 1 /* HasInvalidChildren */;\r\n            }\r\n            else {\r\n                // we assign $ which basically means we've flagged this array for future note\r\n                // if it comes back again, we need to clone it, as people are using it\r\n                // in an immutable way\r\n                // tslint:disable-next-line\r\n                if (Object.isFrozen(children) || children['$'] === true) {\r\n                    children = children.slice();\r\n                }\r\n                newChildFlags = 8 /* HasKeyedChildren */;\r\n                for (var i = 0; i < len; i++) {\r\n                    var n = children[i];\r\n                    if (isInvalid(n) || isArray(n)) {\r\n                        newChildren = newChildren || children.slice(0, i);\r\n                        _normalizeVNodes(children, newChildren, i, '');\r\n                        break;\r\n                    }\r\n                    else if (isStringOrNumber(n)) {\r\n                        newChildren = newChildren || children.slice(0, i);\r\n                        newChildren.push(createTextVNode(n, keyPrefix + i));\r\n                    }\r\n                    else {\r\n                        var key = n.key;\r\n                        var isNullDom = isNull(n.dom);\r\n                        var isNullKey = isNull(key);\r\n                        var isPrefixed = !isNullKey && key[0] === keyPrefix;\r\n                        if (!isNullDom || isNullKey || isPrefixed) {\r\n                            newChildren = newChildren || children.slice(0, i);\r\n                            if (!isNullDom || isPrefixed) {\r\n                                n = directClone(n);\r\n                            }\r\n                            if (isNullKey || isPrefixed) {\r\n                                n.key = keyPrefix + i;\r\n                            }\r\n                            newChildren.push(n);\r\n                        }\r\n                        else if (newChildren) {\r\n                            newChildren.push(n);\r\n                        }\r\n                    }\r\n                }\r\n                newChildren = newChildren || children;\r\n                newChildren.$ = true;\r\n            }\r\n        }\r\n        else {\r\n            newChildren = children;\r\n            if (!isNull(children.dom)) {\r\n                newChildren = directClone(children);\r\n            }\r\n            newChildFlags = 2 /* HasVNodeChildren */;\r\n        }\r\n        vNode.children = newChildren;\r\n        vNode.childFlags = newChildFlags;\r\n        return vNode;\r\n    }\r\n    var options = {\r\n        afterRender: null,\r\n        beforeRender: null,\r\n        createVNode: null,\r\n        renderComplete: null\r\n    };\n\n    var xlinkNS = 'http://www.w3.org/1999/xlink';\r\n    var xmlNS = 'http://www.w3.org/XML/1998/namespace';\r\n    var svgNS = 'http://www.w3.org/2000/svg';\r\n    var namespaces = {\r\n        'xlink:actuate': xlinkNS,\r\n        'xlink:arcrole': xlinkNS,\r\n        'xlink:href': xlinkNS,\r\n        'xlink:role': xlinkNS,\r\n        'xlink:show': xlinkNS,\r\n        'xlink:title': xlinkNS,\r\n        'xlink:type': xlinkNS,\r\n        'xml:base': xmlNS,\r\n        'xml:lang': xmlNS,\r\n        'xml:space': xmlNS\r\n    };\n\n    // We need EMPTY_OBJ defined in one place.\r\n    // Its used for comparison so we cant inline it into shared\r\n    var EMPTY_OBJ = {};\r\n    var LIFECYCLE = [];\r\n    function appendChild(parentDom, dom) {\r\n        parentDom.appendChild(dom);\r\n    }\r\n    function insertOrAppend(parentDom, newNode, nextNode) {\r\n        if (isNullOrUndef(nextNode)) {\r\n            appendChild(parentDom, newNode);\r\n        }\r\n        else {\r\n            parentDom.insertBefore(newNode, nextNode);\r\n        }\r\n    }\r\n    function documentCreateElement(tag, isSVG) {\r\n        if (isSVG === true) {\r\n            return document.createElementNS(svgNS, tag);\r\n        }\r\n        return document.createElement(tag);\r\n    }\r\n    function replaceChild(parentDom, newDom, lastDom) {\r\n        parentDom.replaceChild(newDom, lastDom);\r\n    }\r\n    function removeChild(parentDom, dom) {\r\n        parentDom.removeChild(dom);\r\n    }\r\n    function callAll(arrayFn) {\r\n        var listener;\r\n        while ((listener = arrayFn.shift()) !== undefined) {\r\n            listener();\r\n        }\r\n    }\n\n    var attachedEventCounts = {};\r\n    var attachedEvents = {};\r\n    function handleEvent(name, nextEvent, dom) {\r\n        var eventsLeft = attachedEventCounts[name];\r\n        var eventsObject = dom.$EV;\r\n        if (nextEvent) {\r\n            if (!eventsLeft) {\r\n                attachedEvents[name] = attachEventToDocument(name);\r\n                attachedEventCounts[name] = 0;\r\n            }\r\n            if (!eventsObject) {\r\n                eventsObject = dom.$EV = {};\r\n            }\r\n            if (!eventsObject[name]) {\r\n                attachedEventCounts[name]++;\r\n            }\r\n            eventsObject[name] = nextEvent;\r\n        }\r\n        else if (eventsObject && eventsObject[name]) {\r\n            attachedEventCounts[name]--;\r\n            if (eventsLeft === 1) {\r\n                document.removeEventListener(normalizeEventName(name), attachedEvents[name]);\r\n                attachedEvents[name] = null;\r\n            }\r\n            eventsObject[name] = nextEvent;\r\n        }\r\n    }\r\n    function dispatchEvents(event, target, isClick, name, eventData) {\r\n        var dom = target;\r\n        while (!isNull(dom)) {\r\n            // Html Nodes can be nested fe: span inside button in that scenario browser does not handle disabled attribute on parent,\r\n            // because the event listener is on document.body\r\n            // Don't process clicks on disabled elements\r\n            if (isClick && dom.disabled) {\r\n                return;\r\n            }\r\n            var eventsObject = dom.$EV;\r\n            if (eventsObject) {\r\n                var currentEvent = eventsObject[name];\r\n                if (currentEvent) {\r\n                    // linkEvent object\r\n                    eventData.dom = dom;\r\n                    if (currentEvent.event) {\r\n                        currentEvent.event(currentEvent.data, event);\r\n                    }\r\n                    else {\r\n                        currentEvent(event);\r\n                    }\r\n                    if (event.cancelBubble) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            dom = dom.parentNode;\r\n        }\r\n    }\r\n    function normalizeEventName(name) {\r\n        return name.substr(2).toLowerCase();\r\n    }\r\n    function stopPropagation() {\r\n        this.cancelBubble = true;\r\n        if (!this.immediatePropagationStopped) {\r\n            this.stopImmediatePropagation();\r\n        }\r\n    }\r\n    function attachEventToDocument(name) {\r\n        var docEvent = function (event) {\r\n            var type = event.type;\r\n            var isClick = type === 'click' || type === 'dblclick';\r\n            if (isClick && event.button !== 0) {\r\n                // Firefox incorrectly triggers click event for mid/right mouse buttons.\r\n                // This bug has been active for 12 years.\r\n                // https://bugzilla.mozilla.org/show_bug.cgi?id=184051\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n            event.stopPropagation = stopPropagation;\r\n            // Event data needs to be object to save reference to currentTarget getter\r\n            var eventData = {\r\n                dom: document\r\n            };\r\n            Object.defineProperty(event, 'currentTarget', {\r\n                configurable: true,\r\n                get: function get() {\r\n                    return eventData.dom;\r\n                }\r\n            });\r\n            dispatchEvents(event, event.target, isClick, name, eventData);\r\n            return;\r\n        };\r\n        document.addEventListener(normalizeEventName(name), docEvent);\r\n        return docEvent;\r\n    }\n\n    function isSameInnerHTML(dom, innerHTML) {\r\n        var tempdom = document.createElement('i');\r\n        tempdom.innerHTML = innerHTML;\r\n        return tempdom.innerHTML === dom.innerHTML;\r\n    }\r\n    function isSamePropsInnerHTML(dom, props) {\r\n        return Boolean(props && props.dangerouslySetInnerHTML && props.dangerouslySetInnerHTML.__html && isSameInnerHTML(dom, props.dangerouslySetInnerHTML.__html));\r\n    }\n\n    function triggerEventListener(props, methodName, e) {\r\n        if (props[methodName]) {\r\n            var listener = props[methodName];\r\n            if (listener.event) {\r\n                listener.event(listener.data, e);\r\n            }\r\n            else {\r\n                listener(e);\r\n            }\r\n        }\r\n        else {\r\n            var nativeListenerName = methodName.toLowerCase();\r\n            if (props[nativeListenerName]) {\r\n                props[nativeListenerName](e);\r\n            }\r\n        }\r\n    }\r\n    function createWrappedFunction(methodName, applyValue) {\r\n        var fnMethod = function (e) {\r\n            e.stopPropagation();\r\n            var vNode = this.$V;\r\n            // If vNode is gone by the time event fires, no-op\r\n            if (!vNode) {\r\n                return;\r\n            }\r\n            var props = vNode.props || EMPTY_OBJ;\r\n            var dom = vNode.dom;\r\n            if (isString(methodName)) {\r\n                triggerEventListener(props, methodName, e);\r\n            }\r\n            else {\r\n                for (var i = 0; i < methodName.length; i++) {\r\n                    triggerEventListener(props, methodName[i], e);\r\n                }\r\n            }\r\n            if (isFunction(applyValue)) {\r\n                var newVNode = this.$V;\r\n                var newProps = newVNode.props || EMPTY_OBJ;\r\n                applyValue(newProps, dom, false, newVNode);\r\n            }\r\n        };\r\n        Object.defineProperty(fnMethod, 'wrapped', {\r\n            configurable: false,\r\n            enumerable: false,\r\n            value: true,\r\n            writable: false\r\n        });\r\n        return fnMethod;\r\n    }\n\n    function isCheckedType(type) {\r\n        return type === 'checkbox' || type === 'radio';\r\n    }\r\n    var onTextInputChange = createWrappedFunction('onInput', applyValueInput);\r\n    var wrappedOnChange = createWrappedFunction(['onClick', 'onChange'], applyValueInput);\r\n    /* tslint:disable-next-line:no-empty */\r\n    function emptywrapper(event) {\r\n        event.stopPropagation();\r\n    }\r\n    emptywrapper.wrapped = true;\r\n    function inputEvents(dom, nextPropsOrEmpty) {\r\n        if (isCheckedType(nextPropsOrEmpty.type)) {\r\n            dom.onchange = wrappedOnChange;\r\n            dom.onclick = emptywrapper;\r\n        }\r\n        else {\r\n            dom.oninput = onTextInputChange;\r\n        }\r\n    }\r\n    function applyValueInput(nextPropsOrEmpty, dom) {\r\n        var type = nextPropsOrEmpty.type;\r\n        var value = nextPropsOrEmpty.value;\r\n        var checked = nextPropsOrEmpty.checked;\r\n        var multiple = nextPropsOrEmpty.multiple;\r\n        var defaultValue = nextPropsOrEmpty.defaultValue;\r\n        var hasValue = !isNullOrUndef(value);\r\n        if (type && type !== dom.type) {\r\n            dom.setAttribute('type', type);\r\n        }\r\n        if (!isNullOrUndef(multiple) && multiple !== dom.multiple) {\r\n            dom.multiple = multiple;\r\n        }\r\n        if (!isNullOrUndef(defaultValue) && !hasValue) {\r\n            dom.defaultValue = defaultValue + '';\r\n        }\r\n        if (isCheckedType(type)) {\r\n            if (hasValue) {\r\n                dom.value = value;\r\n            }\r\n            if (!isNullOrUndef(checked)) {\r\n                dom.checked = checked;\r\n            }\r\n        }\r\n        else {\r\n            if (hasValue && dom.value !== value) {\r\n                dom.defaultValue = value;\r\n                dom.value = value;\r\n            }\r\n            else if (!isNullOrUndef(checked)) {\r\n                dom.checked = checked;\r\n            }\r\n        }\r\n    }\n\n    function updateChildOptionGroup(vNode, value) {\r\n        var type = vNode.type;\r\n        if (type === 'optgroup') {\r\n            var children = vNode.children;\r\n            var childFlags = vNode.childFlags;\r\n            if (childFlags & 12 /* MultipleChildren */) {\r\n                for (var i = 0, len = children.length; i < len; i++) {\r\n                    updateChildOption(children[i], value);\r\n                }\r\n            }\r\n            else if (childFlags === 2 /* HasVNodeChildren */) {\r\n                updateChildOption(children, value);\r\n            }\r\n        }\r\n        else {\r\n            updateChildOption(vNode, value);\r\n        }\r\n    }\r\n    function updateChildOption(vNode, value) {\r\n        var props = vNode.props || EMPTY_OBJ;\r\n        var dom = vNode.dom;\r\n        // we do this as multiple may have changed\r\n        dom.value = props.value;\r\n        if ((isArray(value) && value.indexOf(props.value) !== -1) || props.value === value) {\r\n            dom.selected = true;\r\n        }\r\n        else if (!isNullOrUndef(value) || !isNullOrUndef(props.selected)) {\r\n            dom.selected = props.selected || false;\r\n        }\r\n    }\r\n    var onSelectChange = createWrappedFunction('onChange', applyValueSelect);\r\n    function selectEvents(dom) {\r\n        dom.onchange = onSelectChange;\r\n    }\r\n    function applyValueSelect(nextPropsOrEmpty, dom, mounting, vNode) {\r\n        var multiplePropInBoolean = Boolean(nextPropsOrEmpty.multiple);\r\n        if (!isNullOrUndef(nextPropsOrEmpty.multiple) && multiplePropInBoolean !== dom.multiple) {\r\n            dom.multiple = multiplePropInBoolean;\r\n        }\r\n        var childFlags = vNode.childFlags;\r\n        if ((childFlags & 1 /* HasInvalidChildren */) === 0) {\r\n            var children = vNode.children;\r\n            var value = nextPropsOrEmpty.value;\r\n            if (mounting && isNullOrUndef(value)) {\r\n                value = nextPropsOrEmpty.defaultValue;\r\n            }\r\n            if (childFlags & 12 /* MultipleChildren */) {\r\n                for (var i = 0, len = children.length; i < len; i++) {\r\n                    updateChildOptionGroup(children[i], value);\r\n                }\r\n            }\r\n            else if (childFlags === 2 /* HasVNodeChildren */) {\r\n                updateChildOptionGroup(children, value);\r\n            }\r\n        }\r\n    }\n\n    var onTextareaInputChange = createWrappedFunction('onInput', applyValueTextArea);\r\n    var wrappedOnChange$1 = createWrappedFunction('onChange');\r\n    function textAreaEvents(dom, nextPropsOrEmpty) {\r\n        dom.oninput = onTextareaInputChange;\r\n        if (nextPropsOrEmpty.onChange) {\r\n            dom.onchange = wrappedOnChange$1;\r\n        }\r\n    }\r\n    function applyValueTextArea(nextPropsOrEmpty, dom, mounting) {\r\n        var value = nextPropsOrEmpty.value;\r\n        var domValue = dom.value;\r\n        if (isNullOrUndef(value)) {\r\n            if (mounting) {\r\n                var defaultValue = nextPropsOrEmpty.defaultValue;\r\n                if (!isNullOrUndef(defaultValue) && defaultValue !== domValue) {\r\n                    dom.defaultValue = defaultValue;\r\n                    dom.value = defaultValue;\r\n                }\r\n            }\r\n        }\r\n        else if (domValue !== value) {\r\n            /* There is value so keep it controlled */\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n    }\n\n    /**\r\n     * There is currently no support for switching same input between controlled and nonControlled\r\n     * If that ever becomes a real issue, then re design controlled elements\r\n     * Currently user must choose either controlled or non-controlled and stick with that\r\n     */\r\n    function processElement(flags, vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n        if (flags & 64 /* InputElement */) {\r\n            applyValueInput(nextPropsOrEmpty, dom);\r\n        }\r\n        else if (flags & 256 /* SelectElement */) {\r\n            applyValueSelect(nextPropsOrEmpty, dom, mounting, vNode);\r\n        }\r\n        else if (flags & 128 /* TextareaElement */) {\r\n            applyValueTextArea(nextPropsOrEmpty, dom, mounting);\r\n        }\r\n        if (isControlled) {\r\n            dom.$V = vNode;\r\n        }\r\n    }\r\n    function addFormElementEventHandlers(flags, dom, nextPropsOrEmpty) {\r\n        if (flags & 64 /* InputElement */) {\r\n            inputEvents(dom, nextPropsOrEmpty);\r\n        }\r\n        else if (flags & 256 /* SelectElement */) {\r\n            selectEvents(dom);\r\n        }\r\n        else if (flags & 128 /* TextareaElement */) {\r\n            textAreaEvents(dom, nextPropsOrEmpty);\r\n        }\r\n    }\r\n    function isControlledFormElement(nextPropsOrEmpty) {\r\n        return nextPropsOrEmpty.type && isCheckedType(nextPropsOrEmpty.type) ? !isNullOrUndef(nextPropsOrEmpty.checked) : !isNullOrUndef(nextPropsOrEmpty.value);\r\n    }\n\n    function remove(vNode, parentDom) {\r\n        unmount(vNode);\r\n        if (parentDom && vNode.dom) {\r\n            removeChild(parentDom, vNode.dom);\r\n            // Let carbage collector free memory\r\n            vNode.dom = null;\r\n        }\r\n    }\r\n    function unmount(vNode) {\r\n        var flags = vNode.flags;\r\n        if (flags & 481 /* Element */) {\r\n            var ref = vNode.ref;\r\n            var props = vNode.props;\r\n            if (isFunction(ref)) {\r\n                ref(null);\r\n            }\r\n            var children = vNode.children;\r\n            var childFlags = vNode.childFlags;\r\n            if (childFlags & 12 /* MultipleChildren */) {\r\n                unmountAllChildren(children);\r\n            }\r\n            else if (childFlags === 2 /* HasVNodeChildren */) {\r\n                unmount(children);\r\n            }\r\n            if (!isNull(props)) {\r\n                for (var name in props) {\r\n                    switch (name) {\r\n                        case 'onClick':\r\n                        case 'onDblClick':\r\n                        case 'onFocusIn':\r\n                        case 'onFocusOut':\r\n                        case 'onKeyDown':\r\n                        case 'onKeyPress':\r\n                        case 'onKeyUp':\r\n                        case 'onMouseDown':\r\n                        case 'onMouseMove':\r\n                        case 'onMouseUp':\r\n                        case 'onSubmit':\r\n                        case 'onTouchEnd':\r\n                        case 'onTouchMove':\r\n                        case 'onTouchStart':\r\n                            handleEvent(name, null, vNode.dom);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var children$1 = vNode.children;\r\n            // Safe guard for crashed VNode\r\n            if (children$1) {\r\n                if (flags & 14 /* Component */) {\r\n                    var ref$1 = vNode.ref;\r\n                    if (flags & 4 /* ComponentClass */) {\r\n                        if (isFunction(children$1.componentWillUnmount)) {\r\n                            children$1.componentWillUnmount();\r\n                        }\r\n                        if (isFunction(ref$1)) {\r\n                            ref$1(null);\r\n                        }\r\n                        children$1.$UN = true;\r\n                        if (children$1.$LI) {\r\n                            unmount(children$1.$LI);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!isNullOrUndef(ref$1) && isFunction(ref$1.onComponentWillUnmount)) {\r\n                            ref$1.onComponentWillUnmount(vNode.dom, vNode.props || EMPTY_OBJ);\r\n                        }\r\n                        unmount(children$1);\r\n                    }\r\n                }\r\n                else if (flags & 1024 /* Portal */) {\r\n                    remove(children$1, vNode.type);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function unmountAllChildren(children) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            unmount(children[i]);\r\n        }\r\n    }\r\n    function removeAllChildren(dom, children) {\r\n        unmountAllChildren(children);\r\n        dom.textContent = '';\r\n    }\n\n    function createLinkEvent(linkEvent, nextValue) {\r\n        return function (e) {\r\n            linkEvent(nextValue.data, e);\r\n        };\r\n    }\r\n    function patchEvent(name, lastValue, nextValue, dom) {\r\n        var nameLowerCase = name.toLowerCase();\r\n        if (!isFunction(nextValue) && !isNullOrUndef(nextValue)) {\r\n            var linkEvent = nextValue.event;\r\n            if (linkEvent && isFunction(linkEvent)) {\r\n                dom[nameLowerCase] = createLinkEvent(linkEvent, nextValue);\r\n            }\r\n        }\r\n        else {\r\n            var domEvent = dom[nameLowerCase];\r\n            // if the function is wrapped, that means it's been controlled by a wrapper\r\n            if (!domEvent || !domEvent.wrapped) {\r\n                dom[nameLowerCase] = nextValue;\r\n            }\r\n        }\r\n    }\r\n    function getNumberStyleValue(style, value) {\r\n        switch (style) {\r\n            case 'animationIterationCount':\r\n            case 'borderImageOutset':\r\n            case 'borderImageSlice':\r\n            case 'borderImageWidth':\r\n            case 'boxFlex':\r\n            case 'boxFlexGroup':\r\n            case 'boxOrdinalGroup':\r\n            case 'columnCount':\r\n            case 'fillOpacity':\r\n            case 'flex':\r\n            case 'flexGrow':\r\n            case 'flexNegative':\r\n            case 'flexOrder':\r\n            case 'flexPositive':\r\n            case 'flexShrink':\r\n            case 'floodOpacity':\r\n            case 'fontWeight':\r\n            case 'gridColumn':\r\n            case 'gridRow':\r\n            case 'lineClamp':\r\n            case 'lineHeight':\r\n            case 'opacity':\r\n            case 'order':\r\n            case 'orphans':\r\n            case 'stopOpacity':\r\n            case 'strokeDasharray':\r\n            case 'strokeDashoffset':\r\n            case 'strokeMiterlimit':\r\n            case 'strokeOpacity':\r\n            case 'strokeWidth':\r\n            case 'tabSize':\r\n            case 'widows':\r\n            case 'zIndex':\r\n            case 'zoom':\r\n                return value;\r\n            default:\r\n                return value + 'px';\r\n        }\r\n    }\r\n    // We are assuming here that we come from patchProp routine\r\n    // -nextAttrValue cannot be null or undefined\r\n    function patchStyle(lastAttrValue, nextAttrValue, dom) {\r\n        var domStyle = dom.style;\r\n        var style;\r\n        var value;\r\n        if (isString(nextAttrValue)) {\r\n            domStyle.cssText = nextAttrValue;\r\n            return;\r\n        }\r\n        if (!isNullOrUndef(lastAttrValue) && !isString(lastAttrValue)) {\r\n            for (style in nextAttrValue) {\r\n                // do not add a hasOwnProperty check here, it affects performance\r\n                value = nextAttrValue[style];\r\n                if (value !== lastAttrValue[style]) {\r\n                    domStyle[style] = isNumber(value) ? getNumberStyleValue(style, value) : value;\r\n                }\r\n            }\r\n            for (style in lastAttrValue) {\r\n                if (isNullOrUndef(nextAttrValue[style])) {\r\n                    domStyle[style] = '';\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (style in nextAttrValue) {\r\n                value = nextAttrValue[style];\r\n                domStyle[style] = isNumber(value) ? getNumberStyleValue(style, value) : value;\r\n            }\r\n        }\r\n    }\r\n    function patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue, lastVNode) {\r\n        switch (prop) {\r\n            case 'onClick':\r\n            case 'onDblClick':\r\n            case 'onFocusIn':\r\n            case 'onFocusOut':\r\n            case 'onKeyDown':\r\n            case 'onKeyPress':\r\n            case 'onKeyUp':\r\n            case 'onMouseDown':\r\n            case 'onMouseMove':\r\n            case 'onMouseUp':\r\n            case 'onSubmit':\r\n            case 'onTouchEnd':\r\n            case 'onTouchMove':\r\n            case 'onTouchStart':\r\n                handleEvent(prop, nextValue, dom);\r\n                break;\r\n            case 'children':\r\n            case 'childrenType':\r\n            case 'className':\r\n            case 'defaultValue':\r\n            case 'key':\r\n            case 'multiple':\r\n            case 'ref':\r\n                break;\r\n            case 'autoFocus':\r\n                dom.autofocus = !!nextValue;\r\n                break;\r\n            case 'allowfullscreen':\r\n            case 'autoplay':\r\n            case 'capture':\r\n            case 'checked':\r\n            case 'controls':\r\n            case 'default':\r\n            case 'disabled':\r\n            case 'hidden':\r\n            case 'indeterminate':\r\n            case 'loop':\r\n            case 'muted':\r\n            case 'novalidate':\r\n            case 'open':\r\n            case 'readOnly':\r\n            case 'required':\r\n            case 'reversed':\r\n            case 'scoped':\r\n            case 'seamless':\r\n            case 'selected':\r\n                dom[prop] = !!nextValue;\r\n                break;\r\n            case 'defaultChecked':\r\n            case 'value':\r\n            case 'volume':\r\n                if (hasControlledValue && prop === 'value') {\r\n                    return;\r\n                }\r\n                var value = isNullOrUndef(nextValue) ? '' : nextValue;\r\n                if (dom[prop] !== value) {\r\n                    dom[prop] = value;\r\n                }\r\n                break;\r\n            case 'dangerouslySetInnerHTML':\r\n                var lastHtml = (lastValue && lastValue.__html) || '';\r\n                var nextHtml = (nextValue && nextValue.__html) || '';\r\n                if (lastHtml !== nextHtml) {\r\n                    if (!isNullOrUndef(nextHtml) && !isSameInnerHTML(dom, nextHtml)) {\r\n                        if (!isNull(lastVNode)) {\r\n                            if (lastVNode.childFlags & 12 /* MultipleChildren */) {\r\n                                unmountAllChildren(lastVNode.children);\r\n                            }\r\n                            else if (lastVNode.childFlags === 2 /* HasVNodeChildren */) {\r\n                                unmount(lastVNode.children);\r\n                            }\r\n                            lastVNode.children = null;\r\n                            lastVNode.childFlags = 1 /* HasInvalidChildren */;\r\n                        }\r\n                        dom.innerHTML = nextHtml;\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                if (prop[0] === 'o' && prop[1] === 'n') {\r\n                    patchEvent(prop, lastValue, nextValue, dom);\r\n                }\r\n                else if (isNullOrUndef(nextValue)) {\r\n                    dom.removeAttribute(prop);\r\n                }\r\n                else if (prop === 'style') {\r\n                    patchStyle(lastValue, nextValue, dom);\r\n                }\r\n                else if (isSVG && namespaces[prop]) {\r\n                    // We optimize for isSVG being false\r\n                    // If we end up in this path we can read property again\r\n                    dom.setAttributeNS(namespaces[prop], prop, nextValue);\r\n                }\r\n                else {\r\n                    dom.setAttribute(prop, nextValue);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    function mountProps(vNode, flags, props, dom, isSVG) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 448 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n            if (hasControlledValue) {\r\n                addFormElementEventHandlers(flags, dom, props);\r\n            }\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue, null);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\n\n    function createClassComponentInstance(vNode, Component, props, context) {\r\n        var instance = new Component(props, context);\r\n        vNode.children = instance;\r\n        instance.$V = vNode;\r\n        instance.$BS = false;\r\n        instance.context = context;\r\n        if (instance.props === EMPTY_OBJ) {\r\n            instance.props = props;\r\n        }\r\n        instance.$UN = false;\r\n        if (isFunction(instance.componentWillMount)) {\r\n            instance.$BR = true;\r\n            instance.componentWillMount();\r\n            if (instance.$PSS) {\r\n                var state = instance.state;\r\n                var pending = instance.$PS;\r\n                if (isNull(state)) {\r\n                    instance.state = pending;\r\n                }\r\n                else {\r\n                    for (var key in pending) {\r\n                        state[key] = pending[key];\r\n                    }\r\n                }\r\n                instance.$PSS = false;\r\n                instance.$PS = null;\r\n            }\r\n            instance.$BR = false;\r\n        }\r\n        if (isFunction(options.beforeRender)) {\r\n            options.beforeRender(instance);\r\n        }\r\n        var input = handleComponentInput(instance.render(props, instance.state, context), vNode);\r\n        var childContext;\r\n        if (isFunction(instance.getChildContext)) {\r\n            childContext = instance.getChildContext();\r\n        }\r\n        if (isNullOrUndef(childContext)) {\r\n            instance.$CX = context;\r\n        }\r\n        else {\r\n            instance.$CX = combineFrom(context, childContext);\r\n        }\r\n        if (isFunction(options.afterRender)) {\r\n            options.afterRender(instance);\r\n        }\r\n        instance.$LI = input;\r\n        return instance;\r\n    }\r\n    function handleComponentInput(input, componentVNode) {\r\n        if (isInvalid(input)) {\r\n            input = createVoidVNode();\r\n        }\r\n        else if (isStringOrNumber(input)) {\r\n            input = createTextVNode(input, null);\r\n        }\r\n        else {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            if (input.flags & 14 /* Component */) {\r\n                // if we have an input that is also a component, we run into a tricky situation\r\n                // where the root vNode needs to always have the correct DOM entry\r\n                // we can optimise this in the future, but this gets us out of a lot of issues\r\n                input.parentVNode = componentVNode;\r\n            }\r\n        }\r\n        return input;\r\n    }\n\n    function mount(vNode, parentDom, context, isSVG) {\r\n        var flags = vNode.flags;\r\n        if (flags & 481 /* Element */) {\r\n            return mountElement(vNode, parentDom, context, isSVG);\r\n        }\r\n        if (flags & 14 /* Component */) {\r\n            return mountComponent(vNode, parentDom, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n        }\r\n        if (flags & 512 /* Void */ || flags & 16 /* Text */) {\r\n            return mountText(vNode, parentDom);\r\n        }\r\n        if (flags & 1024 /* Portal */) {\r\n            mount(vNode.children, vNode.type, context, false);\r\n            return (vNode.dom = mountText(createVoidVNode(), parentDom));\r\n        }\r\n    }\r\n    function mountText(vNode, parentDom) {\r\n        var dom = (vNode.dom = document.createTextNode(vNode.children));\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n        return dom;\r\n    }\r\n    function mountElement(vNode, parentDom, context, isSVG) {\r\n        var flags = vNode.flags;\r\n        var children = vNode.children;\r\n        var props = vNode.props;\r\n        var className = vNode.className;\r\n        var ref = vNode.ref;\r\n        var childFlags = vNode.childFlags;\r\n        isSVG = isSVG || (flags & 32 /* SvgElement */) > 0;\r\n        var dom = documentCreateElement(vNode.type, isSVG);\r\n        vNode.dom = dom;\r\n        if (!isNullOrUndef(className) && className !== '') {\r\n            if (isSVG) {\r\n                dom.setAttribute('class', className);\r\n            }\r\n            else {\r\n                dom.className = className;\r\n            }\r\n        }\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n        if ((childFlags & 1 /* HasInvalidChildren */) === 0) {\r\n            var childrenIsSVG = isSVG === true && vNode.type !== 'foreignObject';\r\n            if (childFlags === 2 /* HasVNodeChildren */) {\r\n                mount(children, dom, context, childrenIsSVG);\r\n            }\r\n            else if (childFlags & 12 /* MultipleChildren */) {\r\n                mountArrayChildren(children, dom, context, childrenIsSVG);\r\n            }\r\n        }\r\n        if (!isNull(props)) {\r\n            mountProps(vNode, flags, props, dom, isSVG);\r\n        }\r\n        if (isFunction(ref)) {\r\n            mountRef(dom, ref);\r\n        }\r\n        return dom;\r\n    }\r\n    function mountArrayChildren(children, dom, context, isSVG) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!isNull(child.dom)) {\r\n                children[i] = child = directClone(child);\r\n            }\r\n            mount(child, dom, context, isSVG);\r\n        }\r\n    }\r\n    function mountComponent(vNode, parentDom, context, isSVG, isClass) {\r\n        var dom;\r\n        var type = vNode.type;\r\n        var props = vNode.props || EMPTY_OBJ;\r\n        var ref = vNode.ref;\r\n        if (isClass) {\r\n            var instance = createClassComponentInstance(vNode, type, props, context);\r\n            vNode.dom = dom = mount(instance.$LI, null, instance.$CX, isSVG);\r\n            mountClassComponentCallbacks(vNode, ref, instance);\r\n            instance.$UPD = false;\r\n        }\r\n        else {\r\n            var input = handleComponentInput(type(props, context), vNode);\r\n            vNode.children = input;\r\n            vNode.dom = dom = mount(input, null, context, isSVG);\r\n            mountFunctionalComponentCallbacks(props, ref, dom);\r\n        }\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n        return dom;\r\n    }\r\n    function createClassMountCallback(instance) {\r\n        return function () {\r\n            instance.componentDidMount();\r\n        };\r\n    }\r\n    function mountClassComponentCallbacks(vNode, ref, instance) {\r\n        if (isFunction(ref)) {\r\n            ref(instance);\r\n        }\r\n        if (isFunction(instance.componentDidMount)) {\r\n            LIFECYCLE.push(createClassMountCallback(instance));\r\n        }\r\n    }\r\n    function createOnMountCallback(ref, dom, props) {\r\n        return function () { return ref.onComponentDidMount(dom, props); };\r\n    }\r\n    function mountFunctionalComponentCallbacks(props, ref, dom) {\r\n        if (!isNullOrUndef(ref)) {\r\n            if (isFunction(ref.onComponentWillMount)) {\r\n                ref.onComponentWillMount(props);\r\n            }\r\n            if (isFunction(ref.onComponentDidMount)) {\r\n                LIFECYCLE.push(createOnMountCallback(ref, dom, props));\r\n            }\r\n        }\r\n    }\r\n    function mountRef(dom, value) {\r\n        LIFECYCLE.push(function () { return value(dom); });\r\n    }\n\n    function hydrateComponent(vNode, dom, context, isSVG, isClass) {\r\n        var type = vNode.type;\r\n        var ref = vNode.ref;\r\n        var props = vNode.props || EMPTY_OBJ;\r\n        if (isClass) {\r\n            var instance = createClassComponentInstance(vNode, type, props, context);\r\n            var input = instance.$LI;\r\n            hydrateVNode(input, dom, instance.$CX, isSVG);\r\n            vNode.dom = input.dom;\r\n            mountClassComponentCallbacks(vNode, ref, instance);\r\n            instance.$UPD = false; // Mount finished allow going sync\r\n        }\r\n        else {\r\n            var input$1 = handleComponentInput(type(props, context), vNode);\r\n            hydrateVNode(input$1, dom, context, isSVG);\r\n            vNode.children = input$1;\r\n            vNode.dom = input$1.dom;\r\n            mountFunctionalComponentCallbacks(props, ref, dom);\r\n        }\r\n    }\r\n    function hydrateElement(vNode, dom, context, isSVG) {\r\n        var children = vNode.children;\r\n        var props = vNode.props;\r\n        var className = vNode.className;\r\n        var flags = vNode.flags;\r\n        var ref = vNode.ref;\r\n        isSVG = isSVG || (flags & 32 /* SvgElement */) > 0;\r\n        if (dom.nodeType !== 1 || dom.tagName.toLowerCase() !== vNode.type) {\r\n            var newDom = mountElement(vNode, null, context, isSVG);\r\n            vNode.dom = newDom;\r\n            replaceChild(dom.parentNode, newDom, dom);\r\n        }\r\n        else {\r\n            vNode.dom = dom;\r\n            var childNode = dom.firstChild;\r\n            var childFlags = vNode.childFlags;\r\n            if ((childFlags & 1 /* HasInvalidChildren */) === 0) {\r\n                var nextSibling = null;\r\n                while (childNode) {\r\n                    nextSibling = childNode.nextSibling;\r\n                    if (childNode.nodeType === 8) {\r\n                        if (childNode.data === '!') {\r\n                            dom.replaceChild(document.createTextNode(''), childNode);\r\n                        }\r\n                        else {\r\n                            dom.removeChild(childNode);\r\n                        }\r\n                    }\r\n                    childNode = nextSibling;\r\n                }\r\n                childNode = dom.firstChild;\r\n                if (childFlags === 2 /* HasVNodeChildren */) {\r\n                    if (isNull(childNode)) {\r\n                        mount(children, dom, context, isSVG);\r\n                    }\r\n                    else {\r\n                        nextSibling = childNode.nextSibling;\r\n                        hydrateVNode(children, childNode, context, isSVG);\r\n                        childNode = nextSibling;\r\n                    }\r\n                }\r\n                else if (childFlags & 12 /* MultipleChildren */) {\r\n                    for (var i = 0, len = children.length; i < len; i++) {\r\n                        var child = children[i];\r\n                        if (isNull(childNode)) {\r\n                            mount(child, dom, context, isSVG);\r\n                        }\r\n                        else {\r\n                            nextSibling = childNode.nextSibling;\r\n                            hydrateVNode(child, childNode, context, isSVG);\r\n                            childNode = nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                // clear any other DOM nodes, there should be only a single entry for the root\r\n                while (childNode) {\r\n                    nextSibling = childNode.nextSibling;\r\n                    dom.removeChild(childNode);\r\n                    childNode = nextSibling;\r\n                }\r\n            }\r\n            else if (!isNull(dom.firstChild) && !isSamePropsInnerHTML(dom, props)) {\r\n                dom.textContent = ''; // dom has content, but VNode has no children remove everything from DOM\r\n                if (flags & 448 /* FormElement */) {\r\n                    // If element is form element, we need to clear defaultValue also\r\n                    dom.defaultValue = '';\r\n                }\r\n            }\r\n            if (!isNull(props)) {\r\n                mountProps(vNode, flags, props, dom, isSVG);\r\n            }\r\n            if (isNullOrUndef(className)) {\r\n                if (dom.className !== '') {\r\n                    dom.removeAttribute('class');\r\n                }\r\n            }\r\n            else if (isSVG) {\r\n                dom.setAttribute('class', className);\r\n            }\r\n            else {\r\n                dom.className = className;\r\n            }\r\n            if (isFunction(ref)) {\r\n                mountRef(dom, ref);\r\n            }\r\n        }\r\n    }\r\n    function hydrateText(vNode, dom) {\r\n        if (dom.nodeType !== 3) {\r\n            var newDom = mountText(vNode, null);\r\n            vNode.dom = newDom;\r\n            replaceChild(dom.parentNode, newDom, dom);\r\n        }\r\n        else {\r\n            var text = vNode.children;\r\n            if (dom.nodeValue !== text) {\r\n                dom.nodeValue = text;\r\n            }\r\n            vNode.dom = dom;\r\n        }\r\n    }\r\n    function hydrateVNode(vNode, dom, context, isSVG) {\r\n        var flags = vNode.flags;\r\n        if (flags & 14 /* Component */) {\r\n            hydrateComponent(vNode, dom, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n        }\r\n        else if (flags & 481 /* Element */) {\r\n            hydrateElement(vNode, dom, context, isSVG);\r\n        }\r\n        else if (flags & 16 /* Text */) {\r\n            hydrateText(vNode, dom);\r\n        }\r\n        else if (flags & 512 /* Void */) {\r\n            vNode.dom = dom;\r\n        }\r\n        else {\r\n            throwError();\r\n        }\r\n    }\r\n    function hydrate(input, parentDom, callback) {\r\n        var dom = parentDom.firstChild;\r\n        if (!isNull(dom)) {\r\n            if (!isInvalid(input)) {\r\n                hydrateVNode(input, dom, EMPTY_OBJ, false);\r\n            }\r\n            dom = parentDom.firstChild;\r\n            // clear any other DOM nodes, there should be only a single entry for the root\r\n            while ((dom = dom.nextSibling)) {\r\n                parentDom.removeChild(dom);\r\n            }\r\n        }\r\n        if (LIFECYCLE.length > 0) {\r\n            callAll(LIFECYCLE);\r\n        }\r\n        parentDom.$V = input;\r\n        if (isFunction(callback)) {\r\n            callback();\r\n        }\r\n    }\n\n    function replaceWithNewNode(lastNode, nextNode, parentDom, context, isSVG) {\r\n        unmount(lastNode);\r\n        replaceChild(parentDom, mount(nextNode, null, context, isSVG), lastNode.dom);\r\n    }\r\n    function patch(lastVNode, nextVNode, parentDom, context, isSVG) {\r\n        if (lastVNode !== nextVNode) {\r\n            var nextFlags = nextVNode.flags | 0;\r\n            if (lastVNode.flags !== nextFlags || nextFlags & 2048 /* ReCreate */) {\r\n                replaceWithNewNode(lastVNode, nextVNode, parentDom, context, isSVG);\r\n            }\r\n            else if (nextFlags & 481 /* Element */) {\r\n                patchElement(lastVNode, nextVNode, parentDom, context, isSVG);\r\n            }\r\n            else if (nextFlags & 14 /* Component */) {\r\n                patchComponent(lastVNode, nextVNode, parentDom, context, isSVG, (nextFlags & 4 /* ComponentClass */) > 0);\r\n            }\r\n            else if (nextFlags & 16 /* Text */) {\r\n                patchText(lastVNode, nextVNode, parentDom);\r\n            }\r\n            else if (nextFlags & 512 /* Void */) {\r\n                nextVNode.dom = lastVNode.dom;\r\n            }\r\n            else {\r\n                // Portal\r\n                patchPortal(lastVNode, nextVNode, context);\r\n            }\r\n        }\r\n    }\r\n    function patchPortal(lastVNode, nextVNode, context) {\r\n        var lastContainer = lastVNode.type;\r\n        var nextContainer = nextVNode.type;\r\n        var nextChildren = nextVNode.children;\r\n        patchChildren(lastVNode.childFlags, nextVNode.childFlags, lastVNode.children, nextChildren, lastContainer, context, false);\r\n        nextVNode.dom = lastVNode.dom;\r\n        if (lastContainer !== nextContainer && !isInvalid(nextChildren)) {\r\n            var node = nextChildren.dom;\r\n            lastContainer.removeChild(node);\r\n            nextContainer.appendChild(node);\r\n        }\r\n    }\r\n    function patchElement(lastVNode, nextVNode, parentDom, context, isSVG) {\r\n        var nextTag = nextVNode.type;\r\n        if (lastVNode.type !== nextTag) {\r\n            replaceWithNewNode(lastVNode, nextVNode, parentDom, context, isSVG);\r\n        }\r\n        else {\r\n            var dom = lastVNode.dom;\r\n            var nextFlags = nextVNode.flags;\r\n            var lastProps = lastVNode.props;\r\n            var nextProps = nextVNode.props;\r\n            var isFormElement = false;\r\n            var hasControlledValue = false;\r\n            var nextPropsOrEmpty;\r\n            nextVNode.dom = dom;\r\n            isSVG = isSVG || (nextFlags & 32 /* SvgElement */) > 0;\r\n            // inlined patchProps  -- starts --\r\n            if (lastProps !== nextProps) {\r\n                var lastPropsOrEmpty = lastProps || EMPTY_OBJ;\r\n                nextPropsOrEmpty = nextProps || EMPTY_OBJ;\r\n                if (nextPropsOrEmpty !== EMPTY_OBJ) {\r\n                    isFormElement = (nextFlags & 448 /* FormElement */) > 0;\r\n                    if (isFormElement) {\r\n                        hasControlledValue = isControlledFormElement(nextPropsOrEmpty);\r\n                    }\r\n                    for (var prop in nextPropsOrEmpty) {\r\n                        var lastValue = lastPropsOrEmpty[prop];\r\n                        var nextValue = nextPropsOrEmpty[prop];\r\n                        if (lastValue !== nextValue) {\r\n                            patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue, lastVNode);\r\n                        }\r\n                    }\r\n                }\r\n                if (lastPropsOrEmpty !== EMPTY_OBJ) {\r\n                    for (var prop$1 in lastPropsOrEmpty) {\r\n                        // do not add a hasOwnProperty check here, it affects performance\r\n                        if (!nextPropsOrEmpty.hasOwnProperty(prop$1) && !isNullOrUndef(lastPropsOrEmpty[prop$1])) {\r\n                            patchProp(prop$1, lastPropsOrEmpty[prop$1], null, dom, isSVG, hasControlledValue, lastVNode);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            var lastChildren = lastVNode.children;\r\n            var nextChildren = nextVNode.children;\r\n            var nextRef = nextVNode.ref;\r\n            var lastClassName = lastVNode.className;\r\n            var nextClassName = nextVNode.className;\r\n            if (lastChildren !== nextChildren) {\r\n                patchChildren(lastVNode.childFlags, nextVNode.childFlags, lastChildren, nextChildren, dom, context, isSVG && nextTag !== 'foreignObject');\r\n            }\r\n            if (isFormElement) {\r\n                processElement(nextFlags, nextVNode, dom, nextPropsOrEmpty, false, hasControlledValue);\r\n            }\r\n            // inlined patchProps  -- ends --\r\n            if (lastClassName !== nextClassName) {\r\n                if (isNullOrUndef(nextClassName)) {\r\n                    dom.removeAttribute('class');\r\n                }\r\n                else if (isSVG) {\r\n                    dom.setAttribute('class', nextClassName);\r\n                }\r\n                else {\r\n                    dom.className = nextClassName;\r\n                }\r\n            }\r\n            if (isFunction(nextRef) && lastVNode.ref !== nextRef) {\r\n                mountRef(dom, nextRef);\r\n            }\r\n        }\r\n    }\r\n    function patchChildren(lastChildFlags, nextChildFlags, lastChildren, nextChildren, parentDOM, context, isSVG) {\r\n        switch (lastChildFlags) {\r\n            case 2 /* HasVNodeChildren */:\r\n                switch (nextChildFlags) {\r\n                    case 2 /* HasVNodeChildren */:\r\n                        patch(lastChildren, nextChildren, parentDOM, context, isSVG);\r\n                        break;\r\n                    case 1 /* HasInvalidChildren */:\r\n                        remove(lastChildren, parentDOM);\r\n                        break;\r\n                    default:\r\n                        remove(lastChildren, parentDOM);\r\n                        mountArrayChildren(nextChildren, parentDOM, context, isSVG);\r\n                        break;\r\n                }\r\n                break;\r\n            case 1 /* HasInvalidChildren */:\r\n                switch (nextChildFlags) {\r\n                    case 2 /* HasVNodeChildren */:\r\n                        mount(nextChildren, parentDOM, context, isSVG);\r\n                        break;\r\n                    case 1 /* HasInvalidChildren */:\r\n                        break;\r\n                    default:\r\n                        mountArrayChildren(nextChildren, parentDOM, context, isSVG);\r\n                        break;\r\n                }\r\n                break;\r\n            default:\r\n                if (nextChildFlags & 12 /* MultipleChildren */) {\r\n                    var lastLength = lastChildren.length;\r\n                    var nextLength = nextChildren.length;\r\n                    // Fast path's for both algorithms\r\n                    if (lastLength === 0) {\r\n                        if (nextLength > 0) {\r\n                            mountArrayChildren(nextChildren, parentDOM, context, isSVG);\r\n                        }\r\n                    }\r\n                    else if (nextLength === 0) {\r\n                        removeAllChildren(parentDOM, lastChildren);\r\n                    }\r\n                    else if (nextChildFlags === 8 /* HasKeyedChildren */ && lastChildFlags === 8 /* HasKeyedChildren */) {\r\n                        patchKeyedChildren(lastChildren, nextChildren, parentDOM, context, isSVG, lastLength, nextLength);\r\n                    }\r\n                    else {\r\n                        patchNonKeyedChildren(lastChildren, nextChildren, parentDOM, context, isSVG, lastLength, nextLength);\r\n                    }\r\n                }\r\n                else if (nextChildFlags === 1 /* HasInvalidChildren */) {\r\n                    removeAllChildren(parentDOM, lastChildren);\r\n                }\r\n                else {\r\n                    removeAllChildren(parentDOM, lastChildren);\r\n                    mount(nextChildren, parentDOM, context, isSVG);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    function updateClassComponent(instance, nextState, nextVNode, nextProps, parentDom, context, isSVG, force, fromSetState) {\r\n        var lastState = instance.state;\r\n        var lastProps = instance.props;\r\n        nextVNode.children = instance;\r\n        var renderOutput;\r\n        if (instance.$UN) {\r\n            return;\r\n        }\r\n        if (lastProps !== nextProps || nextProps === EMPTY_OBJ) {\r\n            if (!fromSetState && isFunction(instance.componentWillReceiveProps)) {\r\n                instance.$BR = true;\r\n                instance.componentWillReceiveProps(nextProps, context);\r\n                // If instance component was removed during its own update do nothing...\r\n                if (instance.$UN) {\r\n                    return;\r\n                }\r\n                instance.$BR = false;\r\n            }\r\n            if (instance.$PSS) {\r\n                nextState = combineFrom(nextState, instance.$PS);\r\n                instance.$PSS = false;\r\n                instance.$PS = null;\r\n            }\r\n        }\r\n        /* Update if scu is not defined, or it returns truthy value or force */\r\n        var hasSCU = Boolean(instance.shouldComponentUpdate);\r\n        if (force || !hasSCU || (hasSCU && instance.shouldComponentUpdate(nextProps, nextState, context))) {\r\n            if (isFunction(instance.componentWillUpdate)) {\r\n                instance.$BS = true;\r\n                instance.componentWillUpdate(nextProps, nextState, context);\r\n                instance.$BS = false;\r\n            }\r\n            instance.props = nextProps;\r\n            instance.state = nextState;\r\n            instance.context = context;\r\n            if (isFunction(options.beforeRender)) {\r\n                options.beforeRender(instance);\r\n            }\r\n            renderOutput = instance.render(nextProps, nextState, context);\r\n            if (isFunction(options.afterRender)) {\r\n                options.afterRender(instance);\r\n            }\r\n            var didUpdate = renderOutput !== NO_OP;\r\n            var childContext;\r\n            if (isFunction(instance.getChildContext)) {\r\n                childContext = instance.getChildContext();\r\n            }\r\n            if (isNullOrUndef(childContext)) {\r\n                childContext = context;\r\n            }\r\n            else {\r\n                childContext = combineFrom(context, childContext);\r\n            }\r\n            instance.$CX = childContext;\r\n            if (didUpdate) {\r\n                var lastInput = instance.$LI;\r\n                var nextInput = (instance.$LI = handleComponentInput(renderOutput, nextVNode));\r\n                patch(lastInput, nextInput, parentDom, childContext, isSVG);\r\n                if (isFunction(instance.componentDidUpdate)) {\r\n                    instance.componentDidUpdate(lastProps, lastState);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            instance.props = nextProps;\r\n            instance.state = nextState;\r\n            instance.context = context;\r\n        }\r\n        nextVNode.dom = instance.$LI.dom;\r\n    }\r\n    function patchComponent(lastVNode, nextVNode, parentDom, context, isSVG, isClass) {\r\n        var nextType = nextVNode.type;\r\n        var lastKey = lastVNode.key;\r\n        var nextKey = nextVNode.key;\r\n        if (lastVNode.type !== nextType || lastKey !== nextKey) {\r\n            replaceWithNewNode(lastVNode, nextVNode, parentDom, context, isSVG);\r\n        }\r\n        else {\r\n            var nextProps = nextVNode.props || EMPTY_OBJ;\r\n            if (isClass) {\r\n                var instance = lastVNode.children;\r\n                instance.$UPD = true;\r\n                instance.$V = nextVNode;\r\n                updateClassComponent(instance, instance.state, nextVNode, nextProps, parentDom, context, isSVG, false, false);\r\n                instance.$UPD = false;\r\n            }\r\n            else {\r\n                var shouldUpdate = true;\r\n                var lastProps = lastVNode.props;\r\n                var nextHooks = nextVNode.ref;\r\n                var nextHooksDefined = !isNullOrUndef(nextHooks);\r\n                var lastInput = lastVNode.children;\r\n                nextVNode.dom = lastVNode.dom;\r\n                nextVNode.children = lastInput;\r\n                if (nextHooksDefined && isFunction(nextHooks.onComponentShouldUpdate)) {\r\n                    shouldUpdate = nextHooks.onComponentShouldUpdate(lastProps, nextProps);\r\n                }\r\n                if (shouldUpdate !== false) {\r\n                    if (nextHooksDefined && isFunction(nextHooks.onComponentWillUpdate)) {\r\n                        nextHooks.onComponentWillUpdate(lastProps, nextProps);\r\n                    }\r\n                    var nextInput = nextType(nextProps, context);\r\n                    if (nextInput !== NO_OP) {\r\n                        nextInput = handleComponentInput(nextInput, nextVNode);\r\n                        patch(lastInput, nextInput, parentDom, context, isSVG);\r\n                        nextVNode.children = nextInput;\r\n                        nextVNode.dom = nextInput.dom;\r\n                        if (nextHooksDefined && isFunction(nextHooks.onComponentDidUpdate)) {\r\n                            nextHooks.onComponentDidUpdate(lastProps, nextProps);\r\n                        }\r\n                    }\r\n                }\r\n                else if (lastInput.flags & 14 /* Component */) {\r\n                    lastInput.parentVNode = nextVNode;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function patchText(lastVNode, nextVNode, parentDom) {\r\n        var nextText = nextVNode.children;\r\n        var textNode = parentDom.firstChild;\r\n        var dom;\r\n        // Guard against external change on DOM node.\r\n        if (isNull(textNode)) {\r\n            parentDom.textContent = nextText;\r\n            dom = parentDom.firstChild;\r\n        }\r\n        else {\r\n            dom = lastVNode.dom;\r\n            if (nextText !== lastVNode.children) {\r\n                dom.nodeValue = nextText;\r\n            }\r\n        }\r\n        nextVNode.dom = dom;\r\n    }\r\n    function patchNonKeyedChildren(lastChildren, nextChildren, dom, context, isSVG, lastChildrenLength, nextChildrenLength) {\r\n        var commonLength = lastChildrenLength > nextChildrenLength ? nextChildrenLength : lastChildrenLength;\r\n        var i = 0;\r\n        var nextChild;\r\n        var lastChild;\r\n        for (; i < commonLength; i++) {\r\n            nextChild = nextChildren[i];\r\n            lastChild = lastChildren[i];\r\n            if (nextChild.dom) {\r\n                nextChild = nextChildren[i] = directClone(nextChild);\r\n            }\r\n            patch(lastChild, nextChild, dom, context, isSVG);\r\n            lastChildren[i] = nextChild;\r\n        }\r\n        if (lastChildrenLength < nextChildrenLength) {\r\n            for (i = commonLength; i < nextChildrenLength; i++) {\r\n                nextChild = nextChildren[i];\r\n                if (nextChild.dom) {\r\n                    nextChild = nextChildren[i] = directClone(nextChild);\r\n                }\r\n                mount(nextChild, dom, context, isSVG);\r\n            }\r\n        }\r\n        else if (lastChildrenLength > nextChildrenLength) {\r\n            for (i = commonLength; i < lastChildrenLength; i++) {\r\n                remove(lastChildren[i], dom);\r\n            }\r\n        }\r\n    }\r\n    function patchKeyedChildren(a, b, dom, context, isSVG, aLength, bLength) {\r\n        var aEnd = aLength - 1;\r\n        var bEnd = bLength - 1;\r\n        var i;\r\n        var j = 0;\r\n        var aNode = a[j];\r\n        var bNode = b[j];\r\n        var nextPos;\r\n        // Step 1\r\n        // tslint:disable-next-line\r\n        outer: {\r\n            // Sync nodes with the same key at the beginning.\r\n            while (aNode.key === bNode.key) {\r\n                if (bNode.dom) {\r\n                    b[j] = bNode = directClone(bNode);\r\n                }\r\n                patch(aNode, bNode, dom, context, isSVG);\r\n                a[j] = bNode;\r\n                j++;\r\n                if (j > aEnd || j > bEnd) {\r\n                    break outer;\r\n                }\r\n                aNode = a[j];\r\n                bNode = b[j];\r\n            }\r\n            aNode = a[aEnd];\r\n            bNode = b[bEnd];\r\n            // Sync nodes with the same key at the end.\r\n            while (aNode.key === bNode.key) {\r\n                if (bNode.dom) {\r\n                    b[bEnd] = bNode = directClone(bNode);\r\n                }\r\n                patch(aNode, bNode, dom, context, isSVG);\r\n                a[aEnd] = bNode;\r\n                aEnd--;\r\n                bEnd--;\r\n                if (j > aEnd || j > bEnd) {\r\n                    break outer;\r\n                }\r\n                aNode = a[aEnd];\r\n                bNode = b[bEnd];\r\n            }\r\n        }\r\n        if (j > aEnd) {\r\n            if (j <= bEnd) {\r\n                nextPos = bEnd + 1;\r\n                var nextNode = nextPos < bLength ? b[nextPos].dom : null;\r\n                while (j <= bEnd) {\r\n                    bNode = b[j];\r\n                    if (bNode.dom) {\r\n                        b[j] = bNode = directClone(bNode);\r\n                    }\r\n                    j++;\r\n                    insertOrAppend(dom, mount(bNode, null, context, isSVG), nextNode);\r\n                }\r\n            }\r\n        }\r\n        else if (j > bEnd) {\r\n            while (j <= aEnd) {\r\n                remove(a[j++], dom);\r\n            }\r\n        }\r\n        else {\r\n            var aStart = j;\r\n            var bStart = j;\r\n            var aLeft = aEnd - j + 1;\r\n            var bLeft = bEnd - j + 1;\r\n            var sources = [];\r\n            for (i = 0; i < bLeft; i++) {\r\n                sources.push(0);\r\n            }\r\n            // Keep track if its possible to remove whole DOM using textContent = '';\r\n            var canRemoveWholeContent = aLeft === aLength;\r\n            var moved = false;\r\n            var pos = 0;\r\n            var patched = 0;\r\n            // When sizes are small, just loop them through\r\n            if (bLength < 4 || (aLeft | bLeft) < 32) {\r\n                for (i = aStart; i <= aEnd; i++) {\r\n                    aNode = a[i];\r\n                    if (patched < bLeft) {\r\n                        for (j = bStart; j <= bEnd; j++) {\r\n                            bNode = b[j];\r\n                            if (aNode.key === bNode.key) {\r\n                                sources[j - bStart] = i + 1;\r\n                                if (canRemoveWholeContent) {\r\n                                    canRemoveWholeContent = false;\r\n                                    while (i > aStart) {\r\n                                        remove(a[aStart++], dom);\r\n                                    }\r\n                                }\r\n                                if (pos > j) {\r\n                                    moved = true;\r\n                                }\r\n                                else {\r\n                                    pos = j;\r\n                                }\r\n                                if (bNode.dom) {\r\n                                    b[j] = bNode = directClone(bNode);\r\n                                }\r\n                                patch(aNode, bNode, dom, context, isSVG);\r\n                                patched++;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!canRemoveWholeContent && j > bEnd) {\r\n                            remove(aNode, dom);\r\n                        }\r\n                    }\r\n                    else if (!canRemoveWholeContent) {\r\n                        remove(aNode, dom);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var keyIndex = {};\r\n                // Map keys by their index\r\n                for (i = bStart; i <= bEnd; i++) {\r\n                    keyIndex[b[i].key] = i;\r\n                }\r\n                // Try to patch same keys\r\n                for (i = aStart; i <= aEnd; i++) {\r\n                    aNode = a[i];\r\n                    if (patched < bLeft) {\r\n                        j = keyIndex[aNode.key];\r\n                        if (j !== void 0) {\r\n                            if (canRemoveWholeContent) {\r\n                                canRemoveWholeContent = false;\r\n                                while (i > aStart) {\r\n                                    remove(a[aStart++], dom);\r\n                                }\r\n                            }\r\n                            bNode = b[j];\r\n                            sources[j - bStart] = i + 1;\r\n                            if (pos > j) {\r\n                                moved = true;\r\n                            }\r\n                            else {\r\n                                pos = j;\r\n                            }\r\n                            if (bNode.dom) {\r\n                                b[j] = bNode = directClone(bNode);\r\n                            }\r\n                            patch(aNode, bNode, dom, context, isSVG);\r\n                            patched++;\r\n                        }\r\n                        else if (!canRemoveWholeContent) {\r\n                            remove(aNode, dom);\r\n                        }\r\n                    }\r\n                    else if (!canRemoveWholeContent) {\r\n                        remove(aNode, dom);\r\n                    }\r\n                }\r\n            }\r\n            // fast-path: if nothing patched remove all old and add all new\r\n            if (canRemoveWholeContent) {\r\n                removeAllChildren(dom, a);\r\n                mountArrayChildren(b, dom, context, isSVG);\r\n            }\r\n            else {\r\n                if (moved) {\r\n                    var seq = lis_algorithm(sources);\r\n                    j = seq.length - 1;\r\n                    for (i = bLeft - 1; i >= 0; i--) {\r\n                        if (sources[i] === 0) {\r\n                            pos = i + bStart;\r\n                            bNode = b[pos];\r\n                            if (bNode.dom) {\r\n                                b[pos] = bNode = directClone(bNode);\r\n                            }\r\n                            nextPos = pos + 1;\r\n                            insertOrAppend(dom, mount(bNode, null, context, isSVG), nextPos < bLength ? b[nextPos].dom : null);\r\n                        }\r\n                        else if (j < 0 || i !== seq[j]) {\r\n                            pos = i + bStart;\r\n                            bNode = b[pos];\r\n                            nextPos = pos + 1;\r\n                            insertOrAppend(dom, bNode.dom, nextPos < bLength ? b[nextPos].dom : null);\r\n                        }\r\n                        else {\r\n                            j--;\r\n                        }\r\n                    }\r\n                }\r\n                else if (patched !== bLeft) {\r\n                    // when patched count doesn't match b length we need to insert those new ones\r\n                    // loop backwards so we can use insertBefore\r\n                    for (i = bLeft - 1; i >= 0; i--) {\r\n                        if (sources[i] === 0) {\r\n                            pos = i + bStart;\r\n                            bNode = b[pos];\r\n                            if (bNode.dom) {\r\n                                b[pos] = bNode = directClone(bNode);\r\n                            }\r\n                            nextPos = pos + 1;\r\n                            insertOrAppend(dom, mount(bNode, null, context, isSVG), nextPos < bLength ? b[nextPos].dom : null);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\n    function lis_algorithm(arr) {\r\n        var p = arr.slice();\r\n        var result = [0];\r\n        var i;\r\n        var j;\r\n        var u;\r\n        var v;\r\n        var c;\r\n        var len = arr.length;\r\n        for (i = 0; i < len; i++) {\r\n            var arrI = arr[i];\r\n            if (arrI !== 0) {\r\n                j = result[result.length - 1];\r\n                if (arr[j] < arrI) {\r\n                    p[i] = j;\r\n                    result.push(i);\r\n                    continue;\r\n                }\r\n                u = 0;\r\n                v = result.length - 1;\r\n                while (u < v) {\r\n                    c = ((u + v) / 2) | 0;\r\n                    if (arr[result[c]] < arrI) {\r\n                        u = c + 1;\r\n                    }\r\n                    else {\r\n                        v = c;\r\n                    }\r\n                }\r\n                if (arrI < arr[result[u]]) {\r\n                    if (u > 0) {\r\n                        p[i] = result[u - 1];\r\n                    }\r\n                    result[u] = i;\r\n                }\r\n            }\r\n        }\r\n        u = result.length;\r\n        v = result[u - 1];\r\n        while (u-- > 0) {\r\n            result[u] = v;\r\n            v = p[v];\r\n        }\r\n        return result;\r\n    }\n\n    var documentBody = isBrowser ? document.body : null;\r\n    function render(input, parentDom, callback) {\r\n        if (input === NO_OP) {\r\n            return;\r\n        }\r\n        var rootInput = parentDom.$V;\r\n        if (isNullOrUndef(rootInput)) {\r\n            if (!isInvalid(input)) {\r\n                if (input.dom) {\r\n                    input = directClone(input);\r\n                }\r\n                if (isNull(parentDom.firstChild)) {\r\n                    mount(input, parentDom, EMPTY_OBJ, false);\r\n                    parentDom.$V = input;\r\n                }\r\n                else {\r\n                    hydrate(input, parentDom);\r\n                }\r\n                rootInput = input;\r\n            }\r\n        }\r\n        else {\r\n            if (isNullOrUndef(input)) {\r\n                remove(rootInput, parentDom);\r\n                parentDom.$V = null;\r\n            }\r\n            else {\r\n                if (input.dom) {\r\n                    input = directClone(input);\r\n                }\r\n                patch(rootInput, input, parentDom, EMPTY_OBJ, false);\r\n                rootInput = parentDom.$V = input;\r\n            }\r\n        }\r\n        if (LIFECYCLE.length > 0) {\r\n            callAll(LIFECYCLE);\r\n        }\r\n        if (isFunction(callback)) {\r\n            callback();\r\n        }\r\n        if (isFunction(options.renderComplete)) {\r\n            options.renderComplete(rootInput);\r\n        }\r\n        if (rootInput && rootInput.flags & 14 /* Component */) {\r\n            return rootInput.children;\r\n        }\r\n    }\r\n\n    var resolvedPromise = typeof Promise === 'undefined' ? null : Promise.resolve();\r\n    // raf.bind(window) is needed to work around bug in IE10-IE11 strict mode (TypeError: Invalid calling object)\r\n    var fallbackMethod = typeof requestAnimationFrame === 'undefined' ? setTimeout : requestAnimationFrame.bind(window);\r\n    function nextTick(fn) {\r\n        if (resolvedPromise) {\r\n            return resolvedPromise.then(fn);\r\n        }\r\n        return fallbackMethod(fn);\r\n    }\r\n    function queueStateChanges(component, newState, callback, force) {\r\n        if (isFunction(newState)) {\r\n            newState = newState(component.state, component.props, component.context);\r\n        }\r\n        var pending = component.$PS;\r\n        if (isNullOrUndef(pending)) {\r\n            component.$PS = newState;\r\n        }\r\n        else {\r\n            for (var stateKey in newState) {\r\n                pending[stateKey] = newState[stateKey];\r\n            }\r\n        }\r\n        if (!component.$PSS && !component.$BR) {\r\n            if (!component.$UPD) {\r\n                component.$PSS = true;\r\n                component.$UPD = true;\r\n                applyState(component, force, callback);\r\n                component.$UPD = false;\r\n            }\r\n            else {\r\n                // Async\r\n                var queue = component.$QU;\r\n                if (isNull(queue)) {\r\n                    queue = component.$QU = [];\r\n                    nextTick(promiseCallback(component, queue));\r\n                }\r\n                if (isFunction(callback)) {\r\n                    queue.push(callback);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            component.$PSS = true;\r\n            if (component.$BR && isFunction(callback)) {\r\n                LIFECYCLE.push(callback.bind(component));\r\n            }\r\n        }\r\n    }\r\n    function promiseCallback(component, queue) {\r\n        return function () {\r\n            component.$QU = null;\r\n            component.$UPD = true;\r\n            applyState(component, false, function () {\r\n                for (var i = 0, len = queue.length; i < len; i++) {\r\n                    queue[i].call(component);\r\n                }\r\n            });\r\n            component.$UPD = false;\r\n        };\r\n    }\r\n    function applyState(component, force, callback) {\r\n        if (component.$UN) {\r\n            return;\r\n        }\r\n        if (force || !component.$BR) {\r\n            component.$PSS = false;\r\n            var pendingState = component.$PS;\r\n            var prevState = component.state;\r\n            var nextState = combineFrom(prevState, pendingState);\r\n            var props = component.props;\r\n            var context = component.context;\r\n            component.$PS = null;\r\n            var vNode = component.$V;\r\n            var lastInput = component.$LI;\r\n            var parentDom = lastInput.dom && lastInput.dom.parentNode;\r\n            updateClassComponent(component, nextState, vNode, props, parentDom, context, (vNode.flags & 32 /* SvgElement */) > 0, force, true);\r\n            if (component.$UN) {\r\n                return;\r\n            }\r\n            if ((component.$LI.flags & 1024 /* Portal */) === 0) {\r\n                var dom = component.$LI.dom;\r\n                while (!isNull((vNode = vNode.parentVNode))) {\r\n                    if ((vNode.flags & 14 /* Component */) > 0) {\r\n                        vNode.dom = dom;\r\n                    }\r\n                }\r\n            }\r\n            if (LIFECYCLE.length > 0) {\r\n                callAll(LIFECYCLE);\r\n            }\r\n        }\r\n        else {\r\n            component.state = component.$PS;\r\n            component.$PS = null;\r\n        }\r\n        if (isFunction(callback)) {\r\n            callback.call(component);\r\n        }\r\n    }\r\n    var Component = function Component(props, context) {\r\n        this.state = null;\r\n        // Internal properties\r\n        this.$BR = false; // BLOCK RENDER\r\n        this.$BS = true; // BLOCK STATE\r\n        this.$PSS = false; // PENDING SET STATE\r\n        this.$PS = null; // PENDING STATE (PARTIAL or FULL)\r\n        this.$LI = null; // LAST INPUT\r\n        this.$V = null; // VNODE\r\n        this.$UN = false; // UNMOUNTED\r\n        this.$CX = null; // CHILDCONTEXT\r\n        this.$UPD = true; // UPDATING\r\n        this.$QU = null; // QUEUE\r\n        /** @type {object} */\r\n        this.props = props || EMPTY_OBJ;\r\n        /** @type {object} */\r\n        this.context = context || EMPTY_OBJ; // context should not be mutable\r\n    };\r\n    Component.prototype.forceUpdate = function forceUpdate (callback) {\r\n        if (this.$UN) {\r\n            return;\r\n        }\r\n        // Do not allow double render during force update\r\n        queueStateChanges(this, {}, callback, true);\r\n    };\r\n    Component.prototype.setState = function setState (newState, callback) {\r\n        if (this.$UN) {\r\n            return;\r\n        }\r\n        if (!this.$BS) {\r\n            queueStateChanges(this, newState, callback, false);\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    };\r\n    // tslint:disable-next-line:no-empty\r\n    Component.prototype.render = function render (nextProps, nextState, nextContext) { };\n\n\n\n    var JSX = /*#__PURE__*/Object.freeze({\n\n    });\n\n    var ENTER = 12;\n    var LEFT_ARROW = 37;\n    var UP_ARROW = 38;\n    var RIGHT_ARROW = 39;\n    var DOWN_ARROW = 40;\n\n    /**\n     * Helper method to create an object for a new node.\n     *\n     * @private\n     * @return {void}\n     */\n    function blankNode() {\n        return {\n            text: 'New Node',\n            itree: {\n                state: {\n                    editing: true,\n                    focused: true\n                }\n            }\n        };\n    }\n\n    var classCallCheck = function (instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    var inherits = function (subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function (self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    var Checkbox = function (_Component) {\n        inherits(Checkbox, _Component);\n\n        function Checkbox() {\n            classCallCheck(this, Checkbox);\n            return possibleConstructorReturn(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).apply(this, arguments));\n        }\n\n        createClass(Checkbox, [{\n            key: 'click',\n            value: function click(event) {\n                var _this2 = this;\n\n                // Define our default handler\n                var handler = function handler() {\n                    _this2.props.node.toggleCheck();\n                };\n\n                // Emit an event with our forwarded MouseEvent, node, and default handler\n                this.props.dom._tree.emit('node.click', event, this.props.node, handler);\n\n                // Unless default is prevented, auto call our default handler\n                if (!event.treeDefaultPrevented) {\n                    handler();\n                }\n            }\n        }, {\n            key: 'render',\n            value: function render$$1() {\n                return createVNode(64, 'input', null, null, 1, {\n                    'checked': this.props.checked,\n                    'indeterminate': this.props.indeterminate,\n                    'onClick': this.click.bind(this),\n                    'type': 'checkbox'\n                });\n            }\n        }]);\n        return Checkbox;\n    }(Component);\n\n    /**\n     * Utility method for parsing and merging custom class names.\n     *\n     * @private\n     * @param {TreeNode} node Node object.\n     * @param {string} type 'li' or 'a' attribute object type.\n     * @return {Array} Processed class names\n     */\n    var classlist = (function (node) {\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'li';\n\n        var nodeAttrs = node.itree[type].attributes;\n        var classNames = [];\n\n        // Append any custom class names\n        var customClasses = nodeAttrs.class || nodeAttrs.className;\n\n        // Support callbacks\n        if (_.isFunction(customClasses)) {\n            customClasses = customClasses(node);\n        }\n\n        // Convert custom classes into an array and concat\n        if (!_.isEmpty(customClasses)) {\n            if (_.isString(customClasses)) {\n                // Support periods for backwards compat with hyperscript-formatted classes\n                classNames = classNames.concat(customClasses.split(/[\\s\\.]+/));\n            } else if (_.isArray(customClasses)) {\n                classNames = classNames.concat(customClasses);\n            }\n        }\n\n        return classNames;\n    });\n\n    var EditToolbar = function (_Component) {\n        inherits(EditToolbar, _Component);\n\n        function EditToolbar() {\n            classCallCheck(this, EditToolbar);\n            return possibleConstructorReturn(this, (EditToolbar.__proto__ || Object.getPrototypeOf(EditToolbar)).apply(this, arguments));\n        }\n\n        createClass(EditToolbar, [{\n            key: 'shouldComponentUpdate',\n            value: function shouldComponentUpdate() {\n                return false;\n            }\n        }, {\n            key: 'add',\n            value: function add(event) {\n                event.stopPropagation();\n\n                this.props.node.addChild(blankNode());\n                this.props.node.expand();\n            }\n        }, {\n            key: 'edit',\n            value: function edit(event) {\n                event.stopPropagation();\n\n                this.props.node.toggleEditing();\n            }\n        }, {\n            key: 'remove',\n            value: function remove(event) {\n                event.stopPropagation();\n\n                this.props.node.remove();\n            }\n        }, {\n            key: 'render',\n            value: function render$$1() {\n                var buttons = [];\n\n                if (this.props.dom._tree.config.editing.edit) {\n                    buttons.push(createVNode(1, 'a', 'btn icon icon-pencil', null, 1, {\n                        'onclick': this.edit.bind(this),\n                        'title': 'Edit this node'\n                    }));\n                }\n\n                if (this.props.dom._tree.config.editing.add) {\n                    buttons.push(createVNode(1, 'a', 'btn icon icon-plus', null, 1, {\n                        'onclick': this.add.bind(this),\n                        'title': 'Add a child node'\n                    }));\n                }\n\n                if (this.props.dom._tree.config.editing.remove) {\n                    buttons.push(createVNode(1, 'a', 'btn icon icon-minus', null, 1, {\n                        'onclick': this.remove.bind(this),\n                        'title': 'Remove this node'\n                    }));\n                }\n\n                return createVNode(1, 'span', 'btn-group', buttons, 0);\n            }\n        }]);\n        return EditToolbar;\n    }(Component);\n\n    var EmptyList = function (_Component) {\n        inherits(EmptyList, _Component);\n\n        function EmptyList() {\n            classCallCheck(this, EmptyList);\n            return possibleConstructorReturn(this, (EmptyList.__proto__ || Object.getPrototypeOf(EmptyList)).apply(this, arguments));\n        }\n\n        createClass(EmptyList, [{\n            key: 'render',\n            value: function render$$1() {\n                return createVNode(1, 'ol', null, createVNode(1, 'li', 'leaf', createVNode(1, 'span', 'title icon icon-file-empty empty', this.props.text, 0), 2), 2);\n            }\n        }]);\n        return EmptyList;\n    }(Component);\n\n    /**\n     * Compares all keys on the given state. Returns true if any difference exists.\n     *\n     * @private\n     * @category DOM\n     * @param {object} previousState Previous state.\n     * @param {object} currentState  Current state.\n     * @return {boolean} Difference was found.\n     */\n    function stateComparator(previousState, currentState) {\n        // Always treat dirty flag as a state difference\n        var isDirty = currentState.dirty || false;\n\n        if (!isDirty) {\n            _.each(Object.keys(currentState), function (key) {\n                if (key !== 'dirty' && currentState[key] !== previousState[key]) {\n                    isDirty = true;\n                    return false;\n                }\n            });\n        }\n\n        return isDirty;\n    }\n\n    var EditForm = function (_Component) {\n        inherits(EditForm, _Component);\n\n        function EditForm(props) {\n            classCallCheck(this, EditForm);\n\n            var _this = possibleConstructorReturn(this, (EditForm.__proto__ || Object.getPrototypeOf(EditForm)).call(this, props));\n\n            _this.state = _this.getStateFromNodes(props.node);\n            return _this;\n        }\n\n        createClass(EditForm, [{\n            key: 'getStateFromNodes',\n            value: function getStateFromNodes(node) {\n                return {\n                    text: node.text\n                };\n            }\n        }, {\n            key: 'componentWillReceiveProps',\n            value: function componentWillReceiveProps(data) {\n                this.setState(this.getStateFromNodes(data.node));\n            }\n        }, {\n            key: 'shouldComponentUpdate',\n            value: function shouldComponentUpdate(nextProps, nextState) {\n                return stateComparator(this.state, nextState);\n            }\n        }, {\n            key: 'click',\n            value: function click(event) {\n                var _this2 = this;\n\n                // Define our default handler\n                var handler = function handler() {\n                    _this2.props.node.toggleCheck();\n                };\n\n                // Emit an event with our forwarded MouseEvent, node, and default handler\n                this.props.dom._tree.emit('node.click', event, this.props.node, handler);\n\n                // Unless default is prevented, auto call our default handler\n                if (!event.treeDefaultPrevented) {\n                    handler();\n                }\n            }\n        }, {\n            key: 'keypress',\n            value: function keypress(event) {\n                if (event.which === ENTER) {\n                    return this.save();\n                }\n            }\n        }, {\n            key: 'input',\n            value: function input(event) {\n                this.setState({\n                    text: event.target.value\n                });\n            }\n        }, {\n            key: 'cancel',\n            value: function cancel(event) {\n                if (event) {\n                    event.stopPropagation();\n                }\n\n                this.props.node.toggleEditing();\n            }\n        }, {\n            key: 'save',\n            value: function save(event) {\n                if (event) {\n                    event.stopPropagation();\n                }\n\n                // Cache current text\n                var originalText = this.props.node.text;\n                var newText = this.ref.value;\n\n                // Update the text\n                this.props.node.set('text', newText);\n\n                // Disable editing and update\n                this.props.node.state('editing', false);\n                this.props.node.markDirty();\n                this.props.dom._tree.applyChanges();\n\n                if (originalText !== newText) {\n                    this.props.dom._tree.emit('node.edited', this.props.node, originalText, newText);\n                }\n            }\n        }, {\n            key: 'render',\n            value: function render$$1() {\n                var _this3 = this;\n\n                return createVNode(1, 'form', null, [createVNode(64, 'input', null, null, 1, {\n                    'onClick': function onClick(event) {\n                        return event.stopPropagation;\n                    },\n                    'onInput': this.input.bind(this),\n                    'onKeyPress': this.keypress.bind(this),\n                    'value': this.state.text\n                }, null, function (elem) {\n                    return _this3.ref = elem;\n                }), createVNode(1, 'span', 'btn-group', [createVNode(1, 'button', 'btn icon icon-check', null, 1, {\n                    'onClick': this.save.bind(this),\n                    'title': 'Save',\n                    'type': 'button'\n                }), createVNode(1, 'button', 'btn icon icon-cross', null, 1, {\n                    'onClick': this.cancel.bind(this),\n                    'title': 'Cancel',\n                    'type': 'button'\n                })], 4)], 4, {\n                    'onsubmit': function onsubmit(event) {\n                        return event.preventDefault;\n                    }\n                });\n            }\n        }]);\n        return EditForm;\n    }(Component);\n\n    var NodeAnchor = function (_Component) {\n        inherits(NodeAnchor, _Component);\n\n        function NodeAnchor() {\n            classCallCheck(this, NodeAnchor);\n            return possibleConstructorReturn(this, (NodeAnchor.__proto__ || Object.getPrototypeOf(NodeAnchor)).apply(this, arguments));\n        }\n\n        createClass(NodeAnchor, [{\n            key: 'blur',\n            value: function blur() {\n                this.props.node.blur();\n            }\n        }, {\n            key: 'click',\n            value: function click(event) {\n                var _this2 = this;\n\n                var _props = this.props,\n                    node = _props.node,\n                    dom = _props.dom;\n\n                // Define our default handler\n\n                var handler = function handler() {\n                    event.preventDefault();\n\n                    if (_this2.props.editing) {\n                        return;\n                    }\n\n                    if (event.metaKey || event.ctrlKey || event.shiftKey) {\n                        dom._tree.disableDeselection();\n                    }\n\n                    if (event.shiftKey) {\n                        dom.clearSelection();\n\n                        var selected = dom._tree.lastSelectedNode();\n                        if (selected) {\n                            dom._tree.selectBetween.apply(dom._tree, dom._tree.boundingNodes(selected, node));\n                        }\n                    }\n\n                    if (node.selected()) {\n                        if (!dom._tree.config.selection.disableDirectDeselection) {\n                            node.deselect();\n                        }\n                    } else {\n                        node.select();\n                    }\n\n                    dom._tree.enableDeselection();\n                };\n\n                // Emit an event with our forwarded MouseEvent, node, and default handler\n                dom._tree.emit('node.click', event, node, handler);\n\n                // Unless default is prevented, auto call our default handler\n                if (!event.treeDefaultPrevented) {\n                    handler();\n                }\n            }\n        }, {\n            key: 'contextMenu',\n            value: function contextMenu(event) {\n                var _props2 = this.props,\n                    node = _props2.node,\n                    dom = _props2.dom;\n\n\n                dom._tree.emit('node.contextmenu', event, node);\n            }\n        }, {\n            key: 'dblclick',\n            value: function dblclick(event) {\n                var _props3 = this.props,\n                    node = _props3.node,\n                    dom = _props3.dom;\n\n                // Define our default handler\n\n                var handler = function handler() {\n                    // Clear text selection which occurs on double click\n                    dom.clearSelection();\n\n                    node.toggleCollapse();\n                };\n\n                // Emit an event with our forwarded MouseEvent, node, and default handler\n                dom._tree.emit('node.dblclick', event, node, handler);\n\n                // Unless default is prevented, auto call our default handler\n                if (!event.treeDefaultPrevented) {\n                    handler();\n                }\n            }\n        }, {\n            key: 'focus',\n            value: function focus(event) {\n                this.props.node.focus(event);\n            }\n        }, {\n            key: 'mousedown',\n            value: function mousedown() {\n                if (this.props.dom.isDragDropEnabled) {\n                    this.props.dom.isMouseHeld = true;\n                }\n            }\n        }, {\n            key: 'render',\n            value: function render$$1() {\n                var node = this.props.node;\n                var attributes = _.clone(node.itree.a.attributes) || {};\n                attributes.tabindex = 1;\n                attributes.unselectable = 'on';\n\n                // Build and set classnames\n                var classNames = classlist(node, 'a').concat(['title', 'icon']);\n\n                if (!this.props.dom.config.showCheckboxes) {\n                    var folder = this.props.expanded ? 'icon-folder-open' : 'icon-folder';\n                    classNames.push(node.itree.icon || (this.props.hasOrWillHaveChildren ? folder : 'icon-file-empty'));\n                }\n\n                attributes.class = attributes.className = classNames.join(' ');\n\n                var content = node.text;\n                if (node.editing()) {\n                    content = createComponentVNode(2, EditForm, {\n                        'dom': this.props.dom,\n                        'node': this.props.node\n                    });\n                }\n\n                return normalizeProps(createVNode(1, 'a', null, content, 0, _extends({\n                    'data-uid': node.id,\n                    'onBlur': this.blur.bind(this),\n                    'onClick': this.click.bind(this),\n                    'onContextMenu': this.contextMenu.bind(this),\n                    'onDblClick': this.dblclick.bind(this),\n                    'onFocus': this.focus.bind(this),\n                    'onMouseDown': this.mousedown.bind(this)\n                }, attributes)));\n            }\n        }]);\n        return NodeAnchor;\n    }(Component);\n\n    var ToggleAnchor = function (_Component) {\n        inherits(ToggleAnchor, _Component);\n\n        function ToggleAnchor() {\n            classCallCheck(this, ToggleAnchor);\n            return possibleConstructorReturn(this, (ToggleAnchor.__proto__ || Object.getPrototypeOf(ToggleAnchor)).apply(this, arguments));\n        }\n\n        createClass(ToggleAnchor, [{\n            key: 'className',\n            value: function className() {\n                return 'toggle icon ' + (this.props.collapsed ? 'icon-expand' : 'icon-collapse');\n            }\n        }, {\n            key: 'render',\n            value: function render$$1() {\n                return createVNode(1, 'a', this.className(), null, 1, {\n                    'onClick': this.props.node.toggleCollapse.bind(this.props.node)\n                });\n            }\n        }]);\n        return ToggleAnchor;\n    }(Component);\n\n    var ListItem = function (_Component) {\n        inherits(ListItem, _Component);\n\n        function ListItem(props) {\n            classCallCheck(this, ListItem);\n\n            var _this = possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).call(this, props));\n\n            _this.state = _this.stateFromNode(props.node);\n            return _this;\n        }\n\n        createClass(ListItem, [{\n            key: 'stateFromNode',\n            value: function stateFromNode(node) {\n                return {\n                    dirty: node.itree.dirty\n                };\n            }\n        }, {\n            key: 'componentWillReceiveProps',\n            value: function componentWillReceiveProps(data) {\n                this.setState(this.stateFromNode(data.node));\n            }\n        }, {\n            key: 'shouldComponentUpdate',\n            value: function shouldComponentUpdate(nextProps, nextState) {\n                return nextState.dirty;\n            }\n        }, {\n            key: 'getAttributes',\n            value: function getAttributes() {\n                var node = this.props.node;\n                var attributes = _.clone(node.itree.li.attributes) || {};\n                attributes.class = attributes.className = this.getClassNames();\n\n                // Force internal-use attributes\n                attributes['data-uid'] = node.id;\n\n                // Allow drag and drop?\n                if (this.props.dom.config.dragAndDrop.enabled) {\n                    attributes.draggable = node.state('draggable');\n                    attributes.onDragEnd = this.onDragEnd.bind(this);\n                    attributes.onDragEnter = this.onDragEnter.bind(this);\n                    attributes.onDragLeave = this.onDragLeave.bind(this);\n                    attributes.onDragStart = this.onDragStart.bind(this);\n\n                    // Are we a valid drop target?\n                    if (node.state('drop-target')) {\n                        attributes.onDragOver = this.onDragOver.bind(this);\n                        attributes.onDrop = this.onDrop.bind(this);\n                    } else {\n                        // Setting to null forces removal of prior listeners\n                        attributes.onDragOver = null;\n                        attributes.onDrop = null;\n                    }\n                }\n\n                return attributes;\n            }\n        }, {\n            key: 'getClassNames',\n            value: function getClassNames() {\n                var node = this.props.node;\n                var state = node.itree.state;\n\n                // Set state classnames\n                var classNames = classlist(node);\n\n                // https://jsperf.com/object-keys-vs-each\n                _.each(Object.keys(state), function (key) {\n                    if (state[key]) {\n                        classNames.push(key);\n                    }\n                });\n\n                // Inverse and additional classes\n                if (!node.hidden() && node.removed()) {\n                    classNames.push('hidden');\n                }\n\n                if (node.expanded()) {\n                    classNames.push('expanded');\n                }\n\n                classNames.push(node.hasOrWillHaveChildren() ? 'folder' : 'leaf');\n\n                return classNames.join(' ');\n            }\n        }, {\n            key: 'getTargetDirection',\n            value: function getTargetDirection(event, elem) {\n                var clientY = event.clientY;\n                var targetRect = elem.getBoundingClientRect();\n\n                var yThresholdForAbove = targetRect.top + targetRect.height / 3;\n                var yThresholdForBelow = targetRect.bottom - targetRect.height / 3;\n\n                var dir = 0;\n\n                if (clientY <= yThresholdForAbove) {\n                    dir = -1;\n                } else if (clientY >= yThresholdForBelow) {\n                    dir = 1;\n                }\n\n                return dir;\n            }\n        }, {\n            key: 'onDragStart',\n            value: function onDragStart(event) {\n                event.stopPropagation();\n\n                event.dataTransfer.effectAllowed = 'move';\n                event.dataTransfer.dropEffect = 'move';\n\n                var node = this.props.node;\n\n                // Due to \"protected\" mode we can't access any DataTransfer data\n                // during the dragover event, yet we still need to validate this node with the target\n                this.props.dom._activeDragNode = node;\n\n                event.dataTransfer.setData('treeId', node.tree().id);\n                event.dataTransfer.setData('nodeId', node.id);\n\n                // Disable self and children as drop targets\n                node.state('drop-target', false);\n\n                if (node.hasChildren()) {\n                    node.children.stateDeep('drop-target', false);\n                }\n\n                // If we should validate all nodes as potential drop targets on drag start\n                if (this.props.dom.config.dragAndDrop.validateOn === 'dragstart') {\n                    var validator = this.props.dom.config.dragAndDrop.validate;\n                    var validateCallable = _.isFunction(validator);\n\n                    // Validate with a custom recursor because a return of \"false\"\n                    // should mean \"do not descend\" rather than \"stop iterating\"\n                    var recursor = function recursor(obj, iteratee) {\n                        if (InspireTree.isTreeNodes(obj)) {\n                            _.each(obj, function (n) {\n                                recursor(n, iteratee);\n                            });\n                        } else if (InspireTree.isTreeNode(obj)) {\n                            if (iteratee(obj) !== false && obj.hasChildren()) {\n                                recursor(obj.children, iteratee);\n                            }\n                        }\n                    };\n\n                    this.props.dom._tree.batch();\n\n                    recursor(this.props.dom._tree.model, function (n) {\n                        var valid = n.id !== node.id;\n\n                        // Ensure target node isn't a descendant\n                        if (valid) {\n                            valid = !n.hasAncestor(node);\n                        }\n\n                        // If still valid and user has additional validation...\n                        if (valid && validateCallable) {\n                            valid = validator(node, n);\n                        }\n\n                        // Set state\n                        n.state('drop-target', valid);\n\n                        return valid;\n                    });\n\n                    this.props.dom._tree.end();\n                }\n\n                this.props.dom._tree.emit('node.dragstart', event);\n            }\n        }, {\n            key: 'onDragEnd',\n            value: function onDragEnd(event) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                this.unhighlightTarget();\n\n                this.props.dom._tree.emit('node.dragend', event);\n            }\n        }, {\n            key: 'onDragEnter',\n            value: function onDragEnter(event) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                // Nodes already within parents don't trigger enter/leave events on their ancestors\n                this.props.node.recurseUp(this.unhighlightTarget);\n\n                // Set drag target state\n                this.props.node.state('drag-targeting', true);\n\n                this.props.dom._tree.emit('node.dragenter', event);\n            }\n        }, {\n            key: 'onDragLeave',\n            value: function onDragLeave(event) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                this.unhighlightTarget();\n\n                this.props.dom._tree.emit('node.dragleave', event);\n            }\n        }, {\n            key: 'onDragOver',\n            value: function onDragOver(event) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                var dragNode = this.props.dom._activeDragNode;\n                var node = this.props.node;\n\n                // Event.target doesn't always match the element we need to calculate\n                var dir = this.getTargetDirection(event, node.itree.ref.querySelector('a'));\n\n                if (this.props.dom.config.dragAndDrop.validateOn === 'dragover') {\n                    // Validate drop target\n                    var validator = this.props.dom.config.dragAndDrop.validate;\n                    var validateCallable = _.isFunction(validator);\n\n                    var valid = dragNode.id !== node.id;\n\n                    if (valid) {\n                        valid = !node.hasAncestor(dragNode);\n                    }\n\n                    if (valid && validateCallable) {\n                        valid = validator(dragNode, node, dir);\n                    }\n\n                    // Set state\n                    node.state('drop-target', valid);\n                    this.props.dom._tree.applyChanges();\n\n                    if (!valid) {\n                        return;\n                    }\n                }\n\n                // Set drag target states\n                this.props.dom._tree.batch();\n                node.state('drag-targeting', true);\n                node.state('drag-targeting-above', dir === -1);\n                node.state('drag-targeting-below', dir === 1);\n                node.state('drag-targeting-insert', dir === 0);\n                this.props.dom._tree.end();\n\n                this.props.dom._tree.emit('node.dragover', event, dir);\n            }\n        }, {\n            key: 'onDrop',\n            value: function onDrop(event) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                // Always unhighlight target\n                this.unhighlightTarget();\n\n                // Get the data from our transfer\n                var treeId = event.dataTransfer.getData('treeId');\n                var nodeId = event.dataTransfer.getData('nodeId');\n\n                // Find the drop target\n                var targetNode = this.props.node;\n\n                // Clear cache\n                this.props.dom._activeDragNode = null;\n\n                // Determine the insert direction (calc before removing source node, which modifies the DOM)\n                var dir = this.getTargetDirection(event, event.target);\n\n                var sourceTree = void 0;\n                if (treeId === this.props.dom._tree.id) {\n                    sourceTree = this.props.dom._tree;\n                } else if (treeId) {\n                    sourceTree = document.querySelector('[data-uid=\"' + treeId + '\"]').inspireTree;\n                }\n\n                // Only source/handle node if it's a node that was dropped\n                var newNode = void 0,\n                    newIndex = void 0;\n                if (sourceTree) {\n                    var node = sourceTree.node(nodeId);\n                    node.state('drop-target', true);\n\n                    var exported = node.remove(true);\n\n                    // Get the index of the target node\n                    var targetIndex = targetNode.context().indexOf(targetNode);\n\n                    if (dir === 0) {\n                        // Add as a child\n                        newNode = targetNode.addChild(exported);\n\n                        // Cache the new index\n                        newIndex = targetNode.children.indexOf(newNode);\n\n                        // Auto-expand\n                        targetNode.expand();\n                    } else {\n                        // Determine the new index\n                        newIndex = dir === 1 ? ++targetIndex : targetIndex;\n\n                        // Insert and cache the node\n                        newNode = targetNode.context().insertAt(newIndex, exported);\n                    }\n                }\n\n                this.props.dom._tree.emit('node.drop', event, newNode, targetNode, newIndex);\n            }\n        }, {\n            key: 'unhighlightTarget',\n            value: function unhighlightTarget(node) {\n                (node || this.props.node).states(['drag-targeting', 'drag-targeting-above', 'drag-targeting-below', 'drag-targeting-insert'], false);\n            }\n        }, {\n            key: 'renderCheckbox',\n            value: function renderCheckbox() {\n                var node = this.props.node;\n\n                if (this.props.dom.config.showCheckboxes) {\n                    return createComponentVNode(2, Checkbox, {\n                        'checked': node.checked(),\n                        'dom': this.props.dom,\n                        'indeterminate': node.indeterminate(),\n                        'node': node\n                    });\n                }\n            }\n        }, {\n            key: 'renderChildren',\n            value: function renderChildren() {\n                var _props = this.props,\n                    node = _props.node,\n                    dom = _props.dom;\n\n\n                if (node.hasChildren()) {\n                    var nodes = node.children;\n                    var loading = dom.loading;\n                    var pagination = nodes.pagination();\n\n                    return createComponentVNode(2, List, {\n                        'context': node,\n                        'dom': dom,\n                        'limit': pagination.limit,\n                        'loading': loading,\n                        'nodes': nodes,\n                        'total': pagination.total\n                    });\n                } else if (this.props.dom.isDynamic && node.children) {\n                    if (!node.hasLoadedChildren()) {\n                        return createComponentVNode(2, EmptyList, {\n                            'text': 'Loading...'\n                        });\n                    } else {\n                        return createComponentVNode(2, EmptyList, {\n                            'text': 'No Results'\n                        });\n                    }\n                }\n            }\n        }, {\n            key: 'renderEditToolbar',\n            value: function renderEditToolbar() {\n                // @todo fix this boolean\n                if (this.props.dom._tree.config.editing.edit && !this.props.node.editing()) {\n                    return createComponentVNode(2, EditToolbar, {\n                        'dom': this.props.dom,\n                        'node': this.props.node\n                    });\n                }\n            }\n        }, {\n            key: 'renderToggle',\n            value: function renderToggle() {\n                var node = this.props.node;\n                var hasVisibleChildren = !this.props.dom.isDynamic ? node.hasVisibleChildren() : Boolean(node.children);\n\n                if (hasVisibleChildren) {\n                    return createComponentVNode(2, ToggleAnchor, {\n                        'collapsed': node.collapsed(),\n                        'node': node\n                    });\n                }\n            }\n        }, {\n            key: 'render',\n            value: function render$$1() {\n                var _this2 = this;\n\n                var node = this.props.node;\n\n                var li = normalizeProps(createVNode(1, 'li', null, [this.renderEditToolbar(), createVNode(1, 'div', 'title-wrap', [this.renderToggle(), this.renderCheckbox(), createComponentVNode(2, NodeAnchor, {\n                    'dom': this.props.dom,\n                    'editing': node.editing(),\n                    'expanded': node.expanded(),\n                    'hasOrWillHaveChildren': node.hasOrWillHaveChildren(),\n                    'node': node,\n                    'text': node.text\n                })], 0), createVNode(1, 'div', 'wholerow'), this.renderChildren()], 0, _extends({}, this.getAttributes()), null, function (elem) {\n                    return _this2.node = _this2.props.node.itree.ref = elem;\n                }));\n\n                // Clear dirty bool only after everything has been generated (and states set)\n                this.props.node.state('rendered', true);\n                this.props.node.itree.dirty = false;\n\n                return li;\n            }\n        }]);\n        return ListItem;\n    }(Component);\n\n    var List = function (_Component) {\n        inherits(List, _Component);\n\n        function List() {\n            classCallCheck(this, List);\n            return possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).apply(this, arguments));\n        }\n\n        createClass(List, [{\n            key: 'shouldComponentUpdate',\n            value: function shouldComponentUpdate(nextProps) {\n                return _.find(nextProps.nodes, 'itree.dirty') || stateComparator(this.props, nextProps);\n            }\n        }, {\n            key: 'isDeferred',\n            value: function isDeferred() {\n                return this.props.dom.config.deferredRendering || this.props.dom._tree.config.deferredLoading;\n            }\n        }, {\n            key: 'loadMore',\n            value: function loadMore(event) {\n                event.preventDefault();\n                if (this.props.context) {\n                    this.props.context.loadMore(event);\n                } else {\n                    this.props.dom._tree.loadMore(event);\n                }\n            }\n        }, {\n            key: 'renderLoadMoreNode',\n            value: function renderLoadMoreNode() {\n                return createVNode(1, 'li', 'leaf detached', createVNode(1, 'a', 'title icon icon-more load-more', createTextVNode('Load More'), 2, {\n                    'onClick': this.loadMore.bind(this)\n                }), 2);\n            }\n        }, {\n            key: 'renderLoadingTextNode',\n            value: function renderLoadingTextNode() {\n                return createVNode(1, 'li', 'leaf', createVNode(1, 'span', 'title icon icon-more', createTextVNode('Loading...'), 2), 2);\n            }\n        }, {\n            key: 'render',\n            value: function render$$1() {\n                var _this2 = this;\n\n                var renderNodes = this.props.nodes;\n                var pagination = renderNodes.pagination();\n\n                // If rendering deferred, chunk the nodes client-side\n                if (this.props.dom.config.deferredRendering) {\n                    // Filter non-hidden/removed nodes and limit by this context's pagination\n                    var count = 0;\n                    renderNodes = this.props.nodes.filter(function (n) {\n                        var matches = !(n.hidden() || n.removed());\n\n                        if (matches) {\n                            count++;\n                        }\n\n                        return count <= pagination.limit && matches;\n                    });\n                }\n\n                // Render nodes as list items\n                var items = _.map(renderNodes, function (node) {\n                    return createComponentVNode(2, ListItem, {\n                        'dom': _this2.props.dom,\n                        'node': node\n                    }, node.id);\n                });\n\n                if (this.isDeferred() && pagination.limit < pagination.total) {\n                    if (!this.props.loading) {\n                        items.push(this.renderLoadMoreNode());\n                    } else {\n                        items.push(this.renderLoadingTextNode());\n                    }\n                }\n\n                return createVNode(1, 'ol', null, [items, this.props.children], 0);\n            }\n        }]);\n        return List;\n    }(Component);\n\n    var Tree = function (_Component) {\n        inherits(Tree, _Component);\n\n        function Tree() {\n            classCallCheck(this, Tree);\n            return possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).apply(this, arguments));\n        }\n\n        createClass(Tree, [{\n            key: 'add',\n            value: function add() {\n                this.props.dom._tree.focused().blur();\n\n                this.props.dom._tree.addNode(blankNode());\n            }\n        }, {\n            key: 'renderAddLink',\n            value: function renderAddLink() {\n                if (this.props.dom._tree.config.editing.add) {\n                    return createVNode(1, 'li', null, createVNode(1, 'a', 'btn icon icon-plus', null, 1, {\n                        'onClick': this.add.bind(this),\n                        'title': 'Add a new root node'\n                    }), 2);\n                }\n            }\n        }, {\n            key: 'render',\n            value: function render$$1() {\n                var _props = this.props,\n                    dom = _props.dom,\n                    nodes = _props.nodes;\n\n                var loading = dom.loading;\n                var pagination = nodes.pagination();\n\n                return createComponentVNode(2, List, {\n                    'dom': dom,\n                    'limit': pagination.limit,\n                    'loading': loading,\n                    'nodes': nodes,\n                    'total': pagination.total,\n                    children: this.renderAddLink()\n                });\n            }\n        }]);\n        return Tree;\n    }(Component);\n\n    /**\n     * Default InspireTree rendering logic.\n     *\n     * @category DOM\n     * @return {InspireDOM} Default renderer.\n     */\n\n    var InspireDOM = function () {\n        function InspireDOM(tree, opts) {\n            var _this = this;\n\n            classCallCheck(this, InspireDOM);\n\n            if (!(tree instanceof InspireTree)) {\n                throw new TypeError('Tree argument is not an InspireTree instance.');\n            }\n\n            // Init properties\n            this._tree = tree;\n            this.batching = 0;\n            this.dropTargets = [];\n            this.$scrollLayer;\n\n            if (!opts.target) {\n                throw new TypeError('Invalid `target` property - must be a selector, HTMLElement, or jQuery element.');\n            }\n\n            // Let InspireTree know we're in control of a node's `rendered` state\n            tree.usesNativeDOM = true;\n\n            var dndDefaults = {\n                enabled: false,\n                validateOn: 'dragstart',\n                validate: null\n            };\n\n            // Assign defaults\n            this.config = _.defaultsDeep({}, opts, {\n                autoLoadMore: true,\n                deferredRendering: false,\n                dragAndDrop: dndDefaults,\n                nodeHeight: 25,\n                showCheckboxes: false,\n                tabindex: -1,\n                target: false\n            });\n\n            if (opts.dragAndDrop === true) {\n                this.config.dragAndDrop = dndDefaults;\n                this.config.dragAndDrop.enabled = true;\n            }\n\n            // If user didn't specify showCheckboxes,\n            // but is using checkbox selection mode,\n            // enable it automatically.\n            if (tree.config.selection.mode === 'checkbox' && !_.isBoolean(_.get(opts, 'showCheckboxes'))) {\n                this.config.showCheckboxes = true;\n            }\n\n            // Cache because we use in loops\n            this.isDynamic = _.isFunction(this._tree.config.data);\n\n            // Connect to our target DOM element\n            this.attach(this.config.target);\n\n            var initialRender = true;\n\n            // Apply changes\n            tree.on('changes.applied', function () {\n                _this.renderNodes();\n\n                if (initialRender) {\n                    _this.scrollSelectedIntoView();\n\n                    initialRender = false;\n                }\n            });\n\n            // Immediately render, just in case any already exists\n            this.renderNodes();\n        }\n\n        /**\n         * Attaches to the DOM element for rendering.\n         *\n         * @category DOM\n         * @private\n         * @param {HTMLElement} target Element, selector, or jQuery-like object.\n         * @return {void}\n         */\n\n\n        createClass(InspireDOM, [{\n            key: 'attach',\n            value: function attach(target) {\n                this.$target = this.getElement(target);\n                this.$scrollLayer = this.getScrollableAncestor(this.$target);\n\n                if (!this.$target) {\n                    throw new Error('No valid element to attach to.');\n                }\n\n                this.$target.setAttribute('data-uid', this._tree.id);\n\n                // Set classnames\n                var classNames = this.$target.className.split(' ');\n                classNames.push('inspire-tree');\n\n                if (this._tree.config.editable) {\n                    classNames.push('editable');\n\n                    _.each(_.pickBy(this._tree.config.editing, _.identity), function (v, key) {\n                        classNames.push('editable-' + key);\n                    });\n                }\n\n                this.$target.className = classNames.join(' ');\n                this.$target.setAttribute('tabindex', this.config.tabindex || 0);\n\n                // Handle keyboard interaction\n                this.$target.addEventListener('keydown', this.keyboardListener.bind(this));\n\n                // Drag and drop listeners\n                if (this.config.dragAndDrop.enabled) {\n                    this.$target.addEventListener('dragenter', this.onDragEnter.bind(this), false);\n                    this.$target.addEventListener('dragleave', this.onDragLeave.bind(this), false);\n                    this.$target.addEventListener('dragover', this.onDragOver.bind(this), false);\n                    this.$target.addEventListener('drop', this.onDrop.bind(this), false);\n\n                    this.$target.classList.add('drag-and-drop');\n                }\n\n                // Sync browser focus to focus state\n                this._tree.on('node.focused', function (node) {\n                    var elem = node.itree.ref.querySelector('.title');\n                    if (elem !== document.activeElement) {\n                        elem.focus();\n                    }\n                });\n\n                if (this.config.deferredRendering || this._tree.config.deferredLoading) {\n                    // Force valid pagination limit based on viewport\n                    var limit = this._tree.config.pagination.limit;\n                    this._tree.config.pagination.limit = limit > 0 ? limit : _.ceil(this.$scrollLayer.clientHeight / this.config.nodeHeight);\n\n                    // Listen for scrolls for automatic loading\n                    if (this.config.autoLoadMore) {\n                        this.$target.addEventListener('scroll', _.throttle(this.scrollListener.bind(this), 20));\n                    }\n                }\n\n                this.$target.inspireTree = this._tree;\n            }\n\n            /**\n             * Clear page text selection, primarily after a click event which\n             * natively selects a range of text.\n             *\n             * @category DOM\n             * @private\n             * @return {void}\n             */\n\n        }, {\n            key: 'clearSelection',\n            value: function clearSelection() {\n                if (document.selection && document.selection.empty) {\n                    document.selection.empty();\n                } else if (window.getSelection) {\n                    window.getSelection().removeAllRanges();\n                }\n            }\n\n            /**\n             * Get an HTMLElement through various means:\n             * An element, jquery object, or a selector.\n             *\n             * @category DOM\n             * @private\n             * @param {mixed} target Element, jQuery selector, selector.\n             * @return {HTMLElement} Matching element.\n             */\n\n        }, {\n            key: 'getElement',\n            value: function getElement(target) {\n                var $element = void 0;\n\n                if (target instanceof HTMLElement) {\n                    $element = target;\n                } else if (_.isObject(target) && _.isObject(target[0])) {\n                    $element = target[0];\n                } else if (_.isString(target)) {\n                    var match = document.querySelector(target);\n                    if (match) {\n                        $element = match;\n                    }\n                }\n\n                return $element;\n            }\n\n            /**\n             * Helper method to find a scrollable ancestor element.\n             *\n             * @category DOM\n             * @private\n             * @param {HTMLElement} $element Starting element.\n             * @return {HTMLElement} Scrollable element.\n             */\n\n        }, {\n            key: 'getScrollableAncestor',\n            value: function getScrollableAncestor($element) {\n                if ($element instanceof Element) {\n                    var style = getComputedStyle($element);\n                    if (style.overflow !== 'auto' && $element.parentNode) {\n                        $element = this.getScrollableAncestor($element.parentNode);\n                    }\n                }\n\n                return $element;\n            }\n\n            /**\n             * Get a tree instance based on an ID.\n             *\n             * @category DOM\n             * @param {string} id Tree ID.\n             * @return {InspireTree} Tree instance.\n             */\n\n        }, {\n            key: 'keyboardListener',\n\n\n            /**\n             * Listen to keyboard event for navigation.\n             *\n             * @category DOM\n             * @private\n             * @param {Event} event Keyboard event.\n             * @return {void}\n             */\n            value: function keyboardListener(event) {\n                event.stopPropagation();\n\n                // Ignore keys we won't care for.\n                // For example, this avoids trampling cmd+reload\n                if ([DOWN_ARROW, ENTER, LEFT_ARROW, RIGHT_ARROW, UP_ARROW].indexOf(event.which) < 0) {\n                    return;\n                }\n\n                // Navigation\n                var focusedNodes = this._tree.focused();\n                if (focusedNodes.length) {\n                    event.preventDefault();\n\n                    switch (event.which) {\n                        case DOWN_ARROW:\n                            this.moveFocusDownFrom(focusedNodes[0]);\n                            break;\n                        case ENTER:\n                            focusedNodes[0].toggleSelect();\n                            break;\n                        case LEFT_ARROW:\n                            focusedNodes[0].collapse();\n                            break;\n                        case RIGHT_ARROW:\n                            focusedNodes[0].expand();\n                            break;\n                        case UP_ARROW:\n                            this.moveFocusUpFrom(focusedNodes[0]);\n                            break;\n                        default:\n                    }\n                }\n            }\n\n            /**\n             * Move select down the visible tree from a starting node.\n             *\n             * @category DOM\n             * @private\n             * @param {object} startingNode Node object.\n             * @return {void}\n             */\n\n        }, {\n            key: 'moveFocusDownFrom',\n            value: function moveFocusDownFrom(startingNode) {\n                var next = startingNode.nextVisibleNode();\n                if (next) {\n                    next.focus();\n                }\n            }\n\n            /**\n             * Move select up the visible tree from a starting node.\n             *\n             * @category DOM\n             * @private\n             * @param {object} startingNode Node object.\n             * @return {void}\n             */\n\n        }, {\n            key: 'moveFocusUpFrom',\n            value: function moveFocusUpFrom(startingNode) {\n                var prev = startingNode.previousVisibleNode();\n                if (prev) {\n                    prev.focus();\n                }\n            }\n\n            /**\n             * Helper method for obtaining the data-uid from a DOM element.\n             *\n             * @category DOM\n             * @private\n             * @param {HTMLElement} element HTML Element.\n             * @return {object} Node object\n             */\n\n        }, {\n            key: 'nodeFromTitleDOMElement',\n            value: function nodeFromTitleDOMElement(element) {\n                var uid = element.parentNode.parentNode.getAttribute('data-uid');\n                return this._tree.node(uid);\n            }\n\n            /**\n             * Drag enter listener.\n             *\n             * @category DOM\n             * @private\n             * @param {DragEvent} event Drag enter.\n             * @return {void}\n             */\n\n        }, {\n            key: 'onDragEnter',\n            value: function onDragEnter(event) {\n                event.preventDefault();\n\n                event.target.classList.add('drag-targeting', 'drag-targeting-insert');\n            }\n\n            /**\n             * Drag leave listener.\n             *\n             * @category DOM\n             * @private\n             * @param {DragEvent} event Drag leave.\n             * @return {void}\n             */\n\n        }, {\n            key: 'onDragLeave',\n            value: function onDragLeave(event) {\n                event.preventDefault();\n\n                this.unhighlightTarget(event.target);\n            }\n\n            /**\n             * Drag over listener.\n             *\n             * @category DOM\n             * @private\n             * @param {DragEvent} event Drag over.\n             * @return {void}\n             */\n\n        }, {\n            key: 'onDragOver',\n            value: function onDragOver(event) {\n                event.preventDefault();\n            }\n\n            /**\n             * Drop listener.\n             *\n             * @category DOM\n             * @private\n             * @param {DragEvent} event Dropped.\n             * @return {void}\n             */\n\n        }, {\n            key: 'onDrop',\n            value: function onDrop(event) {\n                event.preventDefault();\n\n                this.unhighlightTarget(event.target);\n\n                var treeId = event.dataTransfer.getData('treeId');\n                var nodeId = event.dataTransfer.getData('nodeId');\n\n                // Find the tree\n                var tree = InspireDOM.getTreeById(treeId);\n                var node = tree.node(nodeId);\n\n                node.state('drop-target', true);\n\n                // Remove the node from its previous context\n                var exported = node.remove(true);\n\n                // Add the node to this tree/level\n                var newNode = this._tree.addNode(exported);\n                var newIndex = this._tree.indexOf(newNode);\n\n                this._tree.emit('node.drop', event, newNode, null, newIndex);\n            }\n\n            /**\n             * Triggers rendering for the given node array.\n             *\n             * @category DOM\n             * @private\n             * @param {array} nodes Array of node objects.\n             * @return {void}\n             */\n\n        }, {\n            key: 'renderNodes',\n            value: function renderNodes(nodes) {\n                render(createComponentVNode(2, Tree, {\n                    'dom': this,\n                    'nodes': nodes || this._tree.nodes()\n                }), this.$target);\n            }\n        }, {\n            key: 'scrollListener',\n\n\n            /**\n             * Listens for scroll events, to automatically trigger\n             * Load More links when they're scrolled into view.\n             *\n             * @category DOM\n             * @private\n             * @param {Event} event Scroll event.\n             * @return {void}\n             */\n            value: function scrollListener(event) {\n                var _this2 = this;\n\n                if (!this.rendering && !this.loading) {\n                    // Get the bounding rect of the scroll layer\n                    var rect = this.$scrollLayer.getBoundingClientRect();\n\n                    // Find all load-more links\n                    var links = document.querySelectorAll('.load-more');\n                    _.each(links, function (link) {\n                        // Look for load-more links which overlap our \"viewport\"\n                        var r = link.getBoundingClientRect();\n                        var overlap = !(rect.right < r.left || rect.left > r.right || rect.bottom < r.top || rect.top > r.bottom);\n\n                        if (overlap) {\n                            // Auto-trigger Load More links\n                            var context = void 0;\n\n                            var $parent = link.parentNode.parentNode.parentNode;\n                            if ($parent.tagName === 'LI') {\n                                context = _this2._tree.node($parent.getAttribute('data-uid'));\n                            }\n\n                            _this2._tree.loadMore(context, event);\n                        }\n                    });\n                }\n            }\n\n            /**\n             * Scroll the first selected node into view.\n             *\n             * @category DOM\n             * @private\n             * @return {void}\n             */\n\n        }, {\n            key: 'scrollSelectedIntoView',\n            value: function scrollSelectedIntoView() {\n                var $selected = this.$target.querySelector('.selected');\n\n                if ($selected && this.$scrollLayer) {\n                    this.$scrollLayer.scrollTop = $selected.offsetTop;\n                }\n            }\n\n            /**\n             * Remove highlight class.\n             *\n             * @category DOM\n             * @private\n             * @param {HTMLElement} element Target element.\n             * @return {void}\n             */\n\n        }, {\n            key: 'unhighlightTarget',\n            value: function unhighlightTarget(element) {\n                if (element) {\n                    element.classList.remove('drag-targeting', 'drag-targeting-insert');\n                }\n            }\n        }], [{\n            key: 'getTreeById',\n            value: function getTreeById(id) {\n                var element = document.querySelector('[data-uid=\"' + id + '\"]');\n                if (element) {\n                    return element.inspireTree;\n                }\n            }\n        }]);\n        return InspireDOM;\n    }();\n\n    return InspireDOM;\n\n})));\n","'use strict';\n\n\n/* IMPORTANT NOTE:\n * If any of the modules listed below is removed from Hypergrid, the polyfill(s) they define must be added here!!!\n *\n * 1. object-iterators defines Array.prototype.find\n */\n\n\n/* eslint-disable no-extend-native */\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\n// (Safari now supports Math.sign but IE still does not as of v11.)\nMath.sign = Math.sign = function(x) {\n    x = +x; // convert to a number\n    if (x === 0 || isNaN(x)) {\n        return x;\n    }\n    return x > 0 ? 1 : -1;\n};\n\n// Lite version of: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex#Polyfill\nif (typeof Array.prototype.findIndex !== 'function') {\n    Array.prototype.findIndex = function(predicate) {\n        var context = arguments[1];\n        for (var i = 0, len = this.length; i < len; i++) {\n            if (predicate.call(context, this[i], i, this)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\n// Simpler version of: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/fill#Polyfill\nif (typeof Array.prototype.fill !== 'function') {\n    Array.prototype.fill = function(value, start, end) {\n        start = start === undefined ? 0 : start < 0 ? this.length + start : start;\n        end = end === undefined ? this.length : end < 0 ? this.length + end : end;\n        for (var i = start || 0; i < end; ++i) {\n            this[i] = value;\n        }\n        return this;\n    };\n}\n\n// Lite version of: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign !== 'function') {\n    Object.assign = function(target) {\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        target[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n\nif (typeof Object.getOwnPropertyDescriptors !== 'function') {\n    Object.getOwnPropertyDescriptors = function(object) {\n        return Object.getOwnPropertyNames(object).reduce(function(descriptors, key) {\n            descriptors[key] = Object.getOwnPropertyDescriptor(object, key);\n            return descriptors;\n        }, {});\n    };\n}\n","/* eslint-env browser */\n\n'use strict';\n\nvar automat = require('automat');\n\n/**\n * @summary Injects the named stylesheet into `<head>`.\n * @desc Stylesheets are inserted consecutively at end of `<head>` unless `before === true` (or omitted and `injectStylesheetTemplate.before` truthy) in which case they are inserted consecutively before first stylesheet found in `<head>` (if any) at load time.\n *\n * The calling context (`this`) is a stylesheet registry.\n * If `this` is undefined, the global stylesheet registry (css/index.js) is used.\n * @this {object}\n * @param {boolean} [before=injectStylesheetTemplate.before] - Add stylesheet before intially loaded stylesheets.\n *\n * _If omitted:_\n * 1. `id` is promoted to first argument position\n * 2. `injectStylesheetTemplate.before` is `true` by default\n * @param {string} id - The name of the style sheet in `this`, a stylesheet \"registry\" (hash of stylesheets).\n * @returns {Element|*}\n */\nfunction injectStylesheetTemplate(before, id) {\n    var optionalArgsStartAt, stylesheet, head, refNode, css, args,\n        prefix = injectStylesheetTemplate.prefix;\n\n    if (typeof before === 'boolean') {\n        optionalArgsStartAt = 2;\n    } else {\n        id = before;\n        before = injectStylesheetTemplate.before;\n        optionalArgsStartAt = 1;\n    }\n\n    stylesheet = document.getElementById(prefix + id);\n\n    if (!stylesheet) {\n        head = document.querySelector('head');\n\n        if (before) {\n            // note position of first stylesheet\n            refNode = Array.prototype.slice.call(head.children).find(function(child) {\n                var id = child.getAttribute('id');\n                return child.tagName === 'STYLE' && (!id || id.indexOf(prefix) !== prefix) ||\n                    child.tagName === 'LINK' && child.getAttribute('rel') === 'stylesheet';\n            });\n        }\n\n        css = this[id];\n\n        if (!css) {\n            throw 'Expected to find member `' + id + '` in calling context.';\n        }\n\n        args = [\n            '<style>\\n' + css + '\\n</style>\\n',\n            head,\n            refNode || null // explicitly null per https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n        ];\n\n        if (arguments.length > 1) {\n            args = args.concat(Array.prototype.slice.call(arguments, optionalArgsStartAt));\n        }\n\n        stylesheet = automat.append.apply(null, args)[0];\n        stylesheet.id = prefix + id;\n    }\n\n    return stylesheet;\n}\n\ninjectStylesheetTemplate.before = true;\ninjectStylesheetTemplate.prefix = 'injected-stylesheet-';\n\nmodule.exports = injectStylesheetTemplate;\n","/* eslint-env browser */\n\n'use strict';\n\n/** @module automat */\n\nvar ENCODERS = /%\\{(\\d+)\\}/g; // double $$ to encode\n\nvar REPLACERS = /\\$\\{(.*?)\\}/g; // single $ to replace\n\n\n/**\n * @summary String formatter.\n *\n * @desc String substitution is performed on numbered _replacer_ patterns like `${n}` or _encoder_ patterns like `%{n}` where n is the zero-based `arguments` index. So `${0}` would be replaced with the first argument following `text`.\n *\n * Encoders are just like replacers except the argument is HTML-encoded before being used.\n *\n * To change the format patterns, assign new `RegExp` patterns to `automat.encoders` and `automat.replacers`.\n *\n * @param {string|function} template - A template to be formatted as described above. Overloads:\n * * A string primitive containing the template.\n * * A function to be called with `this` as the calling context. The template is the value returned from this call.\n *\n * @param {...*} [replacements] - Replacement values for numbered format patterns.\n *\n * @return {string} The formatted text.\n *\n * @memberOf module:automat\n */\nfunction automat(template, replacements/*...*/) {\n    var hasReplacements = arguments.length > 1;\n\n    // if `template` is a function, convert it to text\n    if (typeof template === 'function') {\n        template = template.call(this); // non-template function: call it with context and use return value\n    }\n\n    if (hasReplacements) {\n        var args = arguments;\n        template = template.replace(automat.replacersRegex, function(match, key) {\n            key -= -1; // convert to number and increment\n            return args.length > key ? args[key] : '';\n        });\n\n        template = template.replace(automat.encodersRegex, function(match, key) {\n            key -= -1; // convert to number and increment\n            if (args.length > key) {\n                var htmlEncoderNode = document.createElement('DIV');\n                htmlEncoderNode.textContent = args[key];\n                return htmlEncoderNode.innerHTML;\n            } else {\n                return '';\n            }\n        });\n    }\n\n    return template;\n}\n\n/**\n * @summary Replace contents of `el` with `Nodes` generated from formatted template.\n *\n * @param {string|function} template - See `template` parameter of {@link automat}.\n *\n * @param {HTMLElement} [el] - Node in which to return markup generated from template. If omitted, a new `<div>...</div>` element will be created and returned.\n *\n * @param {...*} [replacements] - Replacement values for numbered format patterns.\n *\n * @return {HTMLElement} The `el` provided or a new `<div>...</div>` element, its `innerHTML` set to the formatted text.\n *\n * @memberOf module:automat\n */\nfunction replace(template, el, replacements/*...*/) {\n    var elOmitted = typeof el !== 'object',\n        args = Array.prototype.slice.call(arguments, 1);\n\n    if (elOmitted) {\n        el = document.createElement('DIV');\n        args.unshift(template);\n    } else {\n        args[0] = template;\n    }\n\n    el.innerHTML = automat.apply(null, args);\n\n    return el;\n}\n\n/**\n * @summary Append or insert `Node`s generated from formatted template into given `el`.\n *\n * @param {string|function} template - See `template` parameter of {@link automat}.\n *\n * @param {HTMLElement} el\n *\n * @param {Node} [referenceNode=null] Inserts before this element within `el` or at end of `el` if `null`.\n *\n * @param {...*} [replacements] - Replacement values for numbered format patterns.\n *\n * @returns {Node[]} Array of the generated nodes (this is an actual Array instance; not an Array-like object).\n *\n * @memberOf module:automat\n */\nfunction append(template, el, referenceNode, replacements/*...*/) {\n    var replacementsStartAt = 3,\n        referenceNodeOmitted = typeof referenceNode !== 'object';  // replacements are never objects\n\n    if (referenceNodeOmitted) {\n        referenceNode = null;\n        replacementsStartAt = 2;\n    }\n\n    replacements = Array.prototype.slice.call(arguments, replacementsStartAt);\n    var result = [],\n        div = replace.apply(null, [template].concat(replacements));\n\n    while (div.childNodes.length) {\n        result.push(div.firstChild);\n        el.insertBefore(div.firstChild, referenceNode); // removes child from div\n    }\n\n    return result;\n}\n\n/**\n * Use this convenience wrapper to return the first child node described in `template`.\n *\n * @param {string|function} template - If a function, extract template from comment within.\n *\n * @returns {HTMLElement} The first `Node` in your template.\n *\n * @memberOf module:automat\n */\nfunction firstChild(template, replacements/*...*/) {\n    return replace.apply(null, arguments).firstChild;\n}\n\n/**\n * Use this convenience wrapper to return the first child element described in `template`.\n *\n * @param {string|function} template - If a function, extract template from comment within.\n *\n * @returns {HTMLElement} The first `HTMLElement` in your template.\n *\n * @memberOf module:automat\n */\nfunction firstElement(template, replacements/*...*/) {\n    return replace.apply(null, arguments).firstElementChild;\n}\n\n/**\n * @summary Finds string substitution lexemes that require HTML encoding.\n * @desc Modify to suit.\n * @default %{n}\n * @type {RegExp}\n * @memberOf module:automat\n */\nautomat.encodersRegex = ENCODERS;\n\n/**\n * @summary Finds string substitution lexemes.\n * @desc Modify to suit.\n * @default ${n}\n * @type {RegExp}\n * @memberOf module:automat\n */\nautomat.replacersRegex = REPLACERS;\n\nautomat.format = automat; // if you find using just `automat()` confusing\nautomat.replace = replace;\nautomat.append = append;\nautomat.firstChild = firstChild;\nautomat.firstElement = firstElement;\n\nmodule.exports = automat;\n","'use strict';\n\nexports.grid = [\n'.hypergrid-container {',\n'\tposition: relative;',\n'\theight: 500px;',\n'}',\n'.hypergrid-container > div:first-child {',\n'\tposition: absolute;',\n'\tleft: 0;',\n'\ttop: 0;',\n'\tright: 0;',\n'\tbottom: 0;',\n'}',\n'.hypergrid-container > div:first-child > div.info {',\n'\tposition: absolute;',\n'\tdisplay: none; /* initially hidden */',\n'\tmargin-top: 150px; /* to place below headers */',\n'\tcolor: #eee;',\n'\ttext-shadow: 1px 1px #ccc;',\n'\tfont-size: 36pt;',\n'\tfont-weight: bold;',\n'\ttext-align: center;',\n'\ttop: 0; right: 0; bottom: 0; left: 0;',\n'}',\n'.hypergrid-textfield {',\n'\tposition: absolute;',\n'\tfont-size: 12px;',\n'\tcolor: black;',\n'\tbackground-color: ivory;',\n'\tbox-sizing: border-box;',\n'\tmargin: 0;',\n'\tpadding: 0 5px;',\n'\tborder: 0; /*border: 1px solid #777;*/',\n'\toutline: 0;',\n'}',\n'',\n''\n].join('\\n');\n","'use strict';\n\n// console.warn polyfill as needed\n// used for deprecation warnings\nif (!console.warn) {\n    console.warn = function() {\n        console.log.apply(console, ['WARNING:'].concat(Array.prototype.slice.call(arguments)));\n    };\n}\n\nvar regexIsMethod = /^[\\w\\.]+\\(.*\\)$/;\n\n/**\n * User is warned and new property is returned or new method is called and the result is returned.\n * @param {string} methodName - Warning key paired with arbitrary warning in `dotProps` OR deprecated method name with parentheses containing optional argument list paired with replacement property or method in `dotProps`.\n * @param {string} dotProps - Arbitrary warning paired with warning key in `methodName` OR dot-separated new property name to invoke or method name to call. Method names are indicated by including parentheses with optional argument list. The arguments in each list are drawn from the arguments presented in the `methodName` parameter.\n * @param {string} since - Version in which the name was deprecated.\n * @param {Arguments|Array} [args] - The actual arguments in the order listed in `methodName`. Only needed when arguments need to be forwarded.\n * @param {string} [notes] - Notes to add to message.\n * @returns {*} Return value of new property or method call.\n */\nvar deprecated = function(methodName, dotProps, since, args, notes) {\n    if (typeof args === 'string') {\n        // `args` omitted\n        notes = args;\n        args = undefined;\n    }\n\n    var chain = dotProps.split('.'),\n        warned = this.$$DEPRECATION_WARNED = this.$$DEPRECATION_WARNED || {},\n        result = this,\n        isSimpleWarning = dotProps.indexOf(' ') >= 0,\n        isMethodCall = regexIsMethod.test(methodName),\n        memberType,\n        warning;\n\n    if (!(methodName in warned)) {\n        warned[methodName] = deprecated.warnings;\n    }\n\n    if (isMethodCall) {\n        if (isSimpleWarning) {\n            throw 'Expected replacement method or property in 2nd parameter of deprecated() call.';\n        } else if (warned[methodName]) {\n            --warned[methodName];\n            memberType = regexIsMethod.test(dotProps) ? 'method' : 'property';\n            warning = 'The .' + methodName + ' method has been deprecated as of v' + since +\n                ' in favor of the .' + chain.join('.') + ' ' + memberType + '.' +\n                ' (Will be removed in a future release.)';\n\n            if (notes) {\n                warning += ' ' + notes;\n            }\n\n            console.warn(warning);\n        }\n    } else if (isSimpleWarning) {\n        if (warned[methodName]) {\n            --warned[methodName];\n            console.warn(dotProps);\n        }\n        return;\n    } else {\n        throw 'Expected method name with parentheses in 1st parameter OR simple warning (containing one or more spaces) in 2nd parameter of deprecated() call.';\n    }\n\n    var formalArgList = argList(methodName);\n\n    function mapToFormalArg(argName) {\n        var index = formalArgList.indexOf(argName);\n        if (index === -1) {\n            throw 'Actual arg \"' + argName + '\" not found in formal arg list ' + formalArgList;\n        }\n        return args[index];\n    }\n\n    for (var i = 0, last = chain.length - 1; i <= last; ++i) {\n        var link = chain[i],\n            name = link.match(/\\w+/)[0],\n            linkIsMethodCall = regexIsMethod.test(link),\n            actualArgList = linkIsMethodCall ? argList(link) : undefined,\n            actualArgs = [];\n\n        if (actualArgList) {\n            actualArgs = actualArgList.map(mapToFormalArg);\n            result = result[name].apply(result, actualArgs);\n        } else if (linkIsMethodCall) {\n            result = result[name]();\n        } else {\n            result = result[name];\n        }\n    }\n\n    return result;\n};\n\ndeprecated.warnings = 1; // 3 or 5 would get more attention\n\nfunction argList(s) {\n    return s.match(/^\\w+\\((.*)\\)$/)[1].match(/(\\w+)/g);\n}\n\nmodule.exports = deprecated;\n","/* eslint-env browser */\n\n'use strict';\n\nif (typeof window.CustomEvent !== 'function') {\n    window.CustomEvent = function(event, params) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    };\n\n    window.CustomEvent.prototype = window.Event.prototype;\n}\n\nvar rectangular = require('rectangular');\n\nvar RESIZE_POLLING_INTERVAL = 200,\n    paintables = [],\n    resizables = [],\n    paintRequest,\n    resizeInterval,\n    charMap = makeCharMap();\n\nfunction Canvas(div, component, contextAttributes) {\n    var self = this;\n\n    // create the containing <div>...</div>\n    this.div = div;\n    this.component = component;\n\n    this.dragEndtime = Date.now();\n\n    // create and append the info <div>...</div> (to be displayed when there are no data rows)\n    this.infoDiv = document.createElement('div');\n    this.infoDiv.className = 'info';\n    this.div.appendChild(this.infoDiv);\n\n    // create and append the canvas\n    this.gc = getCachedContext(this.canvas = document.createElement('canvas'), contextAttributes);\n    this.bc = getCachedContext(this.buffer = document.createElement('canvas'), contextAttributes);\n\n    this.div.appendChild(this.canvas);\n\n    this.canvas.style.outline = 'none';\n\n    this.mouseLocation = new rectangular.Point(-1, -1);\n    this.dragstart = new rectangular.Point(-1, -1);\n    //this.origin = new rectangular.Point(0, 0);\n    this.bounds = new rectangular.Rectangle(0, 0, 0, 0);\n    this.hasMouse = false;\n\n    document.addEventListener('mousemove', function(e) {\n        if (self.hasMouse || self.isDragging()) {\n            self.finmousemove(e);\n        }\n    });\n    document.addEventListener('mouseup', function(e) {\n        self.finmouseup(e);\n    });\n    document.addEventListener('wheel', function(e) {\n        self.finwheelmoved(e);\n    });\n    document.addEventListener('keydown', function(e) {\n        self.finkeydown(e);\n    });\n    document.addEventListener('keyup', function(e) {\n        self.finkeyup(e);\n    });\n\n    this.canvas.onmouseover = function() {\n        self.hasMouse = true;\n    };\n    this.addEventListener('focus', function(e) {\n        self.finfocusgained(e);\n    });\n    this.addEventListener('blur', function(e) {\n        self.finfocuslost(e);\n    });\n    this.addEventListener('mousedown', function(e) {\n        self.finmousedown(e);\n    });\n    this.addEventListener('mouseout', function(e) {\n        self.hasMouse = false;\n        self.finmouseout(e);\n    });\n    this.addEventListener('click', function(e) {\n        self.finclick(e);\n    });\n    this.addEventListener('dblclick', function(e) {\n        self.findblclick(e);\n    });\n    this.addEventListener('contextmenu', function(e) {\n        self.fincontextmenu(e);\n        e.preventDefault();\n        return false;\n    });\n\n    this.canvas.setAttribute('tabindex', 0);\n\n    this.resize();\n\n    this.beginResizing();\n    this.beginPainting();\n}\n\nCanvas.prototype = {\n    constructor: Canvas.prototype.constructor,\n    div: null,\n    component: null,\n    canvas: null,\n    focuser: null,\n    buffer: null,\n    ctx: null,\n    mouseLocation: null,\n    dragstart: null,\n    origin: null,\n    bounds: null,\n    dirty: false,\n    size: null,\n    mousedown: false,\n    dragging: false,\n    repeatKeyCount: 0,\n    repeatKey: null,\n    repeatKeyStartTime: 0,\n    currentKeys: [],\n    hasMouse: false,\n    dragEndTime: 0,\n    lastRepaintTime: 0,\n    currentPaintCount: 0,\n    currentFPS: 0,\n    lastFPSComputeTime: 0,\n\n    addEventListener: function(name, callback) {\n        this.canvas.addEventListener(name, callback);\n    },\n\n    removeEventListener: function(name, callback) {\n        this.canvas.removeEventListener(name, callback);\n    },\n\n    stopPaintLoop: stopPaintLoop,\n    restartPaintLoop: restartPaintLoop,\n\n    stopResizeLoop: stopResizeLoop,\n    restartResizeLoop: restartResizeLoop,\n\n    detached: function() {\n        this.stopPainting();\n        this.stopResizing();\n    },\n\n    getCurrentFPS:function() {\n        return this.currentFPS;\n    },\n\n\n    tickPaint: function(now) {\n        var isContinuousRepaint = this.component.properties.enableContinuousRepaint,\n            fps = this.component.properties.repaintIntervalRate;\n        if (fps === 0) {\n            return;\n        }\n        var interval = 1000 / fps;\n\n        var elapsed = now - this.lastRepaintTime;\n        if (elapsed > interval && (isContinuousRepaint || this.dirty)) {\n            this.paintNow();\n            this.lastRepaintTime = now;\n            /* - (elapsed % interval);*/\n            if (isContinuousRepaint) {\n                this.currentPaintCount++;\n                if (now - this.lastFPSComputeTime >= 1000) {\n                    this.currentFPS = (this.currentPaintCount * 1000) / (now - this.lastFPSComputeTime);\n                    this.currentPaintCount = 0;\n                    this.lastFPSComputeTime = now;\n                }\n            }\n        }\n    },\n\n    beginPainting: function() {\n        var self = this;\n        this.requestRepaint();\n        this.tickPainter = function(now) {\n            self.tickPaint(now);\n        };\n        paintables.push(this);\n    },\n\n    stopPainting: function() {\n        paintables.splice(paintables.indexOf(this), 1);\n    },\n\n    beginResizing: function() {\n        var self = this;\n        this.tickResizer = function() {\n            self.checksize();\n        };\n        resizables.push(this);\n    },\n\n    stopResizing: function() {\n        resizables.splice(resizables.indexOf(this), 1);\n    },\n\n    start: function() {\n        this.beginPainting();\n        this.beginResizing();\n    },\n\n    stop: function() {\n        this.stopPainting();\n        this.stopResizing();\n    },\n\n    getDivBoundingClientRect: function() {\n        // Make sure our canvas has integral dimensions\n        var rect = this.div.getBoundingClientRect();\n        var top = Math.floor(rect.top),\n            left = Math.floor(rect.left),\n            width = Math.ceil(rect.width),\n            height = Math.ceil(rect.height);\n\n        return {\n            top: top,\n            right: left + width,\n            bottom: top + height,\n            left: left,\n            width: width,\n            height: height,\n            x: rect.x,\n            y: rect.y\n        };\n    },\n\n    checksize: function() {\n        //this is expensive lets do it at some modulo\n        var sizeNow = this.getDivBoundingClientRect();\n        if (sizeNow.width !== this.size.width || sizeNow.height !== this.size.height) {\n            this.resize();\n        }\n    },\n\n    resize: function() {\n        var box = this.size = this.getDivBoundingClientRect();\n\n        this.width = box.width;\n        this.height = box.height;\n\n        //fix ala sir spinka, see\n        //http://www.html5rocks.com/en/tutorials/canvas/hidpi/\n        //just add 'hdpi' as an attribute to the fin-canvas tag\n        var ratio = 1;\n        var isHIDPI = window.devicePixelRatio && this.component.properties.useHiDPI;\n        if (isHIDPI) {\n            var devicePixelRatio = window.devicePixelRatio || 1;\n            var backingStoreRatio = this.gc.webkitBackingStorePixelRatio ||\n                this.gc.mozBackingStorePixelRatio ||\n                this.gc.msBackingStorePixelRatio ||\n                this.gc.oBackingStorePixelRatio ||\n                this.gc.backingStorePixelRatio || 1;\n\n            ratio = devicePixelRatio / backingStoreRatio;\n            //this.canvasCTX.scale(ratio, ratio);\n        }\n\n        this.buffer.width = this.canvas.width = this.width * ratio;\n        this.buffer.height = this.canvas.height = this.height * ratio;\n\n        this.canvas.style.width = this.buffer.style.width = this.width + 'px';\n        this.canvas.style.height = this.buffer.style.height = this.height + 'px';\n\n        this.bc.scale(ratio, ratio);\n        if (isHIDPI && !this.component.properties.useBitBlit) {\n            this.gc.scale(ratio, ratio);\n        }\n\n        this.bounds = new rectangular.Rectangle(0, 0, this.width, this.height);\n        this.component.setBounds(this.bounds);\n        this.resizeNotification();\n        this.paintNow();\n    },\n\n    resizeNotification: function() {\n        this.dispatchNewEvent(undefined, 'fin-canvas-resized', {\n            width: this.width,\n            height: this.height\n        });\n    },\n\n    getBounds: function() {\n        return this.bounds;\n    },\n\n    paintNow: function() {\n        var useBitBlit = this.component.properties.useBitBlit,\n            gc = useBitBlit ? this.bc : this.gc;\n\n        try {\n            gc.cache.save();\n            this.dirty = false;\n            this.component.paint(gc);\n        } catch (e) {\n            console.error(e);\n        } finally {\n            gc.cache.restore();\n        }\n\n        if (useBitBlit) {\n            this.flushBuffer();\n        }\n    },\n\n    flushBuffer: function() {\n        if (this.buffer.width > 0 && this.buffer.height > 0) {\n            this.gc.drawImage(this.buffer, 0, 0);\n        }\n    },\n\n    newEvent: function(primitiveEvent, name, detail) {\n        var event = {\n            detail: detail || {}\n        };\n        if (primitiveEvent) {\n            event.detail.primitiveEvent = primitiveEvent;\n        }\n        return new CustomEvent(name, event);\n    },\n\n    dispatchNewEvent: function(primitiveEvent, name, detail) {\n        return this.canvas.dispatchEvent(this.newEvent(primitiveEvent, name, detail));\n    },\n\n    dispatchNewMouseKeysEvent: function(event, name, detail) {\n        detail = detail || {};\n        detail.mouse = this.mouseLocation;\n        detail.keys = this.currentKeys;\n        return this.dispatchNewEvent(event, name, detail);\n    },\n\n    finmousemove: function(e) {\n        if (!this.isDragging() && this.mousedown) {\n            this.beDragging();\n            this.dispatchNewMouseKeysEvent(e, 'fin-canvas-dragstart', {\n                isRightClick: this.isRightClick(e),\n                dragstart: this.dragstart\n            });\n            this.dragstart = new rectangular.Point(this.mouseLocation.x, this.mouseLocation.y);\n        }\n        this.mouseLocation = this.getLocal(e);\n        //console.log(this.mouseLocation);\n        if (this.isDragging()) {\n            this.dispatchNewMouseKeysEvent(e, 'fin-canvas-drag', {\n                dragstart: this.dragstart,\n                isRightClick: this.isRightClick(e)\n            });\n        }\n        if (this.bounds.contains(this.mouseLocation)) {\n            this.dispatchNewMouseKeysEvent(e, 'fin-canvas-mousemove');\n        }\n    },\n\n    finmousedown: function(e) {\n        this.mouseLocation = this.mouseDownLocation = this.getLocal(e);\n        this.mousedown = true;\n\n        this.dispatchNewMouseKeysEvent(e, 'fin-canvas-mousedown', {\n            isRightClick: this.isRightClick(e)\n        });\n        this.takeFocus();\n    },\n\n    finmouseup: function(e) {\n        if (!this.mousedown) {\n            // ignore document:mouseup unless preceded by a canvas:mousedown\n            return;\n        }\n        if (this.isDragging()) {\n            this.dispatchNewMouseKeysEvent(e, 'fin-canvas-dragend', {\n                dragstart: this.dragstart,\n                isRightClick: this.isRightClick(e)\n            });\n            this.beNotDragging();\n            this.dragEndtime = Date.now();\n        }\n        this.mousedown = false;\n        this.dispatchNewMouseKeysEvent(e, 'fin-canvas-mouseup', {\n            dragstart: this.dragstart,\n            isRightClick: this.isRightClick(e)\n        });\n        //this.mouseLocation = new rectangular.Point(-1, -1);\n    },\n\n    finmouseout: function(e) {\n        if (!this.mousedown) {\n            this.mouseLocation = new rectangular.Point(-1, -1);\n        }\n        this.repaint();\n        this.dispatchNewMouseKeysEvent(e, 'fin-canvas-mouseout', {\n            dragstart: this.dragstart\n        });\n    },\n\n    finwheelmoved: function(e) {\n        if (this.isDragging() || !this.hasFocus()) {\n            return;\n        }\n        e.preventDefault();\n        this.dispatchNewMouseKeysEvent(e, 'fin-canvas-wheelmoved', {\n            isRightClick: this.isRightClick(e)\n        });\n    },\n\n    finclick: function(e) {\n        this.mouseLocation = this.getLocal(e);\n        this.dispatchNewMouseKeysEvent(e, 'fin-canvas-click', {\n            isRightClick: this.isRightClick(e)\n        });\n    },\n\n    findblclick: function(e) {\n        this.mouseLocation = this.getLocal(e);\n        this.dispatchNewMouseKeysEvent(e, 'fin-canvas-dblclick', {\n            isRightClick: this.isRightClick(e)\n        });\n    },\n\n    getCharMap: function() {\n        return charMap;\n    },\n\n    getKeyChar: function(e) {\n        var keyCode = e.keyCode || e.detail.key,\n            shift = e.shiftKey || e.detail.shift,\n            key = e.key;\n\n        e.legacyKey = charMap[keyCode] && charMap[keyCode][shift ? 1 : 0];\n\n        if (typeof key === 'string' && key.length === 1) {\n            return key;\n        }\n\n        return (\n            e.legacyKey || // legacy unprintable char string\n            key // modern unprintable char string when no such legacy string\n        );\n    },\n\n    finkeydown: function(e) {\n        if (!this.hasFocus()) {\n            return;\n        }\n\n        // prevent TAB from moving focus off the canvas element\n        if (e.keyCode === 9) {\n            e.preventDefault();\n        }\n\n        var keyChar = this.getKeyChar(e);\n        if (e.repeat) {\n            if (this.repeatKey === keyChar) {\n                this.repeatKeyCount++;\n            } else {\n                this.repeatKey = keyChar;\n                this.repeatKeyStartTime = Date.now();\n            }\n        } else {\n            this.repeatKey = null;\n            this.repeatKeyCount = 0;\n            this.repeatKeyStartTime = 0;\n        }\n        if (this.currentKeys.indexOf(keyChar) === -1) {\n            this.currentKeys.push(keyChar);\n        }\n\n        this.dispatchNewEvent(e, 'fin-canvas-keydown', {\n            alt: e.altKey,\n            ctrl: e.ctrlKey,\n            char: keyChar,\n            legacyChar: e.legacyKey,\n            code: e.charCode,\n            key: e.keyCode,\n            meta: e.metaKey,\n            repeatCount: this.repeatKeyCount,\n            repeatStartTime: this.repeatKeyStartTime,\n            shift: e.shiftKey,\n            identifier: e.key,\n            currentKeys: this.currentKeys.slice(0)\n        });\n    },\n\n    finkeyup: function(e) {\n        if (!this.hasFocus()) {\n            return;\n        }\n\n        // prevent TAB from moving focus off the canvas element\n        if (e.keyCode === 9) {\n            e.preventDefault();\n        }\n\n        var keyChar = this.getKeyChar(e);\n        this.currentKeys.splice(this.currentKeys.indexOf(keyChar), 1);\n        this.repeatKeyCount = 0;\n        this.repeatKey = null;\n        this.repeatKeyStartTime = 0;\n        this.dispatchNewEvent(e, 'fin-canvas-keyup', {\n            alt: e.altKey,\n            ctrl: e.ctrlKey,\n            char: keyChar,\n            legacyChar: e.legacyKey,\n            code: e.charCode,\n            key: e.keyCode,\n            meta: e.metaKey,\n            repeat: e.repeat,\n            shift: e.shiftKey,\n            identifier: e.key,\n            currentKeys: this.currentKeys.slice(0)\n        });\n    },\n\n    finfocusgained: function(e) {\n        this.dispatchNewEvent(e, 'fin-canvas-focus-gained');\n    },\n\n    finfocuslost: function(e) {\n        this.dispatchNewEvent(e, 'fin-canvas-focus-lost');\n    },\n\n    fincontextmenu: function(e) {\n        if (e.ctrlKey && this.currentKeys.indexOf('CTRL') === -1) {\n            this.currentKeys.push('CTRL');\n        }\n\n        this.dispatchNewMouseKeysEvent(e, 'fin-canvas-context-menu', {\n            isRightClick: this.isRightClick(e)\n        });\n    },\n\n    paintLoopRunning: function() {\n        return !!paintRequest;\n    },\n\n    requestRepaint: function() {\n        this.dirty = true;\n    },\n\n    repaint: function() {\n        this.requestRepaint();\n        if (!paintRequest || this.component.properties.repaintIntervalRate === 0) {\n            this.paintNow();\n        }\n    },\n\n    getMouseLocation: function() {\n        return this.mouseLocation;\n    },\n\n    getOrigin: function() {\n        var rect = this.canvas.getBoundingClientRect();\n        var p = new rectangular.Point(rect.left, rect.top);\n        return p;\n    },\n\n    getLocal: function(e) {\n        var rect = this.canvas.getBoundingClientRect();\n        var p = new rectangular.Point(e.clientX - rect.left, e.clientY - rect.top);\n        return p;\n    },\n\n    hasFocus: function() {\n        return document.activeElement === this.canvas;\n    },\n\n    takeFocus: function() {\n        var self = this;\n        if (!this.hasFocus()) {\n            setTimeout(function() {\n                self.canvas.focus();\n            }, 10);\n        }\n    },\n\n    beDragging: function() {\n        this.dragging = true;\n        this.disableDocumentElementSelection();\n    },\n\n    beNotDragging: function() {\n        this.dragging = false;\n        this.enableDocumentElementSelection();\n    },\n\n    isDragging: function() {\n        return this.dragging;\n    },\n\n    disableDocumentElementSelection: function() {\n        var style = document.body.style;\n        style.cssText = style.cssText + '-webkit-user-select: none';\n    },\n\n    enableDocumentElementSelection: function() {\n        var style = document.body.style;\n        style.cssText = style.cssText.replace('-webkit-user-select: none', '');\n    },\n\n    setFocusable: function(truthy) {\n        this.focuser.style.display = truthy ? '' : 'none';\n    },\n\n    isRightClick: function(e) {\n        var isRightMB;\n        e = e || window.event;\n\n        if ('which' in e) { // Gecko (Firefox), WebKit (Safari/Chrome) & Opera\n            isRightMB = e.which === 3;\n        } else if ('button' in e) { // IE, Opera\n            isRightMB = e.button === 2;\n        }\n        return isRightMB;\n    },\n\n    dispatchEvent: function(e) {\n        return this.canvas.dispatchEvent(e);\n    },\n\n    setInfo: function(message, width) {\n        if (message) {\n            if (width !== undefined) {\n                if (width && !isNaN(Number(width))) {\n                    width += 'px';\n                }\n                this.infoDiv.style.width = width;\n            }\n\n            if (message.indexOf('<')) {\n                this.infoDiv.innerHTML = message;\n            } else {\n                this.infoDiv.innerText = message;\n            }\n        }\n\n        this.infoDiv.style.display = message ? 'block' : 'none';\n    }\n};\n\nfunction paintLoopFunction(now) {\n    if (paintRequest) {\n        paintables.forEach(function(paintable) {\n            try {\n                paintable.tickPainter(now);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (paintable.component.tickNotification) {\n                paintable.component.tickNotification();\n            }\n        });\n        paintRequest = requestAnimationFrame(paintLoopFunction);\n    }\n}\nfunction restartPaintLoop() {\n    paintRequest = paintRequest || requestAnimationFrame(paintLoopFunction);\n}\nfunction stopPaintLoop() {\n    if (paintRequest) {\n        cancelAnimationFrame(paintRequest);\n        paintRequest = undefined;\n    }\n}\nrestartPaintLoop();\n\nfunction resizablesLoopFunction(now) {\n    if (resizeInterval) {\n        for (var i = 0; i < resizables.length; i++) {\n            try {\n                resizables[i].tickResizer(now);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n}\nfunction restartResizeLoop() {\n    resizeInterval = resizeInterval || setInterval(resizablesLoopFunction, RESIZE_POLLING_INTERVAL);\n}\nfunction stopResizeLoop() {\n    if (resizeInterval) {\n        clearInterval(resizeInterval);\n        resizeInterval = undefined;\n    }\n}\nrestartResizeLoop();\n\nfunction makeCharMap() {\n    var map = [];\n\n    var empty = ['', ''];\n\n    for (var i = 0; i < 256; i++) {\n        map[i] = empty;\n    }\n\n    map[27] = ['ESC', 'ESCSHIFT'];\n    map[192] = ['`', '~'];\n    map[49] = ['1', '!'];\n    map[50] = ['2', '@'];\n    map[51] = ['3', '#'];\n    map[52] = ['4', '$'];\n    map[53] = ['5', '%'];\n    map[54] = ['6', '^'];\n    map[55] = ['7', '&'];\n    map[56] = ['8', '*'];\n    map[57] = ['9', '('];\n    map[48] = ['0', ')'];\n    map[189] = ['-', '_'];\n    map[187] = ['=', '+'];\n    map[8] = ['BACKSPACE', 'BACKSPACESHIFT'];\n    map[46] = ['DELETE', 'DELETESHIFT'];\n    map[9] = ['TAB', 'TABSHIFT'];\n    map[81] = ['q', 'Q'];\n    map[87] = ['w', 'W'];\n    map[69] = ['e', 'E'];\n    map[82] = ['r', 'R'];\n    map[84] = ['t', 'T'];\n    map[89] = ['y', 'Y'];\n    map[85] = ['u', 'U'];\n    map[73] = ['i', 'I'];\n    map[79] = ['o', 'O'];\n    map[80] = ['p', 'P'];\n    map[219] = ['[', '{'];\n    map[221] = [']', '}'];\n    map[220] = ['\\\\', '|'];\n    map[220] = ['CAPSLOCK', 'CAPSLOCKSHIFT'];\n    map[65] = ['a', 'A'];\n    map[83] = ['s', 'S'];\n    map[68] = ['d', 'D'];\n    map[70] = ['f', 'F'];\n    map[71] = ['g', 'G'];\n    map[72] = ['h', 'H'];\n    map[74] = ['j', 'J'];\n    map[75] = ['k', 'K'];\n    map[76] = ['l', 'L'];\n    map[186] = [';', ':'];\n    map[222] = ['\\'', '|'];\n    map[13] = ['RETURN', 'RETURNSHIFT'];\n    map[16] = ['SHIFT', 'SHIFT'];\n    map[90] = ['z', 'Z'];\n    map[88] = ['x', 'X'];\n    map[67] = ['c', 'C'];\n    map[86] = ['v', 'V'];\n    map[66] = ['b', 'B'];\n    map[78] = ['n', 'N'];\n    map[77] = ['m', 'M'];\n    map[188] = [',', '<'];\n    map[190] = ['.', '>'];\n    map[191] = ['/', '?'];\n    map[16] = ['SHIFT', 'SHIFT'];\n    map[17] = ['CTRL', 'CTRLSHIFT'];\n    map[18] = ['ALT', 'ALTSHIFT'];\n    map[91] = ['COMMANDLEFT', 'COMMANDLEFTSHIFT'];\n    map[32] = ['SPACE', 'SPACESHIFT'];\n    map[93] = ['COMMANDRIGHT', 'COMMANDRIGHTSHIFT'];\n    map[18] = ['ALT', 'ALTSHIFT'];\n    map[38] = ['UP', 'UPSHIFT'];\n    map[37] = ['LEFT', 'LEFTSHIFT'];\n    map[40] = ['DOWN', 'DOWNSHIFT'];\n    map[39] = ['RIGHT', 'RIGHTSHIFT'];\n\n    map[33] = ['PAGEUP', 'PAGEUPSHIFT'];\n    map[34] = ['PAGEDOWN', 'PAGEDOWNSHIFT'];\n    map[35] = ['PAGERIGHT', 'PAGERIGHTSHIFT']; // END\n    map[36] = ['PAGELEFT', 'PAGELEFTSHIFT']; // HOME\n\n    map[112] = ['F1', 'F1SHIFT'];\n    map[113] = ['F2', 'F2SHIFT'];\n    map[114] = ['F3', 'F3SHIFT'];\n    map[115] = ['F4', 'F4SHIFT'];\n    map[116] = ['F5', 'F5SHIFT'];\n    map[117] = ['F6', 'F6SHIFT'];\n    map[118] = ['F7', 'F7SHIFT'];\n    map[119] = ['F8', 'F8SHIFT'];\n    map[120] = ['F9', 'F9SHIFT'];\n    map[121] = ['F10', 'F10SHIFT'];\n    map[122] = ['F11', 'F11SHIFT'];\n    map[123] = ['F12', 'F12SHIFT'];\n\n    return map;\n}\n\nfunction getCachedContext(canvasElement, contextAttributes) {\n    var gc = canvasElement.getContext('2d', contextAttributes),\n        props = {},\n        values = {};\n\n    // Stub out all the prototype members of the canvas 2D graphics context:\n    Object.keys(Object.getPrototypeOf(gc)).forEach(makeStub);\n\n    // Some older browsers (e.g., Chrome 40) did not have all members of canvas\n    // 2D graphics context in the prototype so we make this additional call:\n    Object.keys(gc).forEach(makeStub);\n\n    function makeStub(key) {\n        if (\n            !(key in props) &&\n            !/^(webkit|moz|ms|o)[A-Z]/.test(key) &&\n            typeof gc[key] !== 'function'\n        ) {\n            Object.defineProperty(props, key, {\n                get: function() {\n                    return (values[key] = values[key] || gc[key]);\n                },\n                set: function(value) {\n                    if (value !== values[key]) {\n                        gc[key] = values[key] = value;\n                    }\n                }\n            });\n        }\n    }\n\n    gc.cache = props;\n\n    gc.cache.save = function() {\n        gc.save();\n        values = Object.create(values);\n    };\n\n    gc.cache.restore = function() {\n        gc.restore();\n        values = Object.getPrototypeOf(values);\n    };\n\n    gc.conditionalsStack = [];\n\n    Object.getOwnPropertyNames(Canvas.graphicsContextAliases).forEach(function(alias) {\n        gc[alias] = gc[Canvas.graphicsContextAliases[alias]];\n    });\n\n    return Object.assign(gc, require('./graphics'));\n}\n\nCanvas.graphicsContextAliases = {\n    simpleText: 'fillText'\n};\n\n\nmodule.exports = Canvas;\n","/* eslint-env browser */\n\n'use strict';\n\nvar API;\n\nfunction clearFill(x, y, width, height, color) {\n    var a = alpha(color);\n    if (a < 1) {\n        // If background is translucent, we must clear the rect before the fillRect\n        // below to prevent mixing with previous frame's render of this cell.\n        this.clearRect(x, y, width, height);\n    }\n    if (a > 0) {\n        this.cache.fillStyle = color;\n        this.fillRect(x, y, width, height);\n    }\n}\n\nvar ALPHA_REGEX = /^(transparent|((RGB|HSL)A\\(.*,\\s*([\\d\\.]+)\\)))$/i;\n// Tried using an `alphaCache` here but it didn't make a measurable difference.\nfunction alpha(cssColorSpec) {\n    var matches, result;\n\n    if (!cssColorSpec) {\n        // undefined so not visible; treat as transparent\n        result = 0;\n    } else if ((matches = cssColorSpec.match(ALPHA_REGEX)) === null) {\n        // an opaque color (a color spec with no alpha channel)\n        result = 1;\n    } else if (matches[4] === undefined) {\n        // cssColorSpec must have been 'transparent'\n        result = 0;\n    } else {\n        result = Number(matches[4]);\n    }\n\n    return result;\n}\n\nvar fontMetrics = {};\n\n/**\n * Accumulates width of string in pixels, character by character, by chaching character widths and reusing those values when previously cached.\n *\n * NOTE: There is a minor measuring error when taking the sum of the pixel widths of individual characters that make up a string vs. the pixel width of the string taken as a whole. This is possibly due to kerning or rounding. The error is typically about 0.1%.\n * @memberOf module:defaults\n * @param {CanvasRenderingContext2D} gc\n * @param {string} string - Text to measure.\n * @returns {nubmer} Width of string in pixels.\n */\nfunction getTextWidth(string) {\n    var metrics = fontMetrics[this.cache.font] = fontMetrics[this.cache.font] || {};\n    string += '';\n    for (var i = 0, sum = 0, len = string.length; i < len; ++i) {\n        var c = string[i];\n        sum += metrics[c] = metrics[c] || this.measureText(c).width;\n    }\n    return sum;\n}\n\nvar ELLIPSIS = '\\u2026'; // The \"…\" (dot-dot-dot) character\n\n/**\n * Similar to `getTextWidth` except:\n * 1. Aborts accumulating when sum exceeds given `width`.\n * 2. Returns an object containing both the truncated string and the sum (rather than a number primitive containing the sum alone).\n * @param {CanvasRenderingContext2D} gc\n * @param {string} string - Text to measure.\n * @param {number} width - Width of target cell; overflow point.\n * @param {boolean|null|undefined} truncateTextWithEllipsis - _Per {@link module:defaults.truncateTextWithEllipsis}._\n * @param {boolean} [abort=false] - Abort measuring upon overflow. Returned `width` sum will reflect truncated string rather than untruncated string. Note that returned `string` is truncated in either case.\n * @returns {{string:string,width:number}}\n * * `object.string` - `undefined` if it fits; truncated version of provided `string` if it does not.\n * * `object.width` - Width of provided `string` if it fits; width of truncated string if it does not.\n */\nfunction getTextWidthTruncated(string, width, truncateTextWithEllipsis, abort) {\n    var metrics = fontMetrics[this.cache.font],\n        truncating = truncateTextWithEllipsis !== undefined,\n        truncString, truncWidth, truncAt;\n\n    if (!metrics) {\n        metrics = fontMetrics[this.cache.font] = {};\n        metrics[ELLIPSIS] = this.measureText(ELLIPSIS).width;\n    }\n\n    string += ''; // convert to string\n    width += truncateTextWithEllipsis === false ? 2 : -1; // fudge for inequality\n    for (var i = 0, sum = 0, len = string.length; i < len; ++i) {\n        var char = string[i];\n        var charWidth = metrics[char] = metrics[char] || this.measureText(char).width;\n        sum += charWidth;\n        if (!truncString && truncating && sum > width) {\n            truncAt = i;\n            switch (truncateTextWithEllipsis) {\n                case true: // truncate sufficient characters to fit ellipsis if possible\n                    truncWidth = sum - charWidth + metrics[ELLIPSIS];\n                    while (truncAt && truncWidth > width) {\n                        truncWidth -= metrics[string[--truncAt]];\n                    }\n                    truncString = truncWidth > width\n                        ? '' // not enough room even for ellipsis\n                        : truncString = string.substr(0, truncAt) + ELLIPSIS;\n                    break;\n                case false: // truncate *before* last partially visible character\n                    truncString = string.substr(0, truncAt);\n                    break;\n                default: // truncate *after* partially visible character\n                    if (++truncAt < string.length) {\n                        truncString = string.substr(0, truncAt);\n                    }\n            }\n            if (abort) { break; }\n        }\n    }\n    return {\n        string: truncString,\n        width: sum\n    };\n}\n\nvar fontData = {};\n\n/**\n * @memberOf module:defaults\n * @param font\n * @returns {*}\n */\nfunction getTextHeight(font) {\n    var result = fontData[font];\n\n    if (!result) {\n        result = {};\n\n        var text = document.createElement('span');\n        text.textContent = 'Hg';\n        text.style.font = font;\n\n        var block = document.createElement('div');\n        block.style.display = 'inline-block';\n        block.style.width = '1px';\n        block.style.height = '0px';\n\n        var div = document.createElement('div');\n        div.appendChild(text);\n        div.appendChild(block);\n\n        div.style.position = 'absolute';\n        document.body.appendChild(div);\n\n        try {\n\n            block.style.verticalAlign = 'baseline';\n\n            var blockRect = block.getBoundingClientRect();\n            var textRect = text.getBoundingClientRect();\n\n            result.ascent = blockRect.top - textRect.top;\n\n            block.style.verticalAlign = 'bottom';\n            result.height = blockRect.top - textRect.top;\n\n            result.descent = result.height - result.ascent;\n\n        } finally {\n            document.body.removeChild(div);\n        }\n        if (result.height !== 0) {\n            fontData[font] = result;\n        }\n    }\n\n    return result;\n}\n\nfunction clipSave(conditional, x, y, width, height) {\n    this.conditionalsStack.push(conditional);\n    if (conditional) {\n        this.cache.save();\n        this.beginPath();\n        this.rect(x, y, width, height);\n        this.clip();\n    }\n}\n\nfunction clipRestore(conditional) {\n    if (this.conditionalsStack.pop()) {\n        this.cache.restore(); // Remove clip region\n    }\n}\n\nAPI = {\n    clearFill: clearFill,\n    alpha: alpha,\n    getTextWidth: getTextWidth,\n    getTextWidthTruncated: getTextWidthTruncated,\n    getTextHeight: getTextHeight,\n    clipSave: clipSave,\n    clipRestore: clipRestore,\n    truncateTextWithEllipsis: true\n};\n\nmodule.exports = API;\n","/* eslint-env browser */\n/* global requestAnimationFrame */\n\n'use strict';\n\nvar Base = require('../Base');\nvar images = require('../../images');\nvar layerProps = require('./layer-props');\nvar InclusiveRectangle = require('../lib/InclusiveRectangle');\n\n/**\n * @summary List of grid renderers available to new grid instances.\n * @desc Developer may augment this list with additional grid renderers before grid instantiation by calling @link {Renderer.registerGridRenderer}.\n * @memberOf Renderer~\n * @private\n * @type {function[]}\n */\nvar paintCellsFunctions = [];\n\n\n/** @typedef {object} CanvasRenderingContext2D\n * @see [CanvasRenderingContext2D](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D)\n */\n\n/** @typedef {object} visibleColumnArray\n * @property {number} index - A back reference to the element's array index in {@link Renderer#visibleColumns}.\n * @property {number} columnIndex - Dereferences {@link Behavior#columns}, the subset of _active_ columns, specifying which column to show in that position.\n * @property {number} left - Pixel coordinate of the left edge of this column, rounded to nearest integer.\n * @property {number} right - Pixel coordinate of the right edge of this column, rounded to nearest integer.\n * @property {number} width - Width of this column in pixels, rounded to nearest integer.\n */\n\n/** @typedef {object} visibleRowArray\n * @property {number} index - A back reference to the element's array index in {@link Renderer#visibleRows}.\n * @property {number} rowIndex - Local vertical row coordinate within the subgrid to which the row belongs, adjusted for scrolling.\n * @property {DataModel} subgrid - A reference to the subgrid to which the row belongs.\n * @property {number} top - Pixel coordinate of the top edge of this row, rounded to nearest integer.\n * @property {number} bottom - Pixel coordinate of the bottom edge of this row, rounded to nearest integer.\n * @property {number} height - Height of this row in pixels, rounded to nearest integer.\n */\n\n/**\n * @constructor\n * @desc fin-hypergrid-renderer is the canvas enabled top level sub component that handles the renderering of the Grid.\n *\n * It relies on two other external subprojects\n *\n * 1. fin-canvas: a wrapper to provide a simpler interface to the HTML5 canvas component\n * 2. rectangular: a small npm module providing Point and Rectangle objects\n *\n * The fin-hypergrid-renderer is in a unique position to provide critical functionality to the fin-hypergrid in a hightly performant manner.\n * Because it MUST iterate over all the visible cells it can store various bits of information that can be encapsulated as a service for consumption by the fin-hypergrid component.\n *\n * Instances of this object have basically four main functions.\n *\n * 1. render fixed row headers\n * 2. render fixed col headers\n * 3. render main data cells\n * 4. render grid lines\n *\n * Same parameters as {@link Renderer#initialize|initialize}, which is called by this constructor.\n *\n */\nvar Renderer = Base.extend('Renderer', {\n\n    //the shared single item \"pooled\" cell object for drawing each cell\n    cell: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    },\n\n    scrollHeight: 0,\n\n    reset: function() {\n        this.bounds = {\n            width: 0,\n            height: 0\n        };\n\n        /**\n         * Represents the ordered set of visible columns. Array size is always the exact number of visible columns, the last of which may only be partially visible.\n         *\n         * This sequence of elements' `columnIndex` values assumes one of three patterns. Which pattern is base on the following two questions:\n         * * Are there \"fixed\" columns on the left?\n         * * Is the grid horizontally scrolled?\n         *\n         * The set of `columnIndex` values consists of:\n         * 1. The first element will be -1 if the row handle column is being rendered.\n         * 2. A zero-based list of consecutive of integers representing the fixed columns (if any).\n         * 3. An n-based list of consecutive of integers representing the scrollable columns (where n = number of fixed columns + the number of columns scrolled off to the left).\n         * @type {visibleColumnArray}\n         */\n        this.visibleColumns = this.grid.decorateColumnArray();\n\n        /**\n         * Represents the ordered set of visible rows. Array size is always the exact number of visible rows.\n         *\n         * The sequence of elements' `rowIndex` values is local to each subgrid.\n         * * **For each non-scrollable subgrid:** The sequence is a zero-based list of consecutive integers.\n         * * **For the scrollable subgrid:**\n         *   1. A zero-based list of consecutive of integers representing the fixed rows (if any).\n         *   2. An n-based list of consecutive of integers representing the scrollable rows (where n = number of fixed rows + the number of rows scrolled off the top).\n         *\n         * Note that non-scrollable subgrids can come both before _and_ after the scrollable subgrid.\n         * @type {visibleRowArray}\n         */\n        this.visibleRows = [];\n\n        this.insertionBounds = [];\n\n        this.cellEventPool = [];\n    },\n\n    /**\n     * @summary Constructor logic\n     * @desc This method will be called upon instantiation of this class or of any class that extends from this class.\n     * > All `initialize()` methods in the inheritance chain are called, in turn, each with the same parameters that were passed to the constructor, beginning with that of the most \"senior\" class through that of the class of the new instance.\n     * @memberOf Renderer.prototype\n     */\n    initialize: function(grid) {\n        this.grid = grid;\n\n        this.gridRenderers = {};\n        paintCellsFunctions.forEach(function(paintCellsFunction) {\n            this.registerGridRenderer(paintCellsFunction);\n        }, this);\n\n        // typically grid properties won't exist yet\n        this.setGridRenderer(this.properties.gridRenderer || 'by-columns-and-rows');\n\n        this.reset();\n    },\n\n    registerGridRenderer: function(paintCellsFunction) {\n        this.gridRenderers[paintCellsFunction.key] = {\n            paintCells: paintCellsFunction\n        };\n    },\n\n    setGridRenderer: function(key) {\n        var gridRenderer = this.gridRenderers[key];\n\n        if (!gridRenderer) {\n            throw new this.HypergridError('Unregistered grid renderer \"' + key + '\"');\n        }\n\n        if (gridRenderer !== this.gridRenderer) {\n            this.gridRenderer = gridRenderer;\n            this.gridRenderer.reset = true;\n        }\n    },\n\n    resetAllGridRenderers: function(blackList) {\n        // Notify renderers that grid shape has changed\n        Object.keys(this.gridRenderers).forEach(function(key) {\n            this.gridRenderers[key].reset = !blackList || blackList.indexOf(key) < 0;\n        }, this);\n    },\n\n    /**\n     * Certain renderers that pre-bundle column rects based on columns' background colors need to re-bundle when columns' background colors change. This method sets the `rebundle` property to `true` for those renderers that have that property.\n     */\n    rebundleGridRenderers: function() {\n        Object.keys(this.gridRenderers).forEach(function(key) {\n            if (this.gridRenderers[key].paintCells.rebundle) {\n                this.gridRenderers[key].rebundle = true;\n            }\n        }, this);\n    },\n\n    resetRowHeaderColumnWidth: function() {\n        this.lastKnowRowCount = undefined;\n    },\n\n    computeCellsBounds: function(immediate) {\n        if (immediate) {\n            computeCellsBounds.call(this);\n            this.needsComputeCellsBounds = false;\n        } else {\n            this.needsComputeCellsBounds = true;\n        }\n    },\n\n    /**\n     * CAUTION: Keep in place! Used by {@link Canvas}.\n     * @memberOf Renderer.prototype\n     * @returns {Object} The current grid properties object.\n     */\n    get properties() {\n        return this.grid.properties;\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @summary Notify the fin-hypergrid every time we've repainted.\n     * @desc This is the entry point from fin-canvas.\n     * @param {CanvasRenderingContext2D} gc\n     */\n    paint: function(gc) {\n        if (this.grid.canvas) {\n            this.renderGrid(gc);\n            this.grid.gridRenderedNotification();\n        }\n    },\n\n    tickNotification: function() {\n        this.grid.tickNotification();\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} Answer how many rows we rendered\n     */\n    getVisibleRowsCount: function() {\n        return this.visibleRows.length - 1;\n    },\n\n    getVisibleScrollHeight: function() {\n        var footerHeight = this.grid.properties.defaultRowHeight * this.grid.behavior.getFooterRowCount();\n        return this.getBounds().height - footerHeight - this.grid.getFixedRowsHeight();\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} Number of columns we just rendered.\n     */\n    getVisibleColumnsCount: function() {\n        return this.visibleColumns.length - 1;\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @param {CellEvent|number} x - CellEvent object or grid column coordinate.\n     * @param {number} [y] - Grid row coordinate. Omit if `xOrCellEvent` is a CellEvent.\n     * @returns {Rectangle} Bounding rect of cell with the given coordinates.\n     */\n    getBoundsOfCell: function(x, y) {\n        var vc = this.visibleColumns[x],\n            vr = this.visibleRows[y];\n\n        return {\n            x: vc.left,\n            y: vr.top,\n            width: vc.width,\n            height: vr.height\n        };\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @desc answer the column index under the coordinate at pixelX\n     * @param {number} pixelX - The horizontal coordinate.\n     * @returns {number} The column index under the coordinate at pixelX.\n     */\n    getColumnFromPixelX: function(pixelX) {\n        var width = 0,\n            fixedColumnCount = this.grid.getFixedColumnCount(),\n            scrollLeft = this.grid.getHScrollValue(),\n            visibleColumns = this.visibleColumns;\n\n        for (var c = 1; c < visibleColumns.length - 1; c++) {\n            width = visibleColumns[c].left - (visibleColumns[c].left - visibleColumns[c - 1].left) / 2;\n            if (pixelX < width) {\n                if (c > fixedColumnCount) {\n                    c += scrollLeft;\n                }\n                return c - 1;\n            }\n        }\n        if (c > fixedColumnCount) {\n            c += scrollLeft;\n        }\n        return c - 1;\n    },\n\n\n    /**\n     * @memberOf Renderer.prototype\n     * @desc Answer specific data cell coordinates given mouse coordinates in pixels.\n     * @param {Point} point\n     * @returns {{cellEvent:CellEvent,fake:boolean}} Cell coordinates\n     */\n    getGridCellFromMousePoint: function(point) {\n        var x = point.x,\n            y = point.y,\n            isPseudoRow = false,\n            isPseudoCol = false,\n            vrs = this.visibleRows,\n            vcs = this.visibleColumns,\n            firstColumn = vcs[this.grid.behavior.leftMostColIndex],\n            inFirstColumn = firstColumn && x < firstColumn.right,\n            vc = inFirstColumn ? firstColumn : vcs.findWithNeg(function(vc) { return x < vc.right; }),\n            vr = vrs.find(function(vr) { return y < vr.bottom; }),\n            result = {fake: false};\n\n        //default to last row and col\n        if (vr) {\n            isPseudoRow = false;\n        } else {\n            vr = vrs[vrs.length - 1];\n            isPseudoRow = true;\n        }\n\n        if (vc) {\n            isPseudoCol = false;\n        } else {\n            vc = vcs[vcs.length - 1];\n            isPseudoCol = true;\n        }\n\n        var cellEvent = new this.grid.behavior.CellEvent(vc.columnIndex, vr.index),\n            cellEventFromPool = this.findCell(cellEvent);\n        result.cellEvent = cellEventFromPool ? Object.create(cellEventFromPool) : cellEvent;\n        result.cellEvent.mousePoint = this.grid.newPoint(x - vc.left, y - vr.top);\n\n        if (isPseudoCol || isPseudoRow) {\n            result.fake = true;\n            this.grid.beCursor(null);\n        }\n\n        return result;\n    },\n\n    /**\n     * Matrix of unformatted values of visible cells.\n     * @returns {Array<Array>}\n     */\n    getVisibleCellMatrix: function() {\n        var rows = Array(this.visibleRows.length);\n        var adjust = this.grid.behavior.hasTreeColumn() ? 1 : 0;\n        for (var y = 0; y < rows.length; ++y) { rows[y] = Array(this.visibleColumns.length); }\n        this.cellEventPool.forEach(function(cell) {\n            var x = cell.gridCell.x + adjust;\n            if (x >= 0) {\n                rows[cell.gridCell.y][x] = cell.value;\n            }\n        });\n        return rows;\n    },\n\n    /**\n     * @summary Get the visibility of the column matching the provided grid column index.\n     * @desc Requested column may not be visible due to being scrolled out of view.\n     * @memberOf Renderer.prototype\n     * @summary Determines if a column is visible.\n     * @param {number} columnIndex - the column index\n     * @returns {boolean} The given column is visible.\n     */\n    isColumnVisible: function(columnIndex) {\n        return !!this.getVisibleColumn(columnIndex);\n    },\n\n    /**\n     * @summary Get the \"visible column\" object matching the provided grid column index.\n     * @desc Requested column may not be visible due to being scrolled out of view.\n     * @memberOf Renderer.prototype\n     * @summary Find a visible column object.\n     * @param {number} columnIndex - The grid column index.\n     * @returns {object|undefined} The given column if visible or `undefined` if not.\n     */\n    getVisibleColumn: function(columnIndex) {\n        return this.visibleColumns.findWithNeg(function(vc) {\n            return vc.columnIndex === columnIndex;\n        });\n    },\n\n    /**\n     * @desc Calculate the minimum left column index so the target column shows up in viewport (we need to be aware of viewport's width, number of fixed columns and each column's width)\n     * @param {number} targetColIdx - Target column index\n     * @returns {number} Minimum left column index so target column shows up\n     */\n    getMinimumLeftPositionToShowColumn: function(targetColIdx) {\n        var fixedColumnCount = this.grid.getFixedColumnCount();\n        var fixedColumnsWidth = 0;\n        var rowNumbersWidth = 0;\n        var filtersWidth = 0;\n        var viewportWidth = 0;\n        var leftColIdx = 0;\n        var targetRight = 0;\n        var lastFixedColumn = null;\n        var computedCols = [];\n        var col = null;\n        var i = 0;\n        var left = 0;\n        var right = 0;\n\n\n        // 1) for each column, we'll compute left and right position in pixels (until target column)\n        for (i = 0; i <= targetColIdx; i++) {\n            left = right;\n            right += Math.ceil(this.grid.getColumnWidth(i));\n\n            computedCols.push({\n                left: left,\n                right: right\n            });\n        }\n\n        targetRight = computedCols[computedCols.length - 1].right;\n\n        // 2) calc usable viewport width\n        lastFixedColumn = computedCols[fixedColumnCount - 1];\n\n        if (this.properties.showRowNumbers) {\n            rowNumbersWidth = this.grid.getColumnWidth(this.grid.behavior.rowColumnIndex);\n        }\n\n        if (this.grid.hasTreeColumn()) {\n            filtersWidth = this.grid.getColumnWidth(this.grid.behavior.treeColumnIndex);\n        }\n\n        fixedColumnsWidth = lastFixedColumn ? lastFixedColumn.right : 0;\n        viewportWidth = this.getBounds().width - fixedColumnsWidth - rowNumbersWidth - filtersWidth;\n\n        // 3) from right to left, find the last column that can still render target column\n        i = targetColIdx;\n\n        do {\n            leftColIdx = i;\n            col = computedCols[i];\n            i--;\n        } while (col.left + viewportWidth > targetRight && i >= 0);\n\n        return leftColIdx;\n    },\n\n    /**\n     * @summary Get the visibility of the column matching the provided data column index.\n     * @desc Requested column may not be visible due to being scrolled out of view or if the column is inactive.\n     * @memberOf Renderer.prototype\n     * @summary Determines if a column is visible.\n     * @param {number} columnIndex - the column index\n     * @returns {boolean} The given column is visible.\n     */\n    isDataColumnVisible: function(columnIndex) {\n        return !!this.getVisibleDataColumn(columnIndex);\n    },\n\n    /**\n     * @summary Get the \"visible column\" object matching the provided data column index.\n     * @desc Requested column may not be visible due to being scrolled out of view or if the column is inactive.\n     * @memberOf Renderer.prototype\n     * @summary Find a visible column object.\n     * @param {number} columnIndex - The grid column index.\n     * @returns {object|undefined} The given column if visible or `undefined` if not.\n     */\n    getVisibleDataColumn: function(columnIndex) {\n        return this.visibleColumns.findWithNeg(function(vc) {\n            return vc.column.index === columnIndex;\n        });\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} The width x coordinate of the last rendered column\n     */\n    getFinalVisibleColumnBoundary: function() {\n        var chop = this.isLastColumnVisible() ? 2 : 1;\n        var colWall = this.visibleColumns[this.visibleColumns.length - chop].right;\n        return Math.min(colWall, this.getBounds().width);\n    },\n\n    /**\n     * @summary Get the visibility of the row matching the provided grid row index.\n     * @desc Requested row may not be visible due to being outside the bounds of the rendered grid.\n     * @memberOf Renderer.prototype\n     * @summary Determines visibility of a row.\n     * @param {number} rowIndex - The grid row index.\n     * @returns {boolean} The given row is visible.\n     */\n    isRowVisible: function(rowIndex) {\n        return !!this.visibleRows[rowIndex];\n    },\n\n    /**\n     * @summary Get the \"visible row\" object matching the provided grid row index.\n     * @desc Requested row may not be visible due to being outside the bounds of the rendered grid.\n     * @memberOf Renderer.prototype\n     * @summary Find a visible row object.\n     * @param {number} rowIndex - The grid row index.\n     * @returns {object|undefined} The given row if visible or `undefined` if not.\n     */\n    getVisibleRow: function(rowIndex) {\n        return this.visibleRows[rowIndex];\n    },\n\n    /**\n     * @summary Get the visibility of the row matching the provided data row index.\n     * @desc Requested row may not be visible due to being scrolled out of view.\n     * @memberOf Renderer.prototype\n     * @summary Determines visibility of a row.\n     * @param {number} rowIndex - The data row index.\n     * @param {DataModel} [subgrid=this.behavior.subgrids.data]\n     * @returns {boolean} The given row is visible.\n     */\n    isDataRowVisible: function(rowIndex, subgrid) {\n        return !!this.getVisibleDataRow(rowIndex, subgrid);\n    },\n\n    /**\n     * @summary Get the \"visible row\" object matching the provided data row index.\n     * @desc Requested row may not be visible due to being scrolled out of view.\n     * @memberOf Renderer.prototype\n     * @summary Find a visible row object.\n     * @param {number} rowIndex - The data row index within the given subgrid.\n     * @param {DataModel} [subgrid=this.behavior.subgrids.data]\n     * @returns {object|undefined} The given row if visible or `undefined` if not.\n     */\n    getVisibleDataRow: function(rowIndex, subgrid) {\n        subgrid = subgrid || this.grid.behavior.dataModel;\n        return this.visibleRows.find(function(vr) {\n            return vr.subgrid === subgrid && vr.rowIndex === rowIndex;\n        });\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @summary Determines if a cell is selected.\n     * @param {number} x - the x cell coordinate\n     * @param {number} y - the y cell coordinate*\n     * @returns {boolean} The given cell is fully visible.\n     */\n    isSelected: function(x, y) {\n        return this.grid.isSelected(x, y);\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @desc This is the main forking of the renderering task.\n     *\n     * `dataModel.fetchData` callback renders the grid. Note however that this is not critical when the clock is\n     * running as it will be rendered on the next tick. We let it call it anyway in case (1) fetch returns quickly\n     * enough to be rendered on this tick rather than next or (2) clock isn't running (for debugging purposes).\n     * @param {CanvasRenderingContext2D} gc\n     */\n    renderGrid: function(gc) {\n        var grid = this.grid;\n\n        grid.deferredBehaviorChange();\n\n        var rowCount = grid.getRowCount();\n        if (rowCount !== this.lastKnowRowCount) {\n            var newWidth = resetRowHeaderColumnWidth.call(this, gc, rowCount);\n            if (newWidth !== this.handleColumnWidth) {\n                this.needsComputeCellsBounds = true;\n                this.handleColumnWidth = newWidth;\n            }\n            this.lastKnowRowCount = rowCount;\n        }\n\n        if (this.needsComputeCellsBounds) {\n            computeCellsBounds.call(this);\n            this.needsComputeCellsBounds = false;\n\n            // Pre-fetch data if supported by data model\n            if (grid.behavior.dataModel.fetchData) {\n                grid.behavior.dataModel.fetchData(getSubrects.call(this), fetchCompletion.bind(this, gc));\n                return; // skip refresh renderGrid call below\n            }\n        }\n\n        this.gridRenderer.paintCells.call(this, gc);\n        this.renderOverrides(gc);\n        this.renderLastSelection(gc);\n    },\n\n    renderLastSelection: function(gc) {\n        var selection, left, top, width, height,\n            grid = this.grid,\n            gridProps = grid.properties,\n            sm = grid.selectionModel;\n\n        switch (sm.getLastSelectionType()) {\n            case 'column':\n                var columnSelections = sm.columnSelectionModel.selection,\n                    lastColumnSelection = columnSelections[columnSelections.length - 1];\n\n                left = lastColumnSelection[0];\n                top = 0;\n                width = lastColumnSelection[1] - left + 1;\n                height = grid.getRowCount();\n                selection = new InclusiveRectangle(left, top, width, height);\n                break;\n\n            case 'row':\n                if (!(gridProps.collapseCellSelections && sm.getLastSelectionType(1) === 'cell')) {\n                    var rowSelections = sm.rowSelectionModel.selection,\n                        lastRowSelection = rowSelections[rowSelections.length - 1];\n\n                    left = 0;\n                    top = lastRowSelection[0];\n                    width = grid.behavior.getActiveColumns().length;\n                    height = lastRowSelection[1] - top + 1;\n                    selection = new InclusiveRectangle(left, top, width, height);\n                    break;\n                }\n                // fall through to 'cell'\n\n            case 'cell':\n                selection = sm.getLastSelection();\n                break;\n        }\n\n        if (!selection) {\n            return; // no selection\n        }\n\n        // todo not sure what this is for; might be defunct logic\n        if (selection.origin.x === -1) {\n            // no selected area, lets exit\n            return;\n        }\n\n        var vci = this.visibleColumnsByIndex,\n            vri = this.visibleRowsByDataRowIndex,\n            lastScrollableColumn = this.visibleColumns[this.visibleColumns.length - 1], // last column in scrollable section\n            lastScrollableRow = this.visibleRows[this.visibleRows.length - 1], // last row in scrollable data section\n            firstScrollableColumn = vci[this.dataWindow.origin.x],\n            firstScrollableRow = vri[this.dataWindow.origin.y],\n            fixedColumnCount = gridProps.fixedColumnCount,\n            fixedRowCount = gridProps.fixedRowCount,\n            headerRowCount = grid.getHeaderRowCount();\n\n        if (\n            // entire selection scrolled out of view to left of visible columns; or\n            selection.corner.x < this.visibleColumns[0].columnIndex ||\n\n            // entire selection scrolled out of view between fixed columns and scrollable columns; or\n            fixedColumnCount &&\n            selection.origin.x > this.visibleColumns[fixedColumnCount - 1].columnIndex &&\n            selection.corner.x < firstScrollableColumn.columnIndex ||\n\n            // entire selection scrolled out of view to right of visible columns; or\n            selection.origin.x > lastScrollableColumn.columnIndex ||\n\n            // entire selection scrolled out of view above visible rows; or\n            selection.corner.y < this.visibleRows[headerRowCount].rowIndex ||\n\n            // entire selection scrolled out of view between fixed rows and scrollable rows; or\n            fixedRowCount &&\n            selection.origin.y > this.visibleRows[headerRowCount + fixedRowCount - 1].rowIndex &&\n            selection.corner.y < firstScrollableRow.rowIndex ||\n\n            // entire selection scrolled out of view below visible rows\n            selection.origin.y > lastScrollableRow.rowIndex\n        ) {\n            return;\n        }\n\n        var vcOrigin = vci[selection.origin.x] || firstScrollableColumn,\n            vrOrigin = vri[selection.origin.y] || firstScrollableRow,\n            vcCorner = vci[selection.corner.x] || (selection.corner.x > lastScrollableColumn.columnIndex ? lastScrollableColumn : vci[fixedColumnCount - 1]),\n            vrCorner = vri[selection.corner.y] || (selection.corner.y > lastScrollableRow.rowIndex ? lastScrollableRow : vri[fixedRowCount - 1]);\n\n        // Render the selection model around the bounds\n        var config = {\n            bounds: {\n                x: vcOrigin.left,\n                y: vrOrigin.top,\n                width: vcCorner.right - vcOrigin.left,\n                height: vrCorner.bottom - vrOrigin.top\n            },\n            selectionRegionOverlayColor: this.gridRenderer.paintCells.partial ? 'transparent' : gridProps.selectionRegionOverlayColor,\n            selectionRegionOutlineColor: gridProps.selectionRegionOutlineColor\n        };\n\n        grid.cellRenderers.get('lastselection').paint(gc, config);\n\n        if (this.gridRenderer.paintCells.key === 'by-cells') {\n            this.gridRenderer.reset = true; // fixes GRID-490\n        }\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @desc iterate the renderering overrides and manifest each\n     * @param {CanvasRenderingContext2D} gc\n     */\n    renderOverrides: function(gc) {\n        var cache = this.grid.renderOverridesCache;\n        for (var key in cache) {\n            if (cache.hasOwnProperty(key)) {\n                var override = cache[key];\n                if (override) {\n                    this.renderOverride(gc, override);\n                }\n            }\n        }\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @desc copy each overrides specified area to it's target and blank out the source area\n     * @param {CanvasRenderingContext2D} gc\n     * @param {OverrideObject} override - an object with details contain an area and a target context\n     */\n    renderOverride: function(gc, override) {\n        //lets blank out the drag row\n        var hdpiRatio = override.hdpiratio;\n        var startX = override.startX; //hdpiRatio * edges[override.columnIndex];\n        var width = override.width + 1;\n        var height = override.height;\n        var targetCTX = override.ctx;\n        var imgData = gc.getImageData(startX, 0, Math.round(width * hdpiRatio), Math.round(height * hdpiRatio));\n        targetCTX.putImageData(imgData, 0, 0);\n        gc.cache.fillStyle = this.properties.backgroundColor2;\n        gc.fillRect(Math.round(startX / hdpiRatio), 0, width, height);\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} Current vertical scroll value.\n     */\n    getScrollTop: function() {\n        return this.grid.getVScrollValue();\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} Current horizontal scroll value.\n     */\n    getScrollLeft: function() {\n        return this.grid.getHScrollValue();\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {boolean} The last col was rendered (is visible)\n     */\n    isLastColumnVisible: function() {\n        var lastColumnIndex = this.grid.getColumnCount() - 1;\n        return !!this.visibleColumns.findWithNeg(function(vc) { return vc.columnIndex === lastColumnIndex; });\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} The rendered column width at index\n     */\n    getRenderedWidth: function(index) {\n        var result,\n            columns = this.visibleColumns;\n\n        if (index >= columns.length) {\n            result = columns[columns.length - 1].right;\n        } else {\n            result = columns[index].left;\n        }\n\n        return result;\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} The rendered row height at index\n     */\n    getRenderedHeight: function(index) {\n        var result,\n            rows = this.visibleRows;\n\n        if (index >= rows.length) {\n            var last = rows[rows.length - 1];\n            result = last.bottom;\n        } else {\n            result = rows[index].top;\n        }\n\n        return result;\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {boolean} User is currently dragging a column for reordering.\n     */\n    isDraggingColumn: function() {\n        return this.grid.isDraggingColumn();\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} The row to go to for a page up.\n     */\n    getPageUpRow: function() {\n        var grid = this.grid,\n            scrollHeight = this.getVisibleScrollHeight(),\n            top = this.dataWindow.origin.y - this.properties.fixedRowCount - 1,\n            scanHeight = 0;\n        while (scanHeight < scrollHeight && top >= 0) {\n            scanHeight += grid.getRowHeight(top);\n            top--;\n        }\n        return top + 1;\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @returns {number} The row to goto for a page down.\n     */\n    getPageDownRow: function() {\n        return this.dataWindow.corner.y - this.properties.fixedRowCount;\n    },\n\n    renderErrorCell: function(err, gc, vc, vr) {\n        var message = err && (err.message || err) || 'Unknown error.',\n            bounds = { x: vc.left, y: vr.top, width: vc.width, height: vr.height },\n            config = { bounds: bounds };\n\n        console.error(message);\n\n        gc.cache.save(); // define clipping region\n        gc.beginPath();\n        gc.rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        gc.clip();\n\n        this.grid.cellRenderers.get('errorcell').paint(gc, config, message);\n\n        gc.cache.restore(); // discard clipping region\n    },\n\n    /**\n     * @memberOf Renderer.prototype\n     * @desc We opted to not paint borders for each cell as that was extremely expensive. Instead we draw grid lines here.\n     * @param {CanvasRenderingContext2D} gc\n     */\n    paintGridlines: function(gc) {\n        var visibleColumns = this.visibleColumns, C = visibleColumns.length,\n            visibleRows = this.visibleRows, R = visibleRows.length;\n\n        if (C && R) {\n            var gridProps = this.properties,\n                C1 = C - 1,\n                R1 = R - 1,\n                rowHeader,\n                viewWidth = visibleColumns[C1].right,\n                viewHeight = visibleRows[R1].bottom,\n                gridLinesVColor = gridProps.gridLinesVColor,\n                gridLinesHColor = gridProps.gridLinesHColor,\n                borderBox = gridProps.boxSizing === 'border-box';\n\n            if (\n                gridProps.gridLinesV && ( // drawing vertical grid lines?\n                    gridProps.gridLinesUserDataArea || // drawing vertical grid lines between data columns?\n                    gridProps.gridLinesColumnHeader // drawing vertical grid lines between header columns?\n                )\n            ) {\n                var gridLinesVWidth = gridProps.gridLinesVWidth,\n                    headerRowCount = this.grid.getHeaderRowCount(),\n                    lastHeaderRow = visibleRows[headerRowCount - 1], // any header rows?\n                    firstDataRow = visibleRows[headerRowCount], // any data rows?\n                    userDataAreaTop = firstDataRow && firstDataRow.top,\n                    top = gridProps.gridLinesColumnHeader ? 0 : userDataAreaTop,\n                    bottom = gridProps.gridLinesUserDataArea ? viewHeight : lastHeaderRow && lastHeaderRow.bottom;\n\n                if (top !== undefined && bottom !== undefined) { // either undefined means nothing to draw\n                    gc.cache.fillStyle = gridLinesVColor;\n\n                    visibleColumns.forEachWithNeg(function(vc, c) {\n                        if (\n                            vc && // tree column may not be defined\n                            c < C1 // don't draw rule after last column\n                        ) {\n                            var x = vc.right,\n                                lineTop = Math.max(top, vc.top || 0), // vc.top may be set by grouped headers plug-in\n                                height = Math.min(bottom, vc.bottom || Infinity) - lineTop; // vc.bottom may be set by grouped headers plug-in\n\n                            if (borderBox) {\n                                x -= gridLinesVWidth;\n                            }\n\n                            // draw a single vertical grid line between both header and data cells OR a line segment in header only\n                            gc.fillRect(x, lineTop, gridLinesVWidth, height);\n\n                            // when above drew a line segment in header (vc.bottom defined AND higher up), draw a second vertical grid line between data cells\n                            if (gridProps.gridLinesUserDataArea && vc.bottom < userDataAreaTop) {\n                                gc.fillRect(x, userDataAreaTop, gridLinesVWidth, bottom - userDataAreaTop);\n                            }\n                        }\n                    });\n                }\n            }\n\n            if (\n                gridProps.gridLinesH && (\n                    gridProps.gridLinesUserDataArea ||\n                    (rowHeader = gridProps.gridLinesRowHeader && (visibleColumns[-1] || visibleColumns[-2]))\n                )\n            ) {\n                var gridLinesHWidth = gridProps.gridLinesHWidth,\n                    left = gridProps.gridLinesRowHeader ? 0 : visibleColumns[0].left,\n                    right = gridProps.gridLinesUserDataArea ? viewWidth : rowHeader.right;\n\n                gc.cache.fillStyle = gridLinesHColor;\n\n                visibleRows.forEach(function(vr, r) {\n                    if (r < R1) { // don't draw rule below last row\n                        var y = vr.bottom;\n                        if (borderBox) {\n                            y -= gridLinesHWidth;\n                        }\n                        gc.fillRect(left, y, right - left, gridLinesHWidth);\n                    }\n                });\n            }\n\n            // draw fixed rule lines over grid rule lines\n            var edgeWidth, gap;\n\n            if (gridProps.fixedLinesHWidth !== undefined) {\n                if ((gap = visibleRows.gap)) {\n                    gc.cache.fillStyle = gridProps.fixedLinesHColor || gridLinesHColor;\n                    edgeWidth = gridProps.fixedLinesHEdge;\n                    if (edgeWidth) {\n                        gc.fillRect(0, gap.top, viewWidth, edgeWidth);\n                        gc.fillRect(0, gap.bottom - edgeWidth, viewWidth, edgeWidth);\n                    } else {\n                        gc.fillRect(0, gap.top, viewWidth, gap.bottom - gap.top);\n                    }\n                }\n            }\n\n            if (gridProps.fixedLinesVWidth !== undefined) {\n                if ((gap = visibleColumns.gap)) {\n                    gc.cache.fillStyle = gridProps.fixedLinesVColor || gridLinesVColor;\n                    edgeWidth = gridProps.fixedLinesVEdge;\n                    if (edgeWidth) {\n                        gc.fillRect(gap.left, 0, edgeWidth, viewHeight);\n                        gc.fillRect(gap.right - edgeWidth, 0, edgeWidth, viewHeight);\n                    } else {\n                        gc.fillRect(gap.left, 0, gap.right - gap.left, viewHeight);\n                    }\n                }\n            }\n        }\n    },\n\n    /**\n     * @summary Render a single cell.\n     * @param {CanvasRenderingContext2D} gc\n     * @param {CellEvent} cellEvent\n     * @param {string} [prefillColor] If omitted, this is a partial renderer; all other renderers must provide this.\n     * @returns {number} Preferred width of renndered cell.\n     * @private\n     * @memberOf Renderer\n     */\n    _paintCell: function(gc, cellEvent, prefillColor) {\n        var grid = this.grid,\n            selectionModel = grid.selectionModel,\n\n            isHandleColumn = cellEvent.isHandleColumn,\n            isTreeColumn = cellEvent.isTreeColumn,\n            isColumnSelected = cellEvent.isColumnSelected,\n\n            isDataRow = cellEvent.isDataRow,\n            isRowSelected = cellEvent.isRowSelected,\n            isCellSelected = cellEvent.isCellSelected,\n\n            isHeaderRow = cellEvent.isHeaderRow,\n            isFilterRow = cellEvent.isFilterRow,\n\n            isRowHandleOrHierarchyColumn = isHandleColumn || isTreeColumn,\n            isUserDataArea = !isRowHandleOrHierarchyColumn && isDataRow,\n\n            config = this.assignProps(cellEvent),\n\n            x = (config.gridCell = cellEvent.gridCell).x,\n            r = (config.dataCell = cellEvent.dataCell).y,\n\n            value,\n            isSelected;\n\n        if (isHandleColumn) {\n            isSelected = isRowSelected || selectionModel.isCellSelectedInRow(r);\n            config.halign = 'right';\n        } else if (isTreeColumn) {\n            isSelected = isRowSelected || selectionModel.isCellSelectedInRow(r);\n            config.halign = 'left';\n        } else if (isDataRow) {\n            isSelected = isCellSelected || isRowSelected || isColumnSelected;\n        } else if (isFilterRow) {\n            isSelected = false;\n        } else if (isColumnSelected) {\n            isSelected = true;\n        } else {\n            isSelected = selectionModel.isCellSelectedInColumn(x); // header or summary or other non-meta\n        }\n\n        // Set cell contents:\n        // * For all cells: set `config.value` (writable property)\n        // * For cells outside of row handle column: also set `config.dataRow` for use by valOrFunc\n        // * For non-data row tree column cells, do nothing (these cells render blank so value is undefined)\n        if (!isHandleColumn) {\n            // including tree column\n            config.dataRow = cellEvent.dataRow;\n            value = cellEvent.value;\n        } else if (isDataRow) {\n            // row handle for a data row\n            if (config.rowHeaderNumbers) {\n                value = r + 1; // row number is 1-based\n            }\n        } else if (isHeaderRow) {\n            // row handle for header row: gets \"master\" checkbox\n            config.allRowsSelected = selectionModel.areAllRowsSelected();\n        }\n\n        config.isSelected = isSelected;\n        config.isDataColumn = !isRowHandleOrHierarchyColumn;\n        config.isHandleColumn = isHandleColumn;\n        config.isTreeColumn = isTreeColumn;\n        config.isDataRow = isDataRow;\n        config.isHeaderRow = isHeaderRow;\n        config.isFilterRow = isFilterRow;\n        config.isUserDataArea = isUserDataArea;\n        config.isColumnHovered = cellEvent.isColumnHovered;\n        config.isRowHovered = cellEvent.isRowHovered;\n        config.isCellHovered = cellEvent.isCellHovered;\n        config.bounds = cellEvent.bounds;\n        config.isCellSelected = isCellSelected;\n        config.isRowSelected = isRowSelected;\n        config.isColumnSelected = isColumnSelected;\n        config.isInCurrentSelectionRectangle = selectionModel.isInCurrentSelectionRectangle(x, r);\n        config.prefillColor = prefillColor;\n\n        if (grid.mouseDownState) {\n            config.mouseDown = grid.mouseDownState.gridCell.equals(cellEvent.gridCell);\n        }\n\n        config.subrow = 0;\n\n        // subrow logic - coded for efficiency when no subrows (!value.subrows)\n        var isArray = isUserDataArea && value && value.constructor === Array, // fastest array determination\n            subrows = isArray && value.subrows && value.length;\n\n        if (subrows) {\n            var bounds = config.bounds = Object.assign({}, config.bounds);\n            bounds.height /= subrows;\n            config.subrows = subrows;\n            config.value = config.exec(value[0]);\n        } else {\n            subrows = 1;\n            config.value = !isArray && isUserDataArea ? config.exec(value) : value;\n        }\n\n        while (true) { // eslint-disable-line\n            // This call's dataModel.getCell which developer can override to:\n            // * mutate the (writable) properties of `config` (including config.value)\n            // * mutate cell renderer choice (instance of which is returned)\n            var cellRenderer = cellEvent.subgrid.getCell(config, config.renderer);\n\n            config.formatValue = grid.getFormatter(config.format);\n\n            config.snapshot = cellEvent.snapshot[config.subrow]; // supports partial render\n\n            config.minWidth = cellEvent.minWidth; // in case `paint` aborts before setting `minWidth`\n\n            // Render the cell\n            if (cellRenderer.forEach) {\n                cellRenderer.forEach(function(subrenderer) {\n                    subrenderer.paint(gc, config);\n                });\n            } else {\n                cellRenderer.paint(gc, config);\n            }\n\n            cellEvent.snapshot[config.subrow] = config.snapshot; // supports partial render\n\n            if (cellEvent.minWidth === undefined || config.minWidth > cellEvent.minWidth) {\n                cellEvent.minWidth = config.minWidth;\n            }\n\n            if (++config.subrow === subrows) {\n                break;\n            }\n\n            bounds.y += bounds.height;\n            config.value = config.exec(value[config.subrow]);\n        }\n\n        // Following supports clicking in a renderer-defined Rectangle of a cell (in the cell's local coordinates)\n        cellEvent.clickRect = config.clickRect;\n        cellEvent.cellRenderer = cellRenderer; // renderer actually used per getCell; used by fireSyntheticButtonPressedEvent\n\n        return config.minWidth;\n    },\n\n    /**\n     * Overridable for alternative or faster logic.\n     * @param CellEvent\n     * @returns {object} Layered config object.\n     */\n    assignProps: layerProps,\n\n    /**\n     * @param {number|CellEvent} colIndexOrCellEvent - This is the \"data\" x coordinate.\n     * @param {number} [rowIndex] - This is the \"data\" y coordinate. Omit if `colIndexOrCellEvent` is a `CellEvent`.\n     * @param {DataModel} [dataModel=this.grid.behavior.dataModel] Omit if `colIndexOrCellEvent` is a `CellEvent`.\n     * @returns {CellEvent} The matching `CellEvent` object from the renderer's pool. Returns `undefined` if the requested cell is not currently visible (due to being scrolled out of view).\n     */\n    findCell: function(colIndexOrCellEvent, rowIndex, dataModel) {\n        var colIndex, cellEvent,\n            pool = this.cellEventPool;\n\n        if (typeof colIndexOrCellEvent === 'object') {\n            // colIndexOrCellEvent is a cell event object\n            dataModel = colIndexOrCellEvent.subgrid;\n            rowIndex = colIndexOrCellEvent.dataCell.y;\n            colIndex = colIndexOrCellEvent.dataCell.x;\n        } else {\n            colIndex = colIndexOrCellEvent;\n        }\n\n        dataModel = dataModel || this.grid.behavior.dataModel;\n\n        var len = this.visibleColumns.length;\n        if (this.grid.properties.showRowNumbers) { len++; }\n        if (this.grid.behavior.hasTreeColumn()) { len++; }\n        len *= this.visibleRows.length;\n        for (var p = 0; p < len; ++p) {\n            cellEvent = pool[p];\n            if (\n                cellEvent.subgrid === dataModel &&\n                cellEvent.dataCell.x === colIndex &&\n                cellEvent.dataCell.y === rowIndex\n            ) {\n                return cellEvent;\n            }\n        }\n    },\n\n    /**\n     * Resets the cell properties cache in the matching `CellEvent` object from the renderer's pool. This will insure that a new cell properties object will be known to the renderer. (Normally, the cache is not reset until the pool is updated by the next call to {@link Renderer#computeCellBounds}).\n     * @param {number|CellEvent} xOrCellEvent\n     * @param {number} [y]\n     * @param {DataModel} [dataModel=this.grid.behavior.dataModel]\n     * @returns {CellEvent} The matching `CellEvent` object.\n     */\n    resetCellPropertiesCache: function(xOrCellEvent, y, dataModel) {\n        var cellEvent = this.findCell.apply(this, arguments);\n        if (cellEvent) { cellEvent._cellOwnProperties = undefined; }\n        return cellEvent;\n    },\n\n    resetAllCellPropertiesCaches: function() {\n        this.cellEventPool.forEach(function(cellEvent) {\n            cellEvent._cellOwnProperties = undefined;\n        });\n    },\n\n    getBounds: function() {\n        return this.bounds;\n    },\n\n    setBounds: function(bounds) {\n        return (this.bounds = bounds);\n    },\n\n    setInfo: function(message) {\n        var width;\n        if (this.visibleColumns.length) {\n            width = this.visibleColumns[this.visibleColumns.length - 1].right;\n        }\n        this.grid.canvas.setInfo(message, width);\n    }\n});\n\nfunction fetchCompletion(gc, fetchError) {\n    if (!fetchError) {\n        // STEP 1: Render the grid immediately (before next refresh) just to get column widths\n        // (for better performance this could be done off-screen but this works fine as is)\n        this.gridRenderer.paintCells.call(this, gc);\n        // STEP 2: Re-render upon next refresh with proper column widths\n        this.grid.repaint();\n    }\n}\n\n/**\n * This function creates several data structures:\n * * {@link Renderer#visibleColumns}\n * * {@link Renderer#visibleRows}\n *\n * Original comment:\n * \"this function computes the grid coordinates used for extremely fast iteration over\n * painting the grid cells. this function is very fast, for thousand rows X 100 columns\n * on a modest machine taking usually 0ms and no more that 3 ms.\"\n *\n * @this {Renderer}\n */\nfunction computeCellsBounds() {\n    var scrollTop = this.getScrollTop(),\n        scrollLeft = this.getScrollLeft(),\n\n        bounds = this.getBounds(),\n        grid = this.grid,\n        behavior = grid.behavior,\n        hasTreeColumn = behavior.hasTreeColumn(),\n        treeColumnIndex = behavior.treeColumnIndex,\n\n        editorCellEvent = grid.cellEditor && grid.cellEditor.event,\n\n        vcEd, xEd,\n        vrEd, yEd,\n        sgEd, isSubgridEd,\n\n        insertionBoundsCursor = 0,\n        previousInsertionBoundsCursorValue = 0,\n\n        gridProps = grid.properties,\n        borderBox = gridProps.boxSizing === 'border-box',\n\n        lineWidthV = gridProps.gridLinesVWidth,\n        lineGapV = borderBox ? 0 : lineWidthV,\n\n        lineWidthH = gridProps.gridLinesHWidth,\n        lineGapH = borderBox ? 0 : lineWidthH,\n\n        fixedColumnCount = this.grid.getFixedColumnCount(),\n        fixedRowCount = this.grid.getFixedRowCount(),\n\n        start = behavior.leftMostColIndex,\n        numOfInternalCols = 0,\n        x, X, // horizontal pixel loop index and limit\n        y, Y, // vertical pixel loop index and limit\n        c, C, // column loop index and limit\n        g, G, // subgrid loop index and limit\n        r, R, // row loop index and limit\n        subrows, // rows in subgrid g\n        base, // sum of rows for all subgrids so far\n        fixedColumnIndex = -3,\n        fixedRowIndex = -1,\n        fixedWidthV, fixedGapV, fixedOverlapV,\n        fixedWidthH, fixedGapH, fixedOverlapH,\n        subgrids = behavior.subgrids,\n        subgrid,\n        rowIndex,\n        scrollableSubgrid,\n        footerHeight,\n        vx, vy,\n        vr, vc,\n        width, height,\n        firstVX, lastVX,\n        firstVY, lastVY,\n        topR,\n        gap;\n\n    if (editorCellEvent) {\n        xEd = editorCellEvent.gridCell.x;\n        yEd = editorCellEvent.dataCell.y;\n        sgEd = editorCellEvent.subgrid;\n    }\n\n    if (gridProps.showRowNumbers) {\n        fixedColumnIndex = hasTreeColumn ? treeColumnIndex : 0;\n        numOfInternalCols += 1;\n    }\n\n    if (hasTreeColumn) {\n        fixedColumnIndex = 0;\n        numOfInternalCols += 1;\n    }\n\n    if (fixedColumnCount) {\n        fixedColumnIndex = fixedColumnCount;\n    }\n\n    if (fixedRowCount) {\n        fixedRowIndex = fixedRowCount;\n    }\n\n    if (gridProps.fixedLinesVWidth === undefined) {\n        fixedColumnIndex = -3; // left of any column\n    } else {\n        fixedWidthV = Math.max(gridProps.fixedLinesVWidth || lineWidthV, lineWidthV);\n        fixedGapV = borderBox ? fixedWidthV - lineWidthV : fixedWidthV;\n        fixedOverlapV = fixedGapV - fixedWidthV;\n    }\n\n    if (gridProps.fixedLinesHWidth === undefined) {\n        fixedRowIndex = -1; // above any row\n    } else {\n        fixedWidthH = Math.max(gridProps.fixedLinesHWidth || lineWidthH, lineWidthH);\n        fixedGapH = borderBox ? fixedWidthH - lineWidthH : fixedWidthH;\n        fixedOverlapH = fixedGapH - fixedWidthH;\n    }\n\n    this.scrollHeight = 0;\n\n    this.visibleColumns.length = 0;\n    this.visibleColumns.gap = this.visibleColumns[-1] = this.visibleColumns[-2] = undefined;\n\n    this.visibleRows.length = 0;\n    this.visibleRows.gap = undefined;\n\n    this.visibleColumnsByIndex = []; // array because number of columns will always be reasonable\n    this.visibleRowsByDataRowIndex = {}; // hash because keyed by (fixed and) scrolled row indexes\n\n    this.insertionBounds = [];\n\n    for (\n        x = 0, c = start, C = grid.getColumnCount(), X = bounds.width || grid.canvas.width;\n        c < C && x <= X;\n        c++\n    ) {\n        if (!hasTreeColumn && c === treeColumnIndex) {\n            this.visibleColumns[c] = undefined;\n            continue;\n        }\n\n        if ((gap = c === fixedColumnIndex)) {\n            this.visibleColumns.gap = {\n                left: vc.right + fixedOverlapV,\n                right: undefined\n            };\n            x += fixedGapV;\n        } else if (x) {\n            x += lineGapV;\n        }\n\n        vx = c;\n        if (c >= fixedColumnCount) {\n            lastVX = vx += scrollLeft;\n            if (firstVX === undefined) {\n                firstVX = lastVX;\n            }\n        }\n        if (vx >= C) {\n            break; // scrolled beyond last column\n        }\n\n        width = Math.ceil(behavior.getColumnWidth(vx));\n\n        this.visibleColumns[c] = this.visibleColumnsByIndex[vx] = vc = {\n            index: c,\n            columnIndex: vx,\n            column: behavior.getActiveColumn(vx),\n            left: x,\n            width: width,\n            right: x + width\n        };\n\n        if (gap) {\n            this.visibleColumns.gap.right = vc.left;\n        }\n\n        if (xEd === vx) {\n            vcEd = vc;\n        }\n\n        x += width;\n\n        insertionBoundsCursor += Math.round(width / 2) + previousInsertionBoundsCursorValue;\n        this.insertionBounds.push(insertionBoundsCursor);\n        previousInsertionBoundsCursorValue = Math.round(width / 2);\n    }\n\n    // get height of total number of rows in all subgrids following the data subgrid\n    footerHeight = gridProps.defaultRowHeight * behavior.getFooterRowCount();\n\n    for (\n        base = r = g = y = 0, G = subgrids.length, Y = bounds.height - footerHeight;\n        g < G;\n        g++, base += subrows\n    ) {\n        subgrid = subgrids[g];\n        subrows = subgrid.getRowCount();\n        scrollableSubgrid = subgrid.isData;\n        isSubgridEd = (sgEd === subgrid);\n        topR = r;\n\n        // For each row of each subgrid...\n        for (R = r + subrows; r < R && y < Y; r++) {\n            if ((gap = scrollableSubgrid && r === fixedRowIndex)) {\n                this.visibleRows.gap = {\n                    top: vr.bottom + fixedOverlapH,\n                    bottom: undefined\n                };\n                y += fixedGapH;\n            } else if (y) {\n                y += lineGapH;\n            }\n\n\n            vy = r;\n            if (scrollableSubgrid && r >= fixedRowCount) {\n                vy += scrollTop;\n                lastVY = vy - base;\n                if (firstVY === undefined) {\n                    firstVY = lastVY;\n                }\n                if (vy >= R) {\n                    break; // scrolled beyond last row\n                }\n            }\n\n            rowIndex = vy - base;\n            height = behavior.getRowHeight(rowIndex, subgrid);\n\n            this.visibleRows[r] = vr = {\n                index: r,\n                subgrid: subgrid,\n                rowIndex: rowIndex,\n                top: y,\n                height: height,\n                bottom: y + height\n            };\n\n            if (gap) {\n                this.visibleRows.gap.bottom = vr.top;\n            }\n\n            if (scrollableSubgrid) {\n                this.visibleRowsByDataRowIndex[vy - base] = vr;\n            }\n\n            if (isSubgridEd && yEd === rowIndex) {\n                vrEd = vr;\n            }\n\n            y += height;\n        }\n\n        if (scrollableSubgrid) {\n            subrows = r - topR;\n        }\n    }\n\n    if (editorCellEvent) {\n        editorCellEvent.visibleColumn = vcEd;\n        editorCellEvent.visibleRow = vrEd;\n        editorCellEvent.gridCell.y = vrEd && vrEd.index;\n        editorCellEvent._bounds = null;\n    }\n\n    this.dataWindow = new InclusiveRectangle(\n        firstVX,\n        firstVY,\n        Math.min(lastVX - firstVX + 1, this.visibleColumns.length),\n        Math.min(lastVY - firstVY + 1, this.visibleRows.length)\n    );\n\n    // Resize CellEvent pool\n    var pool = this.cellEventPool,\n        previousLength = pool.length,\n        P = (this.visibleColumns.length + numOfInternalCols) * this.visibleRows.length;\n\n    if (P > previousLength) {\n        pool.length = P; // grow pool to accommodate more cells\n    }\n    for (var p = previousLength; p < P; p++) {\n        pool[p] = new behavior.CellEvent; // instantiate new members\n    }\n\n    this.resetAllGridRenderers();\n}\n\n/**\n * @summary Create a list of `Rectangle`s representing visible cells.\n * @desc When `grid.properties.fetchSubregions` is true, this function needs to handle:\n * 1. unordered columns\n * 2. column gaps (hidden columns)\n * 3. the single row gap that results when there are fixed rows and remaining rows are scrolled down\n *\n * @ToDo This function currently only handles (1) above; needs (2) (multiple rectangles for multiple contiguous column regions) and (3) (double each region for above and below the fixed boundary when scrolled down) as well. In its present form, it will \"fetch\" all cells from upper left of fixed area to lower right of scrollable area. (Yikes.)\n *\n * When `grid.properties.fetchSubregions` is falsy, this function merely returns `this.dataWindow` as the only rectangle.\n * This is way more efficient than calling `getSubrects` (as it is currently implemented) and is fine so long as there are no fixed columns or rows and column re-ordering is disabled.\n * (If tree column in use, it is a fixed column, but this is workable so long as the data model knows to always return it regardless of rectangle.)\n * Hidden columns within the range of visible columns will be fetched anyway.\n * Column scrolling is ok.\n *\n * @ToDo This function is too slow for practical use due to map and sort.\n *\n * @this {Renderer}\n */\nfunction getSubrects() {\n    var dw = this.dataWindow;\n    if (!this.grid.properties.fetchSubregions) {\n        var rect = this.grid.newRectangle(dw.left, dw.top, dw.width, dw.height); // convert from InclusiveRect\n        return [rect];\n    }\n\n    var orderedColumnIndexes = this.visibleColumns.map(function(vc) { return vc.column.index; }).sort(intComparator),\n        xMin = orderedColumnIndexes[0],\n        width = orderedColumnIndexes[orderedColumnIndexes.length - 1] - xMin + 1;\n\n    return [this.grid.newRectangle(xMin, dw.top, width, dw.height)];\n}\n\nfunction intComparator(a, b){ return a - b; }\n\n/**\n * @summary Resize the handle column.\n * @desc Handle column width is sum of:\n * * Width of text the maximum row number, if visible, based on handle column's current font\n * * Width of checkbox, if visible\n * * Some padding\n *\n * @this {Renderer}\n * @param {CanvasRenderingContext2D} gc\n * @param {number} rowCount\n */\nfunction resetRowHeaderColumnWidth(gc, rowCount) {\n    var columnProperties = this.grid.behavior.getColumnProperties(this.grid.behavior.rowColumnIndex),\n        gridProps = this.grid.properties,\n        width = 2 * columnProperties.cellPadding;\n\n    // Checking images.checked also supports a legacy feature in which checkbox could be hidden by undefining the image.\n    if (gridProps.rowHeaderCheckboxes && images.checked) {\n        width += images.checked.width;\n    }\n\n    if (gridProps.rowHeaderNumbers) {\n        var cellProperties = columnProperties.rowHeader;\n        gc.cache.font = cellProperties.foregroundSelectionFont.indexOf('bold ') >= 0\n            ? cellProperties.foregroundSelectionFont\n            : cellProperties.font;\n\n        width += gc.getTextWidth(rowCount);\n    }\n\n    columnProperties.preferredWidth = columnProperties.width = width;\n}\n\nfunction registerGridRenderer(paintCellsFunction) {\n    if (paintCellsFunctions.indexOf(paintCellsFunction) < 0) {\n        paintCellsFunctions.push(paintCellsFunction);\n    }\n}\n\nregisterGridRenderer(require('./by-cells'));\nregisterGridRenderer(require('./by-columns'));\nregisterGridRenderer(require('./by-columns-discrete'));\nregisterGridRenderer(require('./by-columns-and-rows'));\nregisterGridRenderer(require('./by-rows'));\n\nRenderer.registerGridRenderer = registerGridRenderer;\n\nmodule.exports = Renderer;\n","module.exports = {\n\t\"calendar\": {\n\t\ttype: \"image/png\",\n\t\tdata: \"iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAc0lEQVR4nIXQwQkCMRSE4U9ZLMCT9Xjaq2AfNhfYU5oQLMAOtoN48EWei5iBIRPe/yYQ3qrhf1lFG7iKcEaJxSfukUvMWgdHavt0uWHtg2QwxXnAnJZ2uOLyVZtybzzhgWNmfoFl0/YB87NbzR1cjP9xeQHSDC6mcL1xFQAAAABJRU5ErkJggg==\"\n\t},\n\t\"checked\": {\n\t\ttype: \"image/png\",\n\t\tdata: \"iVBORw0KGgoAAAANSUhEUgAAAAsAAAALCAMAAACecocUAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA4xpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTQwIDc5LjE2MDMwMiwgMjAxNy8wMy8wMi0xNjo1OTozOCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxZmM0YjdjYS01N2U3LTRjZTUtYWE3Zi1kYmFjZTU0ODJmZjciIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MkIzRUM3OEQzNkMyMTFFODhEOUJCMzRBRUM0QUQ5QUMiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MkIzRUM3OEMzNkMyMTFFODhEOUJCMzRBRUM0QUQ5QUMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIEVsZW1lbnRzIDE2LjAgKE1hY2ludG9zaCkiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDphZjdjMDA1NS1mMzJlLTQ1NjAtOGQxOS1lYTU1NGVhNDkzMmEiIHN0UmVmOmRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDo0YmZiODQwOS03ZWY0LTExN2ItYjI4MS05MDYxODEwMDAwMDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5PI8IaAAAAkFBMVEVOTk5NTU29vb1paWnPz8/AwMC7u7u5ublDQ0NSUlJFRUVfX1/IyMixsbHi4uKFhYXT09PDw8NXV1fKysrMzMxYWFhzc3N7e3ve3t6ioqK+vr7Ly8uhoaHa2tqysrKurq7s7Oyvr6/Jycm2trbt7e3X19fh4eG1tbW/v7+3t7fo6OhERES6urrW1tbd3d0AAADC/hfQAAAAMHRSTlP//////////////////////////////////////////////////////////////wBipdB4AAAAcElEQVR42hTIRRbDMAwAUYVTZoa4ZleyfP/btZrVfwOlq4l66utlge5lrbIqq0cL9JX07Onv8PZr791pvm8H+DBrbhBiTn9f4IzjjcW6Qhw3zNnAxLHChln+iq9xsRUPQNFlyYUjlF0KwZiQDuUnwACjfw8FagWYLwAAAABJRU5ErkJggg==\"\n\t},\n\t\"down-rectangle\": {\n\t\ttype: \"image/png\",\n\t\tdata: \"iVBORw0KGgoAAAANSUhEUgAAAAkAAAAECAYAAABcDxXOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAadEVYdFNvZnR3YXJlAFBhaW50Lk5FVCB2My41LjExR/NCNwAAABpJREFUGFdjgIL/eDAKIKgABggqgAE0BQwMAPTlD/Fpi0JfAAAAAElFTkSuQmCC\"\n\t},\n\t\"filter-off\": {\n\t\ttype: \"image/png\",\n\t\tdata: \"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAMCAYAAABSgIzaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuNWWFMmUAAAChSURBVChTzZHBCoUgFET9TqEiskgyWoutQvRLRIr+cR7XQAjiJW/1BgZmMUevXsY5xy9OoDEGMcYiUzeB67qibVuwQjVNA6311V+WBeM4vsLDMEApde/1fY9pmtI453neHEKAlBJd1z0fXtc16PbjODK07zvmeUZVVd8nooc75zJIOX3Gm6i0bVsGKf8xKIRIuyJTLgJJ3nvQzsjW2geIsQ/pr9hMVrSncAAAAABJRU5ErkJggg==\"\n\t},\n\t\"filter-on\": {\n\t\ttype: \"image/png\",\n\t\tdata: \"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAMCAYAAABSgIzaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuNWWFMmUAAACoSURBVChTY3BqfP2fHAzWmDbj7f8p294RhVOBasEa02e+/e/VBmQQCTxaX/9PnvYGoj5ywpv/Qd2ENft3vv4f1gfVBAP+nW/+h/a+ATtn1q73KHjytvdgg3070DTBgHvL6/8g22fsQGiaDmSHA21xaybgIpDHixa8hWssnA8NDEIApCh3LkIjiD2INYJCL2X6W3B8gdhEaQQBUOCA4gyE8+e9xaKJgQEA/74BNE3cElkAAAAASUVORK5CYII=\"\n\t},\n\t\"unchecked\": {\n\t\ttype: \"image/png\",\n\t\tdata: \"iVBORw0KGgoAAAANSUhEUgAAAAsAAAALCAMAAACecocUAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA4xpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTQwIDc5LjE2MDMwMiwgMjAxNy8wMy8wMi0xNjo1OTozOCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDphNDQ3MTQ0Zi0wYmFmLTQ3YzMtYjBmNi1kODRlNDI0MjU4ZDIiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MkIzRUM3OTEzNkMyMTFFODhEOUJCMzRBRUM0QUQ5QUMiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MkIzRUM3OTAzNkMyMTFFODhEOUJCMzRBRUM0QUQ5QUMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIEVsZW1lbnRzIDE2LjAgKE1hY2ludG9zaCkiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo1OWY2YWVhMC0xZjJkLTRjM2UtYTRiZi02MWYyMDNlMmI4YjciIHN0UmVmOmRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDo2Nzk3NWVjNC03ZWY0LTExN2ItYjI4MS05MDYxODEwMDAwMDAiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6ywX99AAAAYFBMVEW5ubm/v7/X19fLy8vp6ene3t69vb2xsbG6urq+vr6urq7a2tq4uLji4uLIyMjBwcHDw8PJycnPz8/V1dW1tbWvr6/t7e23t7e7u7vs7Oy2trbo6Ojh4eHW1tbd3d0AAAAm0pqPAAAAIHRSTlP/////////////////////////////////////////AFxcG+0AAABZSURBVHjaTIqHDoAgEEOLC9wL5RTP+/+/VIIxdCTNSyFjZQwR1YNAtftxhOQLUHjvQ68K+orqW2C7P7FL9okmrjLl5cv1/+lAKuOVmTObQyZ32tdulkeAAQCpggrEM7zMmAAAAABJRU5ErkJggg==\"\n\t},\n\t\"up-down-spin\": {\n\t\ttype: \"image/png\",\n\t\tdata: \"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAPCAYAAADUFP50AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwQAADsEBuJFr7QAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC41ZYUyZQAAAGJJREFUOE+lkwEKACEIBH2Zb/PnHsoGeaVJDUjGOgRRpKpkiIj+y4MME3eDR7kaKOVNsJyMNjIHzGy9YnW6J7qIcrriQimeCqORNABd0fpRTkt8uVUj7EsxC6vs/q3e/Q6iD2bwnByjPXHNAAAAAElFTkSuQmCC\"\n\t},\n\t\"up-down\": {\n\t\ttype: \"image/png\",\n\t\tdata: \"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAPCAYAAADUFP50AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwQAADsEBuJFr7QAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC41ZYUyZQAAAGFJREFUOE+lkkEKQCEIRD2ZJ3Ph3iN4WD9GflpYhj0YYowpGgJmbikd3gjMDFokwbuT1iAiurG5nomgqo5QaPo9ERQRI6Jf7sfGjudy2je23+i0Wl2oQ85TOdlfrJQOazF8br+rqTXQKn0AAAAASUVORK5CYII=\"\n\t},\n};\n","'use strict';\n\nvar defaults = require('../defaults');\n\nvar COLUMNS = defaults.propClassEnum.COLUMNS,\n    CELLS = defaults.propClassEnum.CELLS,\n    ROWS = defaults.propClassEnum.ROWS,\n    STRIPES = defaults.propClassEnum.STRIPES,\n    propClassGet = [];\n\npropClassGet[COLUMNS] = function(cellEvent) {\n    return cellEvent.columnProperties;\n};\npropClassGet[CELLS] = function(cellEvent) {\n    return cellEvent.cellOwnProperties;\n};\npropClassGet[STRIPES] = function(cellEvent) {\n    var rowStripes = cellEvent.isDataRow && cellEvent.columnProperties.rowStripes;\n    return rowStripes && rowStripes[cellEvent.dataCell.y % rowStripes.length];\n};\npropClassGet[ROWS] = function(cellEvent) {\n    return cellEvent.rowOwnProperties;\n};\n\nfunction assignProps(cellEvent) {\n    var i, base, assignments,\n        propLayers = cellEvent.properties.propClassLayers;\n\n    switch (propLayers[0]) {\n        case ROWS:\n            i = 1; // skip row prop layer\n            base = cellEvent.rowOwnProperties || this.grid.properties; // because row has grid props as prototype\n            break;\n        case COLUMNS:\n            if (propLayers[1] === CELLS) {\n                i = 2; // skip both column + cell prop layers\n                base = cellEvent.properties; // because cell has column props as prototype\n            } else {\n                i = 1; // skip column prop layer\n                base = cellEvent.columnProperties; // because column has grid props as prototype\n            }\n            break;\n        case CELLS:\n            if (propLayers[1] === COLUMNS) {\n                if ((base = cellEvent.cellOwnProperties)) {\n                    i = 1; // skip cell prop layer because cell has column props (which has grid props) as prototype\n                } else {\n                    i = 2; // skip both cell + column prop layers\n                    base = cellEvent.columnProperties; // because column has grid props as prototype\n                }\n            } else if (propLayers[2] === COLUMNS || propLayers[3] === COLUMNS) {\n                i = 1; // skip cell prop layer\n                base = cellEvent.properties; // because cell has column props (which has grid props) as prototype\n            } else {\n                i = 0; // all prop layers\n                base = this.grid.properties; // because cell has column props as prototype but COLUMNS is not in the list\n            }\n            break;\n        case STRIPES:\n            i = 0; // all prop layers\n            base = this.grid.properties;\n            break;\n    }\n\n    for (assignments = [Object.create(base)]; i < propLayers.length; ++i) {\n        assignments.push(propClassGet[propLayers[i]](cellEvent));\n    }\n\n    return Object.assign.apply(Object, assignments);\n}\n\nmodule.exports = assignProps;\n","'use strict';\n\nvar paintCellsByColumnsAndRows = require('./by-columns-and-rows');\n\n/** @summary Render the grid only as needed (\"partial render\").\n * @desc Paints all the cells of a grid, one column at a time, but only as needed.\n *\n * Partial render is supported only by those cells whose cell renderer supports it by returning before rendering (based on `config.snapshot`).\n *\n * #### On reset\n *\n * Defers to {@link Renderer#paintCellsByColumnsAndRows|paintCellsByColumnsAndRows}, which clears the canvas, draws the grid, and draws the grid lines.\n *\n * #### On the next call (after reset)\n *\n * Each cell is drawn redrawn only when its appearance changes. This determination is made by the cell renderer by comparing with (and maintaining) `config.snapshot`. See {@link SimpleCell} for a sample implementation.\n *\n * `try...catch` surrounds each cell paint in case a cell renderer throws an error.\n * The error message is error-logged to console AND displayed in cell.\n *\n * #### On subsequent calls\n *\n * Iterates through each cell, calling `_paintCell` with `undefined` prefill color. This signifies partial render to the {@link SimpleCell} cell renderer, which only renders the cell when it's text, font, or colors have changed.\n *\n * Each cell to be rendered is described by a {@link CellEvent} object. For performance reasons, to avoid constantly instantiating these objects, we maintain a pool of these. When the grid shape changes, we reset their coordinates by setting {@link CellEvent#reset|reset} on each.\n *\n * See also the discussion of clipping in {@link Renderer#paintCellsByColumns|paintCellsByColumns}.\n * @this {Renderer}\n * @param {CanvasRenderingContext2D} gc\n * @memberOf Renderer.prototype\n */\nfunction paintCellsAsNeeded(gc) {\n    var cellEvent,\n        visibleColumns = this.visibleColumns,\n        visibleRows = this.visibleRows,\n        C = visibleColumns.length, cLast = C - 1,\n        r, R = visibleRows.length,\n        p = 0, pool = this.cellEventPool,\n        preferredWidth,\n        columnClip,\n        // clipToGrid,\n        // viewWidth = C ? visibleColumns[cLast].right : 0,\n        viewHeight = R ? visibleRows[R - 1].bottom : 0;\n\n\n    if (!C || !R) { return; }\n\n    if (this.gridRenderer.reset) {\n        this.resetAllGridRenderers();\n        paintCellsByColumnsAndRows.call(this, gc);\n        this.gridRenderer.reset = false;\n    }\n\n    // gc.clipSave(clipToGrid, 0, 0, viewWidth, viewHeight);\n\n    // For each column...\n    this.visibleColumns.forEachWithNeg(function(vc, c) {\n        cellEvent = pool[p]; // first cell in column c\n        vc = cellEvent.visibleColumn;\n\n        // Optionally clip to visible portion of column to prevent text from overflowing to right.\n        columnClip = vc.column.properties.columnClip;\n        gc.clipSave(columnClip || columnClip === null && c === cLast, 0, 0, vc.right, viewHeight);\n\n        // For each row of each subgrid (of each column)...\n        for (preferredWidth = r = 0; r < R; r++, p++) {\n            cellEvent = pool[p]; // next cell down the column (redundant for first cell in column)\n\n            try {\n                // Partial render signaled by calling `_paintCell` with undefined 3rd param (formal `prefillColor`).\n                preferredWidth = Math.max(preferredWidth, this._paintCell(gc, pool[p]));\n            } catch (e) {\n                this.renderErrorCell(e, gc, vc, pool[p].visibleRow);\n            }\n        }\n\n        gc.clipRestore(columnClip);\n\n        cellEvent.column.properties.preferredWidth = Math.round(preferredWidth);\n    }, this);\n\n    // gc.clipRestore(clipToGrid);\n\n    if (this.grid.properties.boxSizing === 'border-box') {\n        this.paintGridlines(gc);\n    }\n}\n\npaintCellsAsNeeded.key = 'by-cells';\n\npaintCellsAsNeeded.partial = true; // skip painting selectionRegionOverlayColor\n\nmodule.exports = paintCellsAsNeeded;\n","'use strict';\n\nvar bundleColumns = require('./bundle-columns');\n\n/** @summary Render the grid with consolidated column rects.\n * @desc Paints all the cells of a grid, one column at a time.\n *\n * First, a background rect is drawn using the grid background color.\n *\n * Then, if there are any columns with their own background color _that differs from the grid background color,_ these are consolidated and the consolidated groups of column backgrounds are all drawn before iterating through cells. Note that these column rects are _not_ suitable for clipping overflow text from previous columns. If you have overflow text, either turn on clipping (`grid.properties.columnClip = true` but big performance hit) or turn on one of the `truncateTextWithEllipsis` options.\n *\n * `try...catch` surrounds each cell paint in case a cell renderer throws an error.\n * The error message is error-logged to console AND displayed in cell.\n *\n * Each cell to be rendered is described by a {@link CellEvent} object. For performance reasons, to avoid constantly instantiating these objects, we maintain a pool of these. When the grid shape changes, we reset their coordinates by setting {@link CellEvent#reset|reset} on each.\n *\n * **Regading clipping.** The reason for clipping is to prevent text from overflowing into the next column. However there is a serious performance cost.\n *\n * For performance reasons {@link Renderer#_paintCell|_paintCell} does not set up a clipping region for each cell. However, iff grid property `columnClip` is truthy, this grid renderer will set up a clipping region to prevent text overflow to right. If `columnClip` is `null`, a clipping region will only be set up on the last column. Otherwise, there will be no clipping region.\n *\n * The idea of clipping just the last column is because in addition to the optional graphics clipping, we also clip (\"truncate\") text. Text can be truncated conservatively so it will never overflow. The problem with this is that characters vanish as they hit the right cell boundary, which may or may be obvious depending on font size. Alternatively, text can be truncated so that the overflow will be a maximum of 1 character. This allows partial characters to be rendered. But this is where graphics clipping is required.\n *\n * When renderering column by column as this particular renderer does, _and_ when the background color _of the next cell to the right_ is opaque (alpha = 1), clipping can be turned off because each column will _overpaint_ any text that overflowed from the one before. However, any text that overflows the last column will paint into unused canvas region to the right of the grid. This is the _raison d'être_ for \"clip last column only\" option mentioned above (when `columnClip` is set to `null`). To avoid even this performance cost (of clipping just the last column), column widths can be set to fill the available canvas.\n *\n * Note that text never overflows to left because text starting point is never < 0. The reason we don't clip to the left is for cell renderers that need to re-render to the left to produce a merged cell effect, such as grouped column header.\n\n * @this {Renderer}\n * @param {CanvasRenderingContext2D} gc\n * @memberOf Renderer.prototype\n */\nfunction paintCellsByColumns(gc) {\n    var grid = this.grid,\n        gridProps = grid.properties,\n        prefillColor, gridPrefillColor = gridProps.backgroundColor,\n        cellEvent,\n        columnBundle, columnBundles,\n        visibleColumns = this.visibleColumns,\n        visibleRows = this.visibleRows,\n        c, C = visibleColumns.length, cLast = C - 1,\n        r, R = visibleRows.length,\n        pool = this.cellEventPool,\n        preferredWidth,\n        columnClip,\n        // clipToGrid,\n        viewWidth = C ? visibleColumns[cLast].right : 0,\n        viewHeight = R ? visibleRows[R - 1].bottom : 0;\n\n\n    gc.clearRect(0, 0, this.bounds.width, this.bounds.height);\n\n    if (!C || !R) { return; }\n\n    if (gc.alpha(gridPrefillColor) > 0) {\n        gc.cache.fillStyle = gridPrefillColor;\n        gc.fillRect(0, 0, viewWidth, viewHeight);\n    }\n\n    if (this.gridRenderer.reset) {\n        this.resetAllGridRenderers(['by-columns-discrete']);\n        this.gridRenderer.reset = false;\n        bundleColumns.call(this, true);\n    } else if (this.gridRenderer.rebundle) {\n        this.gridRenderer.rebundle = false;\n        bundleColumns.call(this);\n    }\n\n    for (columnBundles = this.columnBundles, c = columnBundles.length; c--;) {\n        columnBundle = columnBundles[c];\n        gc.clearFill(columnBundle.left, 0, columnBundle.right - columnBundle.left, viewHeight, columnBundle.backgroundColor);\n    }\n\n    // gc.clipSave(clipToGrid, 0, 0, viewWidth, viewHeight);\n\n    // For each column...\n    var p = 0;\n    this.visibleColumns.forEachWithNeg(function(vc, c) {\n        cellEvent = pool[p]; // first cell in column c\n        vc = cellEvent.visibleColumn;\n\n        prefillColor = cellEvent.column.properties.backgroundColor;\n\n        // Optionally clip to visible portion of column to prevent text from overflowing to right.\n        columnClip = vc.column.properties.columnClip;\n        gc.clipSave(columnClip || columnClip === null && c === cLast, 0, 0, vc.right, viewHeight);\n\n        // For each row of each subgrid (of each column)...\n        for (preferredWidth = r = 0; r < R; r++, p++) {\n            cellEvent = pool[p]; // next cell down the column (redundant for first cell in column)\n\n            try {\n                preferredWidth = Math.max(preferredWidth, this._paintCell(gc, cellEvent, prefillColor));\n            } catch (e) {\n                this.renderErrorCell(e, gc, vc, cellEvent.visibleRow);\n            }\n        }\n\n        gc.clipRestore(columnClip);\n\n        cellEvent.column.properties.preferredWidth = Math.round(preferredWidth);\n    }, this);\n\n    // gc.clipRestore(clipToGrid);\n\n    this.paintGridlines(gc);\n}\n\npaintCellsByColumns.key = 'by-columns';\npaintCellsByColumns.rebundle = true; // see rebundleGridRenderers\n\nmodule.exports = paintCellsByColumns;\n","'use strict';\n\nvar bundleColumns = require('./bundle-columns');\n\n/** @summary Render the grid with discrete column rects.\n * @desc Paints all the cells of a grid, one column at a time.\n *\n * In this grid renderer, a background rect is _not_ drawn using the grid background color.\n *\n * Rather, all columns paint their own background rects, with color defaulting to grid background color.\n *\n * The idea of painting each column rect is to \"clip\" text that might have overflowed from the previous column by painting over it with the background from this column. Only the last column will show overflowing text, and only if the canvas width exceeds the grid width. If this is the case, you can turn on clipping for the last column only by setting `columnClip` to `true` for the last column.\n *\n * NOTE: As a convenience feature, setting `columnClip` to `null` will clip only the last column, so simply setting it on the grid (rather than the last column) will have the same effect. This is much more convenient because you don't have to worry about the last column being redefined (moved, hidden, etc).\n *\n * `try...catch` surrounds each cell paint in case a cell renderer throws an error.\n * The error message is error-logged to console AND displayed in cell.\n *\n * Each cell to be rendered is described by a {@link CellEvent} object. For performance reasons, to avoid constantly instantiating these objects, we maintain a pool of these. When the grid shape changes, we reset their coordinates by setting {@link CellEvent#reset|reset} on each.\n *\n * See also the discussion of clipping in {@link Renderer#paintCellsByColumnsDiscrete|paintCellsByColumnsDiscrete}.\n\n * @this {Renderer}\n * @param {CanvasRenderingContext2D} gc\n * @memberOf Renderer.prototype\n */\nfunction paintCellsByColumnsDiscrete(gc) {\n    var prefillColor,\n        cellEvent,\n        visibleColumns = this.visibleColumns,\n        visibleRows = this.visibleRows,\n        C = visibleColumns.length, cLast = C - 1,\n        r, R = visibleRows.length,\n        pool = this.cellEventPool,\n        preferredWidth,\n        columnClip,\n        // clipToGrid,\n        // viewWidth = C ? visibleColumns[C - 1].right : 0,\n        viewHeight = R ? visibleRows[R - 1].bottom : 0;\n\n    gc.clearRect(0, 0, this.bounds.width, this.bounds.height);\n\n    if (!C || !R) { return; }\n\n    if (this.gridRenderer.reset) {\n        this.resetAllGridRenderers(['by-columns']);\n        this.gridRenderer.reset = false;\n        bundleColumns.call(this, true);\n    }\n\n    // gc.clipSave(clipToGrid, 0, 0, viewWidth, viewHeight);\n\n    // For each column...\n    var p = 0;\n    this.visibleColumns.forEachWithNeg(function(vc, c) {\n        cellEvent = pool[p]; // first cell in column c\n        vc = cellEvent.visibleColumn;\n\n        prefillColor = cellEvent.column.properties.backgroundColor;\n        gc.clearFill(vc.left, 0, vc.width, viewHeight, prefillColor);\n\n        // Optionally clip to visible portion of column to prevent text from overflowing to right.\n        columnClip = vc.column.properties.columnClip;\n        gc.clipSave(columnClip || columnClip === null && c === cLast, 0, 0, vc.right, viewHeight);\n\n        // For each row of each subgrid (of each column)...\n        for (preferredWidth = r = 0; r < R; r++, p++) {\n            cellEvent = pool[p]; // next cell down the column (redundant for first cell in column)\n\n            try {\n                preferredWidth = Math.max(preferredWidth, this._paintCell(gc, cellEvent, prefillColor));\n            } catch (e) {\n                this.renderErrorCell(e, gc, vc, cellEvent.visibleRow);\n            }\n        }\n\n        gc.clipRestore(columnClip);\n\n        cellEvent.column.properties.preferredWidth = Math.round(preferredWidth);\n    }, this);\n\n    // gc.clipRestore(clipToGrid);\n\n    this.paintGridlines(gc);\n}\n\npaintCellsByColumnsDiscrete.key = 'by-columns-discrete';\n\nmodule.exports = paintCellsByColumnsDiscrete;\n","'use strict';\n\nvar bundleRows = require('./bundle-rows');\n\n/** @summary Render the grid.\n * @desc _**NOTE:** This grid renderer is not as performant as the others and it's use is not recommended if you care about performance. The reasons for the wanting performance are unclear, possibly having to do with the way Chrome optimizes access to the column objects?_\n *\n * Paints all the cells of a grid, one row at a time.\n *\n * First, a background rect is drawn using the grid background color.\n *\n * Then, if there are any rows with their own background color _that differs from the grid background color,_ these are consolidated and the consolidated groups of row backgrounds are all drawn before iterating through cells.\n *\n * `try...catch` surrounds each cell paint in case a cell renderer throws an error.\n * The error message is error-logged to console AND displayed in cell.\n *\n * Each cell to be rendered is described by a {@link CellEvent} object. For performance reasons, to avoid constantly instantiating these objects, we maintain a pool of these. When the grid shape changes, we reset their coordinates by setting {@link CellEvent#reset|reset} on each.\n *\n * See also the discussion of clipping in {@link Renderer#paintCellsByColumns|paintCellsByColumns}.\n * @this {Renderer}\n * @param {CanvasRenderingContext2D} gc\n * @memberOf Renderer.prototype\n */\nfunction paintCellsByRows(gc) {\n    var grid = this.grid,\n        gridProps = grid.properties,\n        prefillColor, rowPrefillColors, gridPrefillColor = gridProps.backgroundColor,\n        cellEvent,\n        rowBundle, rowBundles = this.rowBundles,\n        visibleColumns = this.visibleColumns,\n        vr, visibleRows = this.visibleRows,\n        c, C = visibleColumns.length, c0 = 0, cLast = C - 1,\n        r, R = visibleRows.length,\n        p, pool = this.cellEventPool,\n        preferredWidth = Array(C - c0).fill(0),\n        columnClip,\n        // clipToGrid,\n        viewWidth = C ? visibleColumns[C - 1].right : 0,\n        viewHeight = R ? visibleRows[R - 1].bottom : 0,\n        drawLines = gridProps.gridLinesH,\n        lineWidth = gridProps.gridLinesHWidth,\n        lineColor = gridProps.gridLinesHColor;\n\n    gc.clearRect(0, 0, this.bounds.width, this.bounds.height);\n\n    if (!C || !R) { return; }\n\n    if (gc.alpha(gridPrefillColor) > 0) {\n        gc.cache.fillStyle = gridPrefillColor;\n        gc.fillRect(0, 0, viewWidth, viewHeight);\n    }\n\n    if (this.gridRenderer.reset) {\n        this.resetAllGridRenderers();\n        this.gridRenderer.reset = false;\n        bundleRows.call(this, true);\n    }\n\n    rowPrefillColors = this.rowPrefillColors;\n\n    for (r = rowBundles.length; r--;) {\n        rowBundle = rowBundles[r];\n        gc.clearFill(0, rowBundle.top, viewWidth, rowBundle.bottom - rowBundle.top, rowBundle.backgroundColor);\n    }\n\n    // gc.clipSave(clipToGrid, 0, 0, viewWidth, viewHeight);\n\n    // For each row of each subgrid...\n    for (p = 0, r = 0; r < R; r++) {\n        prefillColor = rowPrefillColors[r];\n\n        if (drawLines) {\n            gc.cache.fillStyle = lineColor;\n            gc.fillRect(0, pool[p].visibleRow.bottom, viewWidth, lineWidth);\n        }\n\n        // For each column (of each row)...\n        this.visibleColumns.forEachWithNeg(function(vc) {  // eslint-disable-line no-loop-func\n            p++;\n            cellEvent = pool[p]; // next cell across the row (redundant for first cell in row)\n            vc = cellEvent.visibleColumn;\n\n            // Optionally clip to visible portion of column to prevent text from overflowing to right.\n            columnClip = vc.column.properties.columnClip;\n            gc.clipSave(columnClip || columnClip === null && c === cLast, 0, 0, vc.right, viewHeight);\n\n            try {\n                preferredWidth[c] = Math.max(preferredWidth[c], this._paintCell(gc, cellEvent, prefillColor));\n            } catch (e) {\n                this.renderErrorCell(e, gc, vc, vr);\n            }\n\n            gc.clipRestore(columnClip);\n        }, this);\n    }\n\n    // gc.clipRestore(clipToGrid);\n\n    this.paintGridlines(gc);\n\n    this.visibleColumns.forEachWithNeg(function(vc, c) {\n        vc.column.properties.preferredWidth = Math.round(preferredWidth[c]);\n    });\n}\n\npaintCellsByRows.key = 'by-rows';\n\nmodule.exports = paintCellsByRows;\n","'use strict';\n\nvar RangeSelectionModel = require('sparse-boolean-array');\n\nvar InclusiveRectangle = require('./InclusiveRectangle');\n\n\n/**\n *\n * @constructor\n * @desc We represent selections as a list of rectangles because large areas can be represented and tested against quickly with a minimal amount of memory usage. Also we need to maintain the selection rectangles flattened counter parts so we can test for single dimension contains. This is how we know to highlight the fixed regions on the edges of the grid.\n */\n\nfunction SelectionModel(grid) {\n    this.grid = grid;\n    this.reset();\n}\n\nSelectionModel.prototype = {\n\n    constructor: SelectionModel.prototype.constructor,\n\n    /**\n     * @type {boolean}\n     * @memberOf SelectionModel.prototype\n     */\n    allRowsSelected: false,\n\n    reset: function() {\n        /**\n         * @name selections\n         * @type {Rectangle[]}\n         * @summary The selection rectangles.\n         * @desc Created as an empty array upon instantiation by the {@link SelectionModel|constructor}.\n         * @memberOf SelectionModel.prototype\n         */\n        this.selections = [];\n\n        /**\n         * @name flattenedX\n         * @type {Rectangle[]}\n         * @summary The selection rectangles flattened in the horizontal direction (no width).\n         * @desc Created as an empty array upon instantiation by the {@link SelectionModel|constructor}.\n         * @memberOf SelectionModel.prototype\n         */\n        this.flattenedX = [];\n\n        /**\n         * @name flattenedY\n         * @type {Rectangle[]}\n         * @summary The selection rectangles flattened in the vertical direction (no height).\n         * @desc Created as an empty array upon instantiation by the {@link SelectionModel|constructor}.\n         * @memberOf SelectionModel.prototype\n         */\n        this.flattenedY = [];\n\n        /**\n         * @name rowSelectionModel\n         * @type {RangeSelectionModel}\n         * @summary The selection rectangles.\n         * @desc Created as a new RangeSelectionModel upon instantiation by the {@link SelectionModel|constructor}.\n         * @memberOf SelectionModel.prototype\n         */\n        this.rowSelectionModel = new RangeSelectionModel();\n\n        /**\n         * @name columnSelectionModel\n         * @type {RangeSelectionModel}\n         * @summary The selection rectangles.\n         * @desc Created as a new RangeSelectionModel upon instantiation by the {@link SelectionModel|constructor}.\n         * @memberOf SelectionModel.prototype\n         */\n        this.columnSelectionModel = new RangeSelectionModel();\n\n        this.lastSelectionType = [];\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {*}\n     */\n    getLastSelection: function() {\n        var sels = this.selections;\n        var sel = sels[sels.length - 1];\n        return sel;\n    },\n\n    /**\n     * The most recent selection type. This is the TOS of `this.lastSelectionType`, the stack of unique selection types.\n     *\n     * Note that in the case where the only remaining previous selection of `type` was deselected, and `setLastSelectionType` was called with `reset` truthy, `type` is removed from the stack. If it was previously TOS, the TOS will now be what was the 2nd most recently pushed type (or nothing if no other selections).\n     *\n     * Returns empty string (`''`) if there are no selections.\n     * @memberOf SelectionModel.prototype\n     * @returns {*}\n     */\n    getLastSelectionType: function(n) {\n        return this.lastSelectionType[n || 0] || '';\n    },\n\n    /**\n     * Set the most recent selection's `type`. That is, push onto TOS of `this.lastSelectionType`, the stack of unique selection types. If already in the stack, move it to the top.\n     *\n     * If `reset` is truthy, remove the given `type` from the stack, regardless of where found therein (or not), thus \"revealing\" the 2nd most recently pushed type.\n     *\n     * @param {string} type - One of: `'cell'`, `'row'`, or `'column'`\n     * @param {boolean} [reset=false] - Remove the given `type` from the stack. Specify truthy when the only remaining previous selection of `type` has been deselected.\n     * @memberOf SelectionModel.prototype\n     */\n    setLastSelectionType: function(type, reset) {\n        var i = this.lastSelectionType.indexOf(type);\n        if (i === 0 && !reset) {\n            return;\n        }\n        if (i >= 0) {\n            this.lastSelectionType.splice(i, 1);\n        }\n        if (!reset) {\n            this.lastSelectionType.unshift(type);\n        }\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @description Select the region described by the given coordinates.\n     *\n     * @param {number} ox - origin x coordinate\n     * @param {number} oy - origin y coordinate\n     * @param {number} ex - extent x coordinate\n     * @param {number} ey - extent y coordinate\n     * @param {boolean} silent - whether to fire selection changed event\n     */\n    select: function(ox, oy, ex, ey, silent) {\n        var newSelection = new InclusiveRectangle(ox, oy, ex + 1, ey + 1);\n\n        //Cache the first selected cell before it gets normalized to top-left origin\n        newSelection.firstSelectedCell = this.grid.newPoint(ox, oy);\n\n        newSelection.lastSelectedCell = (\n            newSelection.firstSelectedCell.x === newSelection.origin.x &&\n            newSelection.firstSelectedCell.y === newSelection.origin.y\n        )\n            ? newSelection.corner\n            : newSelection.origin;\n\n        if (this.grid.properties.multipleSelections) {\n            this.selections.push(newSelection);\n            this.flattenedX.push(newSelection.flattenXAt(0));\n            this.flattenedY.push(newSelection.flattenYAt(0));\n        } else {\n            this.selections[0] = newSelection;\n            this.flattenedX[0] = newSelection.flattenXAt(0);\n            this.flattenedY[0] = newSelection.flattenYAt(0);\n        }\n        this.setLastSelectionType('cell');\n\n        this.grid.selectionChanged(silent);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param {number} ox - origin x coordinate\n     * @param {number} oy - origin y coordinate\n     * @param {number} ex - extent x coordinate\n     * @param {number} ey - extent y coordinate\n     */\n    toggleSelect: function(ox, oy, ex, ey) {\n\n        var index = this.selections.findIndex(function(selection) {\n            return (\n                selection.origin.x === ox && selection.origin.y === oy &&\n                selection.extent.x === ex && selection.extent.y === ey\n            );\n        });\n\n        if (index >= 0) {\n            this.selections.splice(index, 1);\n            this.flattenedX.splice(index, 1);\n            this.flattenedY.splice(index, 1);\n            this.setLastSelectionType('cell', !this.selections.length);\n            this.grid.selectionChanged();\n        } else {\n            this.select(ox, oy, ex, ey);\n        }\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @desc Remove the last selection that was created.\n     */\n    clearMostRecentSelection: function(keepRowSelections) {\n        if (!keepRowSelections) {\n            this.setAllRowsSelected(false);\n        }\n        if (this.selections.length) { --this.selections.length; }\n        if (this.flattenedX.length) { --this.flattenedX.length; }\n        if (this.flattenedY.length) { --this.flattenedY.length; }\n        this.setLastSelectionType('cell', !this.selections.length);\n        //this.getGrid().selectionChanged();\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     */\n    clearMostRecentColumnSelection: function() {\n        this.columnSelectionModel.clearMostRecentSelection();\n        this.setLastSelectionType('column', !this.columnSelectionModel.selection.length);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     */\n    clearMostRecentRowSelection: function() {\n        this.rowSelectionModel.clearMostRecentSelection();\n        this.setLastSelectionType('row', !this.rowSelectionModel.selection.length);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     */\n    clearRowSelection: function() {\n        this.rowSelectionModel.clear();\n        this.setLastSelectionType('row', !this.rowSelectionModel.selection.length);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {*}\n     */\n    getSelections: function() {\n        return this.selections;\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {boolean} There are active selection(s).\n     */\n    hasSelections: function() {\n        return this.selections.length !== 0;\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {boolean}\n     */\n    hasRowSelections: function() {\n        return !this.rowSelectionModel.isEmpty();\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {boolean}\n     */\n    hasColumnSelections: function() {\n        return !this.columnSelectionModel.isEmpty();\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @return {boolean} Selection covers a specific column.\n     * @param {number} y\n     */\n    isCellSelectedInRow: function(y) {\n        return this._isCellSelected(this.flattenedX, 0, y);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns Selection covers a specific row.\n     * @param {number} x\n     */\n    isCellSelectedInColumn: function(x) {\n        return this._isCellSelected(this.flattenedY, x, 0);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @summary Selection query function.\n     * @returns {boolean} The given cell is selected (part of an active selection).\n     * @param {Rectangle[]} selections - Selection rectangles to search through.\n     * @param {number} x\n     * @param {number} y\n     */\n    isSelected: function(x, y) {\n        return (\n            this.isColumnSelected(x) ||\n            this.isRowSelected(y) ||\n            this._isCellSelected(this.selections, x, y)\n        );\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param x\n     * @param y\n     * @returns {*}\n     */\n    isCellSelected: function(x, y) {\n        return this._isCellSelected(this.selections, x, y);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param selections\n     * @param x\n     * @param y\n     * @returns {boolean}\n     * @private\n     */\n    _isCellSelected: function(selections, x, y) {\n        var self = this;\n        return !!selections.find(function(selection) {\n            return self.rectangleContains(selection, x, y);\n        });\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @desc empty out all our state\n     *\n     */\n    clear: function(keepRowSelections) {\n        this.selections.length = 0;\n        this.flattenedX.length = 0;\n        this.flattenedY.length = 0;\n        this.columnSelectionModel.clear();\n        if (!keepRowSelections) {\n            this.lastSelectionType.length = 0;\n            this.setAllRowsSelected(false);\n            this.rowSelectionModel.clear();\n        } else if (this.lastSelectionType.indexOf('row') >= 0) {\n            this.lastSelectionType = ['row'];\n        } else {\n            this.lastSelectionType.length = 0;\n        }\n        //this.getGrid().selectionChanged();\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param {number} ox - origin x coordinate\n     * @param {number} oy - origin y coordinate\n     * @param {number} ex - extent x coordinate\n     * @param {number} ey - extent y coordinate\n     * @returns {boolean}\n     */\n    isRectangleSelected: function(ox, oy, ex, ey) {\n        return !!this.selections.find(function(selection) {\n            return (\n                selection.origin.x === ox && selection.origin.y === oy &&\n                selection.extent.x === ex && selection.extent.y === ey\n            );\n        });\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param x\n     * @returns {*}\n     */\n    isColumnSelected: function(x) {\n        return this.columnSelectionModel.isSelected(x);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param y\n     * @returns {boolean|*}\n     */\n    isRowSelected: function(y) {\n        return this.allRowsSelected || this.rowSelectionModel.isSelected(y);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param x1\n     * @param x2\n     */\n    selectColumn: function(x1, x2) {\n        this.columnSelectionModel.select(x1, x2);\n        this.setLastSelectionType('column', !this.columnSelectionModel.selection.length);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     */\n    selectAllRows: function() {\n        this.clear();\n        this.setAllRowsSelected(true);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {boolean}\n     */\n\n    setAllRowsSelected: function(isIt) {\n        this.allRowsSelected = isIt;\n    },\n\n    areAllRowsSelected: function() {\n        return this.allRowsSelected;\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param y1\n     * @param y2\n     */\n    selectRow: function(y1, y2) {\n        this.rowSelectionModel.select(y1, y2);\n        this.setLastSelectionType('row', !this.rowSelectionModel.selection.length);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param x1\n     * @param x2\n     */\n    deselectColumn: function(x1, x2) {\n        this.columnSelectionModel.deselect(x1, x2);\n        this.setLastSelectionType('column', !this.columnSelectionModel.selection.length);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param y1\n     * @param y2\n     */\n    deselectRow: function(y1, y2) {\n        if (this.areAllRowsSelected()) {\n            // To deselect a row, we must first remove the all rows flag...\n            this.setAllRowsSelected(false);\n            // ...and create a single range representing all rows\n            this.rowSelectionModel.select(0, this.grid.getRowCount() - 1);\n        }\n        this.rowSelectionModel.deselect(y1, y2);\n        this.setLastSelectionType('row', !this.rowSelectionModel.selection.length);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {*}\n     */\n    getSelectedRows: function() {\n        if (this.areAllRowsSelected()) {\n            var headerRows = this.grid.getHeaderRowCount();\n            var rowCount = this.grid.getRowCount() - headerRows;\n            var result = new Array(rowCount);\n            for (var i = 0; i < rowCount; i++) {\n                result[i] = i + headerRows;\n            }\n            return result;\n        }\n        return this.rowSelectionModel.getSelections();\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {*|Array.Array.number}\n     */\n    getSelectedColumns: function() {\n        return this.columnSelectionModel.getSelections();\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {boolean}\n     */\n     isColumnOrRowSelected: function() {\n        return !this.columnSelectionModel.isEmpty() || !this.rowSelectionModel.isEmpty();\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @returns {Array}\n     */\n    getFlattenedYs: function() {\n        var result = [];\n        var set = {};\n        this.selections.forEach(function(selection) {\n            var top = selection.origin.y;\n            var size = selection.height;\n            for (var r = 0; r < size; r++) {\n                var ti = r + top;\n                if (!set[ti]) {\n                    result.push(ti);\n                    set[ti] = true;\n                }\n            }\n        });\n        result.sort(function(x, y) {\n            return x - y;\n        });\n        return result;\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param offset\n     */\n    selectRowsFromCells: function(offset, keepRowSelections) {\n        offset = offset || 0;\n\n        var sm = this.rowSelectionModel;\n\n        if (!keepRowSelections) {\n            this.setAllRowsSelected(false);\n            sm.clear();\n        }\n\n        this.selections.forEach(function(selection) {\n            var top = selection.origin.y,\n                extent = selection.extent.y;\n            top += offset;\n            sm.select(top, top + extent);\n        });\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param offset\n     */\n    selectColumnsFromCells: function(offset) {\n        offset = offset || 0;\n\n        var sm = this.columnSelectionModel;\n        sm.clear();\n\n        this.selections.forEach(function(selection) {\n            var left = selection.origin.x,\n                extent = selection.extent.x;\n            left += offset;\n            sm.select(left, left + extent);\n        });\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param x\n     * @param y\n     * @returns {*}\n     */\n    isInCurrentSelectionRectangle: function(x, y) {\n        var last = this.getLastSelection();\n        return last && this.rectangleContains(last, x, y);\n    },\n\n    /**\n     * @memberOf SelectionModel.prototype\n     * @param rect\n     * @param x\n     * @param y\n     * @returns {boolean}\n     */\n    rectangleContains: function(rect, x, y) { //TODO: explore why this works and contains on rectanglular does not\n        var minX = rect.origin.x;\n        var minY = rect.origin.y;\n        var maxX = minX + rect.extent.x;\n        var maxY = minY + rect.extent.y;\n\n        if (rect.extent.x < 0) {\n            minX = maxX;\n            maxX = rect.origin.x;\n        }\n\n        if (rect.extent.y < 0) {\n            minY = maxY;\n            maxY = rect.origin.y;\n        }\n\n        var result =\n            x >= minX &&\n            y >= minY &&\n            x <= maxX &&\n            y <= maxY;\n\n        return result;\n    }\n};\n\nmodule.exports = SelectionModel;\n","/* eslint-env browser */\n\n'use strict';\n\nvar overrider = require('overrider');\n\nvar toFunction = require('../lib/toFunction');\nvar assignOrDelete = require('../lib/assignOrDelete');\nvar HypergridError = require('../lib/error');\nvar images = require('../../images');\n\n\nvar warned = {};\n\n\n/** @summary Create a new `Column` object.\n * @mixes cellProperties.columnMixin\n * @mixes columnProperties.mixin\n * @constructor\n * @param {Behavior} behavior\n * @param {object} columnSchema\n * @param {number} columnSchema.index\n * @param {string} columnSchema.name\n * @param {string} [columnSchema.header] - Displayed in column headers. If not defined, name is used.\n * @param {function} [columnSchema.calculator] - Define to make a computed column.\n * @param {string} [columnSchema.type] - For possible data model use. (Not used in core.)\n *\n * Positive values of `index` are \"real\" fields.\n *\n * Negative values of `index` are special cases:\n * `index` | Meaning\n * :-----: | --------\n *    -2   | Row header column\n *    -1   | Tree (drill-down) column\n */\nfunction Column(behavior, columnSchema) {\n    switch (typeof columnSchema) {\n        case 'number':\n            if (!warned.number) {\n                console.warn('Column(behavior: object, index: number) overload has been deprecated as of v2.1.6 in favor of Column(behavior: object, columnSchema: object) overload with defined columnSchema.index. (Will be removed in a future release.)');\n                warned.number = true;\n            }\n            columnSchema = {\n                index: columnSchema\n            };\n            break;\n        case 'string':\n            if (!warned.string) {\n                console.warn('Column(behavior:object, name: string) overload (where name is sought in schema) has been deprecated as of v2.1.6 in favor of Column(behavior: object, columnSchema: object) overload with defined columnSchema.index. (Will be removed in a future release.)');\n                warned.string = true;\n            }\n            var name, index;\n            name = columnSchema;\n            index = behavior.dataModel.schema.findIndex(function(columnSchema) {\n                return columnSchema.name === name;\n            });\n            if (index < 0) {\n                throw new this.HypergridError('Column named \"' + name + '\" not found in schema.');\n            }\n            columnSchema = {\n                name: name,\n                index: index\n            };\n            break;\n        case 'object':\n            if (columnSchema.index === undefined) {\n                if (!warned.object) {\n                    console.warn('Column(behavior:object, columnSchema: object) overload (where columnSchema.index is undefined but columnSchema.name is sought in schema) has been deprecated as of v2.1.6 in favor of defined columnSchema.index. (Will be removed in a future release.)');\n                    warned.object = true;\n                }\n                name = columnSchema.name;\n                index = behavior.dataModel.schema.findIndex(function(columnSchema) {\n                    return columnSchema.name === name;\n                });\n                if (index < 0) {\n                    throw new this.HypergridError('Column named \"' + name + '\" not found in schema.');\n                }\n                columnSchema.index = index;\n            }\n            break;\n    }\n\n    if (columnSchema.index === undefined) {\n        throw new HypergridError('Column index required.');\n    }\n\n    this.behavior = behavior;\n    this.dataModel = behavior.dataModel;\n\n    // set `index` and `name` as read-only properties\n    Object.defineProperties(this, {\n        index: {\n            value: columnSchema.index\n        },\n        name: {\n            enumerable: true,\n            value: columnSchema.name || columnSchema.index.toString()\n        }\n    });\n\n    this.properties = this.schema = columnSchema; // see {@link Column#properties properties} setter\n\n    switch (columnSchema.index) {\n        case this.behavior.treeColumnIndex:\n            // Width of icon + 3-pixel spacer (checked and unchecked should be same width)\n            var icon = images[Object.create(this.properties.treeHeader, { isDataRow: { value: true } }).leftIcon];\n            this.properties.minimumColumnWidth = icon ? icon.width + 3 : 0;\n            break;\n\n        case this.behavior.rowColumnIndex:\n            break;\n\n        default:\n            if (columnSchema.index < 0) {\n                throw new this.HypergridError('New column index ' + columnSchema.index + ' out of range.');\n            }\n    }\n}\n\nColumn.prototype = {\n    constructor: Column.prototype.constructor,\n    $$CLASS_NAME: 'Column',\n\n    HypergridError: HypergridError,\n\n    mixIn: overrider.mixIn,\n\n    /**\n     * @summary Get or set the text of the column's header.\n     * @desc The _header_ is the label at the top of the column.\n     *\n     * Setting the header updates both:\n     * * the `schema` (aka, header) array in the underlying data source; and\n     * * the filter.\n     * @type {string}\n     */\n    set header(header) {\n        this.schema.header = header;\n        this.behavior.grid.repaint();\n    },\n    get header() {\n        return this.schema.header;\n    },\n\n    /**\n     * @summary Get or set the computed column's calculator function.\n     * @desc Setting the value here updates the calculator in the data model schema.\n     *\n     * The results of the new calculations will appear in the column cells on the next repaint.\n     * @type {string}\n     */\n    set calculator(calculator) {\n        calculator = resolveCalculator.call(this, calculator);\n        if (calculator !== this.schema.calculator) {\n            this.schema.calculator = calculator;\n            this.behavior.grid.reindex();\n        }\n    },\n    get calculator() {\n        return this.schema.calculator;\n    },\n\n    /**\n     * @summary Get or set the type of the column's header.\n     * @desc Setting the type updates the filter which typically uses this information for proper collation.\n     *\n     * @todo: Instead of using `this._type`, put on data source like the other essential properties. In this case, sorter could use the info to choose a comparator more intelligently and efficiently.\n     * @type {string}\n     */\n    set type(type) {\n        this.schema.type = type;\n        this.behavior.reindex();\n    },\n    get type() {\n        return this.schema.type;\n    },\n\n    getValue: function(y, dataModel) {\n        return this.dataModel.getValue(this.index, y, dataModel);\n    },\n\n    setValue: function(y, value, dataModel) {\n        return this.dataModel.setValue(this.index, y, value, dataModel);\n    },\n\n    getWidth: function() {\n        return this.properties.width || this.behavior.grid.properties.defaultColumnWidth;\n    },\n\n    setWidth: function(width) {\n        width = Math.max(this.properties.minimumColumnWidth, width);\n        if (width !== this.properties.width) {\n            this.properties.width = width;\n            this.properties.columnAutosizing = false;\n        }\n    },\n\n    checkColumnAutosizing: function(force) {\n        var properties = this.properties,\n            width, preferredWidth, autoSized;\n\n        if (properties.columnAutosizing) {\n            width = properties.width;\n            preferredWidth = properties.preferredWidth || width;\n            force = force || !properties.columnAutosized;\n            if (width !== preferredWidth || force && preferredWidth !== undefined) {\n                properties.width = force ? preferredWidth : Math.max(width, preferredWidth);\n                if (properties.columnAutosizingMax && properties.width > properties.columnAutosizingMax) {\n                    properties.width = properties.columnAutosizingMax;\n                }\n                properties.columnAutosized = !isNaN(properties.width);\n                autoSized = properties.width !== width;\n            }\n        }\n\n        return autoSized;\n    },\n\n    getCellType: function(y) {\n        var value = this.getValue(y);\n        return this.typeOf(value);\n    },\n\n    getType: function() {\n        var props = this.properties;\n        var type = props.type;\n        if (!type) {\n            type = this.computeColumnType();\n            if (type !== 'unknown') {\n                props.type = type;\n            }\n        }\n        return type;\n    },\n\n    computeColumnType: function() {\n        var headerRowCount = this.behavior.getHeaderRowCount();\n        var height = this.behavior.getRowCount();\n        var value = this.getValue(headerRowCount);\n        var eachType = this.typeOf(value);\n        if (!eachType) {\n            return 'unknown';\n        }\n        var type = this.typeOf(value);\n        //var isNumber = ((typeof value) === 'number');\n        for (var y = headerRowCount; y < height; y++) {\n            value = this.getValue(y);\n            eachType = this.typeOf(value);\n            // if (type !== eachType) {\n            //     if (isNumber && (typeof value === 'number')) {\n            //         type = 'float';\n            //     } else {\n            //         return 'mixed';\n            //     }\n            // }\n        }\n        return type;\n    },\n\n    typeOf: function(something) {\n        if (something == null) {\n            return null;\n        }\n        var typeOf = typeof something;\n        switch (typeOf) {\n            case 'object':\n                return something.constructor.name.toLowerCase();\n            case 'number':\n                return parseInt(something) === something ? 'int' : 'float';\n            default:\n                return typeOf;\n        }\n    },\n\n    get properties() {\n        return this._properties;\n    },\n    set properties(properties) {\n        this.addProperties(properties, true);\n    },\n\n    /**\n     * Copy a properties collection to this column's properties object.\n     *\n     * When a value is `undefined` or `null`, the property is deleted except when a setter or non-configurable in which case it's set to `undefined`.\n     * @param {object|undefined} properties - Properties to copy to column's properties object. If `undefined`, this call is a no-op.\n     * @param {boolean} [settingState] - Clear column's properties object before copying properties.\n     */\n    addProperties: function(properties, settingState) {\n        if (!properties) {\n            return;\n        }\n        if (settingState || !this._properties) {\n            this._properties = this.createColumnProperties();\n        }\n        assignOrDelete(this._properties, properties);\n    },\n\n    /** This method is provided because some grid renderer optimizations require that the grid renderer be informed when column colors change. Due to performance concerns, they cannot take the time to figure it out for themselves. Along the same lines, making the property a getter/setter (in columnProperties.js), though doable, might present performance concerns as this property is possibly the most accessed of all column properties.\n     * @param color\n     */\n    setBackgroundColor: function(color) {\n        if (this.properties.backgroundColor !== color) {\n            this.properties.backgroundColor = color;\n            this.behavior.grid.renderer.rebundleGridRenderers();\n        }\n    },\n\n    /**\n     * @summary Get a new cell editor.\n     * @desc The cell editor to use must be registered with the key in the cell's `editor` property.\n     *\n     * The cell's `format` property is mixed into the provided cellEvent for possible overriding by developer's override of {@link DataModel.prototype.getCellEditorAt} before being used by {@link CellEditor} to parse and format the cell value.\n     *\n     * @param {CellEvent} cellEvent\n     *\n     * @returns {undefined|CellEditor} Falsy value means either no declared cell editor _or_ instantiation aborted by falsy return from `fireRequestCellEdit`.\n     */\n    getCellEditorAt: function(cellEvent) {\n        var columnIndex = this.index,\n\n            rowIndex = cellEvent.gridCell.y,\n\n            editorName = cellEvent.properties.editor,\n\n            options = Object.create(cellEvent, {\n                format: {\n                    // `options.format` is a copy of the cell's `format` property which is:\n                    // 1. Subject to adjustment by the `getCellEditorAt` override.\n                    // 2. Then used by the cell editor to reference the registered localizer (defaults to 'string' localizer)\n                    writable: true,\n                    enumerable: true, // so cell editor will copy it to self\n                    value: cellEvent.properties.format\n                }\n            }),\n\n            cellEditor = cellEvent.subgrid.getCellEditorAt(columnIndex, rowIndex, editorName, options);\n\n        if (cellEditor && !cellEditor.grid) {\n            // cell editor returned but not fully instantiated (aborted by falsy return from fireRequestCellEdit)\n            cellEditor = undefined;\n        }\n\n        return cellEditor;\n    },\n\n    getFormatter: function() {\n        var localizerName = this.properties.format;\n        return this.behavior.grid.localization.get(localizerName).format;\n    }\n};\n\nvar REGEX_ARROW_FUNC = /^(\\(.*\\)|\\w+)\\s*=>/,\n    REGEX_NAMED_FUNC = /^function\\s+(\\w+)\\(/,\n    REGEX_ANON_FUNC = /^function\\s*\\(/;\n\n/**\n * Calculators are functions. Column calculators are saved in `grid.properties.calculators` using the function name as key. Anonymous functions use the stringified function itself as the key. This may seem pointless, but this achieves the objective here which is to share function instances.\n * @throws {HypergridError} Unexpected input.\n * @throws {HypergridError} Arrow function not permitted.\n * @throws {HypergridError} Unknown function.\n * @this {Column}\n * @param {function|string} calculator - One of:\n * * calculator function\n * * stringified calculator function with or without function name\n * * function name of a known function (already in `calculators`)\n * * falsy value\n * @returns {function} Shared calculator instance or `undefined` if input was falsy.\n */\nfunction resolveCalculator(calculator) {\n    if (!calculator) {\n        return undefined;\n    }\n\n    var forColumnName = ' (for column \"' + this.name + '\").';\n\n    if (typeof calculator === 'function') {\n        calculator = calculator.toString();\n    } else if (typeof calculator !== 'string') {\n        throw new HypergridError('Expected calculator function OR string containing calculator function OR calculator name' + forColumnName);\n    }\n\n    var matches, key,\n        calculators = this.behavior.grid.properties.calculators || (this.behavior.grid.properties.calculators = {});\n\n    if (/^\\w+$/.test(calculator)) {\n        key = calculator; // just a function name\n        if (!calculators[key]) {\n            throw new HypergridError('Unknown calculator name \"' + key + forColumnName);\n        }\n    } else if ((matches = calculator.match(REGEX_NAMED_FUNC))) {\n        key = matches[1]; // function name extracted from stringified function\n    } else if (calculator.test(REGEX_ANON_FUNC)) {\n        key = calculator; // anonymous stringified function\n    } else if (REGEX_ARROW_FUNC.test(calculator)) {\n        throw new HypergridError('Arrow function not permitted as column calculator ' + forColumnName);\n    }\n\n    if (!calculators[key]) { // neither a string nor a function (previously functionified string)?\n        calculators[key] = calculator;\n    }\n\n    // functionify existing entries as well as new `calculators` entries\n    calculators[key] = toFunction(calculators[key]);\n\n    return calculators[key];\n}\n\nColumn.prototype.mixIn(require('./cellProperties').mixin);\nColumn.prototype.mixIn(require('./columnProperties').mixin);\n\nmodule.exports = Column;\n","'use strict';\n\nvar HypergridError = require('./error');\n\n/**\n * @param {function|string} string\n * @returns {function}\n * @private\n */\nmodule.exports = function(string) {\n    switch (typeof string) {\n        case 'undefined':\n        case 'function':\n            return string;\n        case 'string':\n            break;\n        default:\n            throw new HypergridError('Expected string, function, or undefined.');\n    }\n\n    var args = string.match(/^function\\s*\\w*\\s*\\(([^]*?)\\)/);\n    if (!args) {\n        throw new HypergridError('Expected function keyword with formal parameter list.');\n    }\n    args = args[1].split(',').map(function(s, i) {\n        s = s.match(/\\s*(\\w*)\\s*/); // trim each argument\n        if (!s && i) {\n            throw new HypergridError('Expected formal parameter.');\n        }\n        return s[1];\n    });\n\n    var body = string.match(/{\\s*([^]*?)\\s*}\\s*$/);\n    if (!body) {\n        throw new HypergridError('Expected function body.');\n    }\n    body = body[1];\n\n    if (args.length === 1 && !args[0]) {\n        args[0] = body;\n    } else {\n        args = args.concat(body);\n    }\n\n    return Function.apply(null, args);\n};\n","'use strict';\n\nvar assignOrDelete = require('../lib/assignOrDelete');\n\n/**\n * Column.js mixes this module into its prototype.\n * @mixin\n */\nexports.mixin = {\n\n    /**\n     * @summary Get the properties object for cell.\n     * @desc This is the cell's own properties object if found; else the column object.\n     *\n     * If you are seeking a single specific property, consider calling {@link Column#getCellProperty} instead (which calls this method).\n     * @param {number} rowIndex - Data row coordinate.\n     * @param {DataModel} [dataModel=this.dataModel]\n     * @return {object} The properties of the cell at x,y in the grid.\n     * @memberOf Column#\n     */\n    getCellProperties: function(rowIndex, dataModel) {\n        return this.getCellOwnProperties(rowIndex, dataModel) || this.properties;\n    },\n\n    /**\n     * @param {number} rowIndex - Data row coordinate.\n     * @param {object|undefined} properties - Hash of cell properties. If `undefined`, this call is a no-op.\n     * @param {DataModel} [dataModel=this.dataModel]\n     * @returns {*} New cell properties object, based on column properties object, with `properties` copied to it.\n     * @memberOf Column#\n     */\n    setCellProperties: function(rowIndex, properties, dataModel) {\n        if (properties) {\n            return Object.assign(newCellPropertiesObject.call(this, rowIndex, dataModel), properties);\n        }\n    },\n\n    /**\n     * @param {number} rowIndex - Data row coordinate.\n     * @param {object|undefined} properties - Hash of cell properties. If `undefined`, this call is a no-op.\n     * @param {DataModel} [dataModel=this.dataModel]\n     * @returns {object} Cell's own properties object, which will be created by this call if it did not already exist.\n     * @memberOf Column#\n     */\n    addCellProperties: function(rowIndex, properties, dataModel) {\n        if (properties) {\n            return assignOrDelete(getCellPropertiesObject.call(this, rowIndex, dataModel), properties);\n        }\n    },\n\n    /**\n     * @summary Get the cell's own properties object.\n     * @desc Due to memory constraints, we don't create a cell properties object for every cell.\n     *\n     * If the cell has its own properties object, it:\n     * * was created by a previous call to `setCellProperties` or `setCellProperty`\n     * * has the column properties object as its prototype\n     * * is returned\n     *\n     * If the cell does not have its own properties object, this method returns `null`.\n     *\n     * Call this method only when you need to know if the the cell has its own properties object; otherwise call {@link Column#getCellProperties|getCellProperties}.\n     * @param {number} rowIndex - Data row coordinate.\n     * @param {DataModel} [dataModel=this.dataModel]\n     * @returns {null|object} The \"own\" properties of the cell at x,y in the grid. If the cell does not own a properties object, returns `null`.\n     * @memberOf Column#\n     */\n    getCellOwnProperties: function(rowIndex, dataModel) {\n        var metadata;\n        return (\n            // this.index >= 0 && // no cell props on row handle cells\n            (metadata = (dataModel || this.dataModel).getRowMetadata(rowIndex)) && // no cell props on non-existent rows\n            metadata && metadata[this.name] ||\n            null // null means not previously created\n        );\n    },\n\n    /**\n     * Delete cell's own properties object.\n     * @param {number} rowIndex - Data row coordinate.\n     * @param {DataModel} [dataModel=this.dataModel]\n     * @memberOf Column#\n     */\n    deleteCellOwnProperties: function(rowIndex, dataModel) {\n        dataModel = dataModel || this.dataModel;\n        var metadata = dataModel.getRowMetadata(rowIndex);\n        if (metadata) {\n            delete metadata[this.name];\n            if (Object.keys(metadata).length === 0) {\n                dataModel.setRowMetadata(rowIndex);\n            }\n        }\n    },\n\n    /**\n     * @summary Return a specific cell property.\n     * @desc If there is no cell properties object, defers to column properties object.\n     * @param {number} rowIndex - Data row coordinate.\n     * @param {string} key\n     * @param {DataModel} [dataModel=this.dataModel]\n     * @return {object} The specified property for the cell at x,y in the grid.\n     * @memberOf Column#\n     */\n    getCellProperty: function(rowIndex, key, dataModel) {\n        return this.getCellProperties(rowIndex, dataModel)[key];\n    },\n\n    /**\n     * @param {number} rowIndex - Data row coordinate.\n     * @param {string} key\n     * @param value\n     * @param {DataModel} [dataModel=this.dataModel]\n     * @returns {object} Cell's own properties object, which will be created by this call if it did not already exist.\n     * @memberOf Column#\n     */\n    setCellProperty: function(rowIndex, key, value, dataModel) {\n        var cellProps = getCellPropertiesObject.call(this, rowIndex, dataModel);\n        cellProps[key] = value;\n        return cellProps;\n    },\n\n    /**\n     * @summary Delete a cell own property.\n     * @summary If the property is not an own property, it is not deleted.\n     * @param {number} rowIndex - Data row coordinate.\n     * @param {string} key\n     * @param {DataModel} [dataModel=this.dataModel]\n     */\n    deleteCellProperty: function(rowIndex, key, dataModel) {\n        var cellProps = this.getCellOwnProperties(rowIndex, dataModel);\n        if (cellProps) {\n            delete cellProps[key];\n        }\n    },\n\n    /**\n     * Clear all cell properties from all cells in this column.\n     * @memberOf Column#\n     */\n    clearAllCellProperties: function() {\n        this.behavior.subgrids.forEach(function(dataModel) {\n            for (var y = dataModel.getRowCount(); y--;) {\n                this.deleteCellOwnProperties(y, dataModel);\n            }\n        }, this);\n    }\n};\n\n/**\n * @todo: Theoretically setData should call this method to ensure each cell's persisted properties object is properly recreated with prototype set to its column's properties object.\n * @this {Column}\n * @param {number} rowIndex - Data row coordinate.\n     * @param {DataModel} [dataModel=this.dataModel]\n * @returns {object}\n * @private\n */\nfunction getCellPropertiesObject(rowIndex, dataModel) {\n    return this.getCellOwnProperties(rowIndex, dataModel) || newCellPropertiesObject.call(this, rowIndex, dataModel);\n}\n\n/**\n * @this {Column}\n * @param {number} rowIndex - Data row coordinate.\n     * @param {DataModel} [dataModel=this.dataModel]\n * @returns {object}\n * @private\n */\nfunction newCellPropertiesObject(rowIndex, dataModel) {\n    var metadata = (dataModel || this.dataModel).getRowMetadata(rowIndex, null),\n        props = this.properties;\n\n    switch (this.index) {\n        case this.behavior.treeColumnIndex:\n            props = props.treeHeader;\n            break;\n        case this.behavior.rowColumnIndex:\n            props = props.rowHeader;\n            break;\n        default:\n            if (dataModel && dataModel.type === 'filter') {\n                props = this.properties.filterProperties;\n            }\n    }\n\n    return (metadata[this.name] = Object.create(props));\n}\n","'use strict';\n\n/**\n * @this {Column}\n * @returns {object}\n * @memberOf Column#\n */\nfunction createColumnProperties() {\n    var column = this,\n        tableState = column.behavior.grid.properties,\n        properties;\n\n    properties = Object.create(tableState, {\n\n        index: { // read-only (no setter)\n            get: function() {\n                return column.index;\n            }\n        },\n\n        name: { // read-only (no setter)\n           get: function() {\n                return column.name;\n            }\n        },\n\n        field: { // read-only (no setter)\n            get: function() {\n                return column.name;\n            }\n        },\n\n        columnName: { // read-only (no setter)\n            get: function() {\n                return column.name;\n            }\n        },\n\n        header: {\n            get: function() {\n                return column.header;\n            },\n            set: function(header) {\n                if (this !== column.properties) {\n                    tableState.header = header; // throws an error\n                }\n                column.header = header;\n            }\n        },\n\n        type: {\n            get: function() {\n                return column.type;\n            },\n            set: function(type) {\n                if (this !== column.properties) {\n                    tableState.type = type; // throws an error\n                }\n                column.type = type;\n            }\n        },\n\n        calculator: {\n            get: function() {\n                return column.calculator;\n            },\n            set: function(calculator) {\n                if (this !== column.properties) {\n                    tableState.calculator = calculator; // throws an error\n                }\n                column.calculator = calculator;\n            }\n        },\n\n        toJSON: {\n            // although we don't generally want header, type, and calculator to be enumerable, we do want them to be serializable\n            value: function() {\n                return Object.assign({\n                    header: this.header,\n                    type: this.type,\n                    calculator: this.calculator\n                }, this);\n            }\n        }\n\n    });\n\n    Object.defineProperties(properties, {\n        rowHeader: { value: Object.create(properties, createColumnProperties.rowHeaderDescriptors) },\n        treeHeader: { value: Object.create(properties, createColumnProperties.treeHeaderDescriptors) },\n        columnHeader: { value: Object.create(properties, createColumnProperties.columnHeaderDescriptors) },\n        filterProperties: { value: Object.create(properties, createColumnProperties.filterDescriptors) }\n    });\n\n    switch (column.index) {\n        case column.behavior.treeColumnIndex: properties = properties.treeHeader; break;\n        case column.behavior.rowColumnIndex: properties = properties.rowHeader; break;\n    }\n\n    return properties;\n}\n\ncreateColumnProperties.treeHeaderDescriptors = {\n    font: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.treeHeaderFont;\n        },\n        set: function(value) {\n            this.treeHeaderFont = value;\n        }\n    },\n    color: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.treeHeaderColor;\n        },\n        set: function(value) {\n            this.treeHeaderColor = value;\n        }\n    },\n    backgroundColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.treeHeaderBackgroundColor;\n        },\n        set: function(value) {\n            this.treeHeaderBackgroundColor = value;\n        }\n    },\n    foregroundSelectionFont: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.treeHeaderForegroundSelectionFont;\n        },\n        set: function(value) {\n            this.treeHeaderForegroundSelectionFont = value;\n        }\n    },\n    foregroundSelectionColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.treeHeaderForegroundSelectionColor;\n        },\n        set: function(value) {\n            this.treeHeaderForegroundSelectionColor = value;\n        }\n    },\n    renderer: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.isDataRow ? this.treeRenderer : this.grid.properties.renderer;\n        },\n        set: function(value) {\n            this.treeRenderer = value;\n        }\n    },\n    backgroundSelectionColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.treeHeaderBackgroundSelectionColor;\n        },\n        set: function(value) {\n            this.treeHeaderBackgroundSelectionColor = value;\n        }\n    },\n    columnAutosizing: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.treeColumnAutosizing;\n        },\n        set: function(value) {\n            this.treeColumnAutosizing = value;\n        }\n    },\n    columnAutosizingMax: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.treeColumnAutosizingMax;\n        },\n        set: function(value) {\n            this.treeColumnAutosizingMax = value;\n        }\n    }\n    //leftIcon: undefined\n};\n\ncreateColumnProperties.rowHeaderDescriptors = {\n    font: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.rowHeaderFont;\n        },\n        set: function(value) {\n            this.rowHeaderFont = value;\n        }\n    },\n    color: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.rowHeaderColor;\n        },\n        set: function(value) {\n            this.rowHeaderColor = value;\n        }\n    },\n    backgroundColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.rowHeaderBackgroundColor;\n        },\n        set: function(value) {\n            this.rowHeaderBackgroundColor = value;\n        }\n    },\n    foregroundSelectionFont: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.rowHeaderForegroundSelectionFont;\n        },\n        set: function(value) {\n            this.rowHeaderForegroundSelectionFont = value;\n        }\n    },\n    foregroundSelectionColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.rowHeaderForegroundSelectionColor;\n        },\n        set: function(value) {\n            this.rowHeaderForegroundSelectionColor = value;\n        }\n    },\n    backgroundSelectionColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.rowHeaderBackgroundSelectionColor;\n        },\n        set: function(value) {\n            this.rowHeaderBackgroundSelectionColor = value;\n        }\n    },\n    leftIcon: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            if (this.grid.properties.rowHeaderCheckboxes) {\n                var result;\n                if (this.isDataRow) {\n                    result = this.isRowSelected ? 'checked' : 'unchecked';\n                } else if (this.isHeaderRow) {\n                    result = this.allRowsSelected ? 'checked' : 'unchecked';\n                } else if (this.isFilterRow) {\n                    result = 'filter-off';\n                }\n                return result;\n            }\n        },\n        set: function(value) {\n            // replace self with a simple instance var\n            Object.defineProperty(this, 'leftIcon', {\n                configurable: true,\n                enumerable: true,\n                writable: true,\n                value: value\n            });\n        }\n    },\n    columnAutosizing: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.rowNumberAutosizing;\n        },\n        set: function(value) {\n            this.rowNumberAutosizing = value;\n        }\n    }\n};\n\ncreateColumnProperties.filterDescriptors = {\n    font: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.filterFont;\n        },\n        set: function(value) {\n            this.filterFont = value;\n        }\n    },\n    color: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.filterColor;\n        },\n        set: function(value) {\n            this.filterColor = value;\n        }\n    },\n    backgroundColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.filterBackgroundColor;\n        },\n        set: function(value) {\n            this.filterBackgroundColor = value;\n        }\n    },\n    foregroundSelectionColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.filterForegroundSelectionColor;\n        },\n        set: function(value) {\n            this.filterForegroundSelectionColor = value;\n        }\n    },\n    backgroundSelectionColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.filterBackgroundSelectionColor;\n        },\n        set: function(value) {\n            this.filterBackgroundSelectionColor = value;\n        }\n    },\n    halign: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.filterHalign;\n        },\n        set: function(value) {\n            this.filterHalign = value;\n        }\n    },\n    renderer: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.filterRenderer;\n        },\n        set: function(value) {\n            this.filterRenderer = value;\n        }\n    },\n    editor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.filterEditor;\n        },\n        set: function(value) {\n            this.filterEditor = value;\n        }\n    },\n    rightIcon: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            var result;\n            if (this.filterable) {\n                result = this.filter ? 'filter-on' : 'filter-off';\n            }\n            return result;\n        },\n        set: function(value) {\n            // replace self with a simple instance var\n            Object.defineProperty(this, 'rightIcon', {\n                configurable: true,\n                enumerable: true,\n                writable: true,\n                value: value\n            });\n        }\n    }\n};\n\ncreateColumnProperties.columnHeaderDescriptors = {\n    font: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderFont;\n        },\n        set: function(value) {\n            this.columnHeaderFont = value;\n        }\n    },\n    color: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderColor;\n        },\n        set: function(value) {\n            this.columnHeaderColor = value;\n        }\n    },\n    backgroundColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderBackgroundColor;\n        },\n        set: function(value) {\n            this.columnHeaderBackgroundColor = value;\n        }\n    },\n    foregroundSelectionFont: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderForegroundSelectionFont;\n        },\n        set: function(value) {\n            this.columnHeaderForegroundSelectionFont = value;\n        }\n    },\n    foregroundSelectionColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderForegroundSelectionColor;\n        },\n        set: function(value) {\n            this.columnHeaderForegroundSelectionColor = value;\n        }\n    },\n    backgroundSelectionColor: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderBackgroundSelectionColor;\n        },\n        set: function(value) {\n            this.columnHeaderBackgroundSelectionColor = value;\n        }\n    },\n    halign: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderHalign;\n        },\n        set: function(value) {\n            this.columnHeaderHalign = value;\n        }\n    },\n    format: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderFormat;\n        },\n        set: function(value) {\n            this.columnHeaderFormat = value;\n        }\n    },\n    renderer: {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            return this.columnHeaderRenderer;\n        },\n        set: function(value) {\n            this.columnHeaderRenderer = value;\n        }\n    },\n    leftIcon: { writable: true, value: undefined},\n    centerIcon: { writable: true, value: undefined},\n    rightIcon: { writable: true, value: undefined},\n};\n\n/**\n * Column.js mixes this module into its prototype.\n * @mixin\n */\nexports.mixin = {\n    createColumnProperties: createColumnProperties\n};\n","'use strict';\n\nvar cellEventProperties = Object.defineProperties({}, { // all props non-enumerable\n    /**\n     * The raw value of the cell, unformatted.\n     * @memberOf CellEvent#\n     */\n    value: {\n        get: function() { return this.subgrid.getValue(this.dataCell.x, this.dataCell.y); },\n        set: function(value) { this.subgrid.setValue(this.dataCell.x, this.dataCell.y, value); }\n    },\n\n    /**\n     * An object representing the whole data row, including hidden columns.\n     * @type {object}\n     * @memberOf CellEvent#\n     */\n    dataRow: {\n        get: function() { return this.subgrid.getRow(this.dataCell.y); }\n    },\n\n    /**\n     * The formatted value of the cell.\n     * @memberOf CellEvent#\n     */\n    formattedValue: {\n        get: function() { return this.grid.formatValue(this.properties.format, this.value); }\n    },\n\n    /**\n     * The bounds of the cell.\n     * @property {number} left\n     * @property {number} top\n     * @property {number} width\n     * @property {number} height\n     * @memberOf CellEvent#\n     */\n    bounds: { get: function() {\n        return this._bounds || (this._bounds = {\n            x: this.visibleColumn.left,\n            y: this.visibleRow.top,\n            width: this.visibleColumn.width,\n            height: this.visibleRow.height\n        });\n    } },\n\n    columnProperties: { get: function() {\n        var cp = this._columnProperties;\n        if (!cp) {\n            cp = this.column.properties;\n            if (!this.isDataColumn) {\n                // cp already set to cp.rowHeader or cp.treeHeader\n            } else if (this.isDataRow) {\n                // cp already set to basic props\n            } else if (this.isFilterRow) {\n                cp = cp.filterProperties;\n            } else { // unselected header, summary, etc., all have save look as unselected header\n                cp = cp.columnHeader;\n            }\n            this._columnProperties = cp;\n        }\n        return cp;\n    } },\n    cellOwnProperties: { get: function() {\n        // do not use for get/set prop because may return null; instead use .getCellProperty('prop') or .properties.prop (preferred) to get, setCellProperty('prop', value) to set\n        if (this._cellOwnProperties === undefined) {\n            this._cellOwnProperties = this.column.getCellOwnProperties(this.dataCell.y, this.subgrid);\n        }\n        return this._cellOwnProperties; // null return means there is no cell properties object\n    } },\n    /**\n     * @returns {string} Cell properties object if it exists, else the column properties object it would have as a prototype if did exist.\n     * @method\n     * @memberOf CellEvent#\n     */\n    properties: { get: function() {\n        return this.cellOwnProperties || this.columnProperties;\n    } },\n    /**\n     * @param {string} key - Property name.\n     * @returns {string} Property value.\n     * @method\n     * @memberOf CellEvent#\n     */\n    getCellProperty: { value: function(key) {\n        // included for completeness but `.properties[key]` is preferred\n        return this.properties[key];\n    } },\n    /**\n     * @param {string} key - Property name.\n     * @param {string} value - Property value.\n     * @method\n     * @memberOf CellEvent#\n     */\n    setCellProperty: { value: function(key, value) {\n        // do not use `.cellOwnProperties[key] = value` because object may be null (this method creates new object as needed)\n        this._cellOwnProperties = this.column.setCellProperty(this.dataCell.y, key, value, this.subgrid);\n    } },\n\n    rowOwnProperties: {\n        // undefined return means there is no row properties object\n        get: function() {\n            return this.behavior.getRowProperties(this, undefined, this.subgrid);\n        }\n    },\n    rowProperties: {\n        get: function() {\n            // use carefully! creates new object as needed; only use when object definitely needed: for setting prop with `.rowProperties[key] = value` or `Object.assign(.rowProperties, {...})`; use `rowOwnProperties`  to avoid creating a new object when object does not exist, or `getRowProperty(key)` for getting a property that may not exist\n            return this.behavior.getRowProperties(this, null, this.subgrid);\n        },\n        set: function(properties) {\n            // for resetting whole row properties object: `.rowProperties = {...}`\n            this.behavior.setRowProperties(this, properties, this.subgrid); // calls `stateChanged()`\n        }\n    },\n    getRowProperty: { value: function(key) {\n        // undefined return means there is no row properties object OR no such row property `[key]`\n        var rowProps = this.rowOwnProperties;\n        return rowProps && rowProps[key];\n    } },\n    setRowProperty: { value: function(key, value) {\n        // creates new object as needed\n        this.rowProperties[key] = value; // todo: call `stateChanged()` after refac-as-flags\n    } },\n\n    // special method for use by renderer which reuses cellEvent object for performance reasons\n    reset: { value: function(visibleColumn, visibleRow) {\n        // getter caches\n        this._columnProperties = undefined;\n        this._cellOwnProperties = undefined;\n        this._bounds = undefined;\n\n        // partial render support\n        this.snapshot = [];\n        this.minWidth = undefined;\n        // this.disabled = undefined;\n\n        this.visibleColumn = visibleColumn;\n        this.visibleRow = visibleRow;\n\n        this.subgrid = visibleRow.subgrid;\n\n        this.column = visibleColumn.column; // enumerable so will be copied to cell renderer object\n\n        this.gridCell.x = visibleColumn.columnIndex;\n        this.gridCell.y = visibleRow.index;\n\n        this.dataCell.x = this.column && this.column.index;\n        this.dataCell.y = visibleRow.rowIndex;\n    } },\n\n    /**\n     * Set up this `CellEvent` instance to point to the cell at the given grid coordinates.\n     * @desc If the requested cell is not be visible (due to being scrolled out of view or outside the bounds of the rendered grid), the instance is not reset.\n     * @param {number} gridC - Horizontal grid cell coordinate adjusted for horizontal scrolling after fixed columns.\n     * @param {number} gridY - Raw vertical grid cell coordinate.\n     * @returns {boolean} Visibility.\n     * @method\n     * @memberOf CellEvent#\n     */\n    resetGridCY: { value: function(gridC, gridY) {\n        var vr, vc, visible = (\n            (vc = this.renderer.getVisibleColumn(gridC)) &&\n            (vr = this.renderer.getVisibleRow(gridY))\n        );\n        if (visible) { this.reset(vc, vr); }\n        return visible;\n    } },\n\n    /**\n     * Set up this `CellEvent` instance to point to the cell at the given grid coordinates.\n     * @desc If the requested cell is not be visible (due to being scrolled out of view or outside the bounds of the rendered grid), the instance is not reset.\n     * @param {number} gridX - Raw horizontal grid cell coordinate.\n     * @param {number} gridY - Raw vertical grid cell coordinate.\n     * @returns {boolean} Visibility.\n     * @method\n     * @memberOf CellEvent#\n     */\n    resetGridXY: { value: function(gridX, gridY) {\n        var vr, vc, visible = (\n            (vc = this.renderer.visibleColumns[gridX]) &&\n            (vr = this.renderer.getVisibleRow(gridY))\n        );\n        if (visible) { this.reset(vc, vr); }\n        return visible;\n    } },\n\n    /**\n     * @summary Set up this `CellEvent` instance to point to the cell at the given data coordinates.\n     * @desc If the requested cell is not be visible (due to being scrolled out of view), the instance is not reset.\n     * @param {number} dataX - Horizontal data cell coordinate.\n     * @param {number} dataY - Vertical data cell coordinate.\n     * @param {DataModel} [subgrid=this.behavior.subgrids.data]\n     * @returns {boolean} Visibility.\n     * @method\n     * @memberOf CellEvent#\n     */\n    resetDataXY: { value: function(dataX, dataY, subgrid) {\n        var vr, vc, visible = (\n            (vc = this.renderer.getVisibleDataColumn(dataX)) &&\n            (vr = this.renderer.getVisibleDataRow(dataY, subgrid))\n        );\n        if (visible) { this.reset(vc, vr); }\n        return visible;\n    } },\n\n    /**\n     * Set up this `CellEvent` instance to point to the cell at the given grid column and data row coordinates.\n     * @desc If the requested cell is not be visible (due to being scrolled out of view or outside the bounds of the rendered grid), the instance is not reset.\n     * @param {number} gridX - Horizontal grid cell coordinate (adjusted for horizontal scrolling after fixed columns).\n     * @param {number} dataY - Vertical data cell coordinate.\n     * @param {DataModel} [subgrid=this.behavior.dataModel]\n     * @param {boolean} [useAllCells] - Search in all rows and columns instead of only rendered ones.\n     * @returns {boolean} Visibility.\n     * @method\n     * @memberOf CellEvent#\n     */\n    resetGridXDataY: { value: function(gridX, dataY, subgrid, useAllCells) {\n        var visible, vc, vr;\n\n        if (useAllCells) {\n            // When expanding selections larger than the viewport, the origin/corner\n            // points may not be rendered and would normally fail to reset cell's position.\n            // Mock column and row objects for this.reset() to use:\n            vc = {\n                column: this.behavior.getColumn(gridX),\n                columnIndex: gridX\n            };\n            vr = {\n                subgrid: subgrid || this.behavior.dataModel,\n                rowIndex: dataY\n            };\n            visible = true;\n        } else {\n            visible = (\n                (vc = this.renderer.getVisibleColumn(gridX)) &&\n                (vr = this.renderer.getVisibleDataRow(dataY, subgrid))\n            );\n        }\n\n        if (visible) {\n            this.reset(vc, vr);\n        }\n\n        return visible && this;\n    } },\n\n    /**\n     * Copy self with or without own properties\n     * @param {boolan} [assign=false] - Copy the own properties to the clone.\n     * @returns {CellEvent}\n     * @method\n     * @memberOf CellEvent#\n     */\n    clone: { value: function(assign) {\n        var cellEvent = new this.constructor;\n\n        cellEvent.resetGridXY(this.visibleColumn.index, this.visibleRow.index);\n\n        if (assign) {\n            // copy own props\n            Object.assign(cellEvent, this);\n        }\n\n        return cellEvent;\n    } },\n\n    editPoint: {\n        get: function() {\n            throw 'The `.editPoint` property is no longer available as of v1.2.10. Use the following coordinates instead:\\n' +\n            '`.gridCell.x` - The active column index. (Adjusted for column scrolling after fixed columns.)\\n' +\n            '`.gridCell.y` - The vertical grid coordinate. (Unaffected by row scrolling.)\\n' +\n            '`.dataCell.x` - The data model\\'s column index. (Unaffected by column scrolling.)\\n' +\n            '`.dataCell.y` - The data model\\'s row index. (Adjusted for data row scrolling after fixed rows.)\\n';\n        }\n    },\n\n    mousePointInClickRect: {\n        get: function() {\n            var clickRect = 'clickRect' in this ? this.clickRect : this.properties.clickRect;\n            if (!clickRect) {\n                return true;\n            } else if (typeof clickRect.contains === 'function') {\n                return clickRect.contains(this.mousePoint);\n            } else {\n                return (\n                    clickRect.x <= this.mousePoint.x && this.mousePoint.x < clickRect.x + clickRect.width &&\n                    clickRect.y <= this.mousePoint.y && this.mousePoint.y < clickRect.y + clickRect.height\n                );\n            }\n        }\n    },\n\n    /** \"Visible\" means scrolled into view.\n     * @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isRowVisible:    { get: function() { return !!this.visibleRow; } },\n    /** \"Visible\" means scrolled into view.\n     * @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isColumnVisible: { get: function() { return !!this.visibleColumn; } },\n    /** \"Visible\" means scrolled into view.\n     * @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isCellVisible:   { get: function() { return this.isRowVisible && this.isColumnVisible; } },\n\n\n    /** A data row is any row in the data subgrid; all other rows (headers, footers, _etc._) are not data rows.\n     * @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isDataRow:    { get: function() { return this.subgrid.isData; } },\n    /** A data column is any column that is not the row number column or the tree column.\n     * @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isDataColumn: { get: function() { return this.gridCell.x >= 0; } },\n    /** A data cell is a cell in both a data row and a data column.\n     * @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isDataCell:   { get: function() { return this.isDataRow && this.isDataColumn; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isRowSelected:    { get: function() { return this.isDataRow && this.selectionModel.isRowSelected(this.dataCell.y); } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isColumnSelected: { get: function() { return this.isDataColumn && this.selectionModel.isColumnSelected(this.gridCell.x); } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isCellSelected:   { get: function() { return this.selectionModel.isCellSelected(this.gridCell.x, this.dataCell.y); } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isRowHovered:    { get: function() { return this.grid.canvas.hasMouse && this.isDataRow && this.grid.hoverCell && this.grid.hoverCell.y === this.gridCell.y; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isColumnHovered: { get: function() { return this.grid.canvas.hasMouse && this.isDataColumn && this.grid.hoverCell && this.grid.hoverCell.x === this.gridCell.x; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isCellHovered:   { get: function() { return this.isRowHovered && this.isColumnHovered; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isRowFixed:    { get: function() { return this.isDataRow && this.dataCell.y < this.grid.properties.fixedRowCount; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isColumnFixed: { get: function() { return this.isDataColumn && this.gridCell.x < this.grid.properties.fixedColumnCount; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isCellFixed:   { get: function() { return this.isRowFixed && this.isColumnFixed; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isHandleColumn: { get: function() { return this.gridCell.x === this.behavior.rowColumnIndex && this.grid.properties.showRowNumbers; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isHandleCell:   { get: function() { return this.isHandleColumn && this.isDataRow; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isTreeColumn: { get: function() { return this.gridCell.x === this.behavior.treeColumnIndex; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isHeaderRow:    { get: function() { return this.subgrid.isHeader; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isHeaderHandle: { get: function() { return this.isHeaderRow && this.isHandleColumn; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isHeaderCell:   { get: function() { return this.isHeaderRow && this.isDataColumn; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isFilterRow:    { get: function() { return this.subgrid.isFilter; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isFilterHandle: { get: function() { return this.isFilterRow && this.isHandleColumn; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isFilterCell:   { get: function() { return this.isFilterRow && this.isDataColumn; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isSummaryRow:    { get: function() { return this.subgrid.isSummary; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isSummaryHandle: { get: function() { return this.isSummaryRow && this.isHandleColumn; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isSummaryCell:   { get: function() { return this.isSummaryRow && this.isDataColumn; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isTopTotalsRow:    { get: function() { return this.subgrid === this.behavior.subgrids.lookup.topTotals; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isTopTotalsHandle: { get: function() { return this.isTopTotalsRow && this.isHandleColumn; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isTopTotalsCell:   { get: function() { return this.isTopTotalsRow && this.isDataColumn; } },\n\n\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isBottomTotalsRow:    { get: function() { return this.subgrid === this.behavior.subgrids.lookup.bottomTotals; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isBottomTotalsHandle: { get: function() { return this.isBottomTotalsRow && this.isHandleColumn; } },\n    /** @type {boolean}\n     * @memberOf CellEvent#\n     */\n    isBottomTotalsCell:   { get: function() { return this.isBottomTotalsRow && this.isDataColumn; } },\n\n    $$CLASS_NAME: { value: 'CellEvent' }\n});\n\nvar Point = require('rectangular').Point;\n\n/**\n * Variation of `rectangular.Point` but with writable `x` and `y`\n * @constructor\n */\nfunction WritablePoint(x, y) {\n    // skip x and y initialization here for performance\n    // because typically reset after instantiation\n}\n\nWritablePoint.prototype = Point.prototype;\n\n\nvar writableDescriptor = { writable: true };\nvar enumerableDescriptor = { writable: true, enumerable: true };\n\n/** @typedef {WritablePoint} dataCellCoords\n * @property {number} x - The data model's column index, unaffected by column scrolling; _i.e.,_\n * an index suitable for dereferencing the column object to which the cell belongs via {@link Behavior#getColumn}.\n * @property {number} y - The data model's row index, adjusted for data row scrolling after fixed rows.\n */\n\n/** @typedef {WritablePoint} gridCellCoords\n * @property {number} x - The active column index, adjusted for column scrolling after fixed columns; _i.e.,_\n * an index suitable for dereferencing the column object to which the cell belongs via {@link Behavior#getActiveColumn}.\n * @property {number} y - The vertical grid coordinate, unaffected by subgrid, row scrolling, and fixed rows.\n */\n\n/**\n * @name cellEventFactory\n *\n * @summary Create a custom `CellEvent` class.\n *\n * @desc Create a custom definition of `CellEvent` for each grid instance, setting the `grid`, `behavior`, and `dataModel` properties on the prototype. As this happens once per grid instantiation, it avoids having to perform this set up work on every `CellEvent` instantiation.\n *\n * @param {HyperGrid} grid\n *\n * @returns {function}\n */\nfunction factory(grid) {\n\n    /**\n     * @summary Create a new CellEvent object.\n     *\n     * @classdesc `CellEvent` is a very low-level object that needs to be super-efficient. JavaScript objects are well known to be light weight in general, but at this level we need to be careful.\n     *\n     * These objects were originally only being created on mouse events. This was no big deal as mouse events are few and far between. However, as of v1.2.0, the renderer now also creates one for each visible cell on each and every grid paint.\n     *\n     * For this reason, to maintain performance, each grid gets a custom definition of `CellEvent`, created by this class factory, with the following optimizations:\n     *\n     * * Use of `extend-me` is avoided because its `initialize` chain is a bit too heavy here.\n     * * Custom versions of `CellEvent` for each grid lightens the load on the constructor.\n     *\n     * @desc All own enumerable properties are mixed into cell editor:\n     * * Includes `this.column` defined by constructor (as enumerable).\n     * * Excludes all other properties defined by constructor and prototype, all of which are non-enumerable.\n     * * Any additional (enumerable) members mixed in by application's `getCellEditorAt` override.\n     *\n     * Including the params calls {@link CellEvent#resetGridCY resetGridCY(gridX, gridY)}.\n     * Alternatively, instantiate without params and/or later call one of these:\n     * * {@link CellEvent#resetGridXY resetGridXY(...)}\n     * * {@link CellEvent#resetDataXY resetDataXY(...)}\n     * * {@link CellEvent#resetGridXDataY resetGridXDataY(...)}\n     *\n     * @param {number} [gridX] - grid cell coordinate (adjusted for horizontal scrolling after fixed columns).\n     * @param {number} [gridY] - grid cell coordinate, adjusted (adjusted for vertical scrolling if data subgrid)\n     * @constructor CellEvent\n     */\n    function CellEvent(gridX, gridY) {\n        // remaining instance vars are non-enumerable so `CellEditor` constructor won't mix them in (for mustache use).\n        Object.defineProperties(this, {\n            /**\n             * @name visibleColumn\n             * @type {visibleColumnArray}\n             * @memberOf CellEvent#\n             */\n            visibleColumn: writableDescriptor,\n\n            /**\n             * @name visibleRow\n             * @type {visibleRowArray}\n             * @memberOf CellEvent#\n             */\n            visibleRow: writableDescriptor,\n\n            /**\n             * @name subgrid\n             * @type {DataModel}\n             * @memberOf CellEvent#\n             */\n            subgrid: writableDescriptor,\n\n            /**\n             * @name gridCell\n             * @type {gridCellCoords}\n             * @memberOf CellEvent#\n             */\n            gridCell: {\n                value: new WritablePoint\n            },\n\n            /**\n             * @name dataCell\n             * @type {dataCellCoords}\n             * @memberOf CellEvent#\n             */\n            dataCell: {\n                value: new WritablePoint\n            },\n\n            /**\n             * A reference to the cell's {@link Column} object.\n             *\n             * This property is enumerable so that it will be copied to cell editor on {@link CellEditor} instantiation.\n             * @name column\n             * @type {Column}\n             * @memberOf CellEvent#\n             */\n            column: enumerableDescriptor,\n\n            // getter caches\n            _columnProperties: writableDescriptor,\n            _cellOwnProperties: writableDescriptor,\n            _bounds: writableDescriptor,\n\n            // Following supports cell renderers' \"partial render\" capability:\n            snapshot: writableDescriptor,\n            minWidth: writableDescriptor,\n            disabled: writableDescriptor\n        });\n\n        if (arguments.length) {\n            this.resetGridCY(gridX, gridY);\n        }\n    }\n\n    CellEvent.prototype = Object.create(cellEventProperties, {\n        constructor: { value: CellEvent },\n        grid: { value: grid },\n        renderer: { value: grid.renderer },\n        selectionModel: { value: grid.selectionModel },\n        behavior: { value: grid.behavior },\n        dataModel: { value: grid.behavior.dataModel }\n    });\n\n    return CellEvent;\n}\n\nmodule.exports = factory;\n","'use strict';\n\n/**\n * @module fields\n */\n\nvar Decorator = require('synonomous');\n\nvar REGEXP_META_PREFIX = /^__/; // starts with double underscore\n\nvar fields = {\n\n    /**\n     * Decorate given grid schema with:\n     * * Synonym(s) based on `name` property of each element:\n     * @param {columnSchema[]} schema\n     * @returns {columnSchema[]} The given schema.\n     * @memberOf module:fields\n     */\n    decorateSchema: function(schema) {\n        var decorator = new Decorator;\n\n        decorator.decorateArray(schema);\n\n        return schema;\n    },\n\n    /**\n     * Decorate each element of schema with:\n     * * `header` property (when undefined)\n     * @param {columnSchema[]} schema\n     * @param {string} [headerifierName] - Name of string transformer to use to generate headers (from column names) for those columns without defined headers. If omitted or undefined, no decoration takes place.\n     * @returns {columnSchema[]} The given schema.\n     * @memberOf module:fields\n     */\n    decorateColumnSchema: function(schema, headerifierName) {\n        var decorator = new Decorator;\n\n        decorator.transformations = {};\n        decorator.transformations[headerifierName] = 'header';\n\n        decorator.decorateArray(schema);\n\n        return schema;\n    },\n\n    /**\n     * @summary Normalizes and returns given schema array.\n     * @desc For each \"column schema\" (element of schema array):\n     *\n     * 1. Objectify column schemata<br>\n     * Ensures each column schema is an object with a `name` property.\n     * 2. Index schema schemata<br>\n     * Adds an `index` property to each column schema element.\n     * 3. Decorates schema<br>\n     * Decorates the schema array object itself with column names and column name synonyms. This is helpful for looking up column schema by column name rather than by index. To get the index of a column when you know the name:\n     * ```javascript\n     * var schema = dataModel.getSchema();\n     * var columnName = 'foo';\n     * var columnIndex = schema[columnName].index;\n     * ```\n     * 4. Adds missing headers.\n     *\n     * This function is safe to call repeatedly.\n     *\n     * Called from {@link Behavior#createColumns createColumns} (called on receipt of the `fin-hypergrid-schema-loaded` event (dispatched by data model implementation of `setSchema`)).\n     *\n     * @param {rawColumnSchema[]} schema\n     * @returns {columnSchema[]}\n     * @memberOf module:fields\n     */\n    normalizeSchema: function(schema) {\n        // Make sure each element of `schema` is an object with a `name` property.\n        schema.forEach(function(columnSchema, index) {\n            if (typeof columnSchema === 'string') {\n                schema[index] = {\n                    name: columnSchema\n                };\n            }\n        });\n\n        // Remove all meta data columns from schema\n        for (var i = schema.length; i--;) {\n            if (REGEXP_META_PREFIX.test(schema[i].name)) {\n                schema.splice(i, 1);\n            }\n        }\n\n        // Set `index` property.\n        schema.forEach(function(columnSchema, index) {\n            columnSchema.index = index;\n        });\n\n        return schema;\n    },\n\n    /**\n     * @summary Get keys of given hash with \"metakeys\" filtered out.\n     * @desc Metakeys are keys beginning with a double-underscore.\n     *\n     * DO NOT REMOVE -- Not used in fin-hypergrid/core but has legacy exposure.\n     * @param {object} hash\n     * @returns {string[]} Member names from `hash` that do _not_ begin with double-underscore.\n     * @memberOf module:fields\n     */\n    getFieldNames: function(hash) {\n        return Object.keys(hash || {}).filter(function(fieldName) {\n            return !REGEXP_META_PREFIX.test(fieldName);\n        });\n    },\n\n    /**\n     * Used by {@link module:fields.getSchema getSchema}.\n     * Override as needed for different titleization flavor.\n     * @param {string} key\n     * @returns {string} Title version of key (for use as column header).\n     * @memberOf module:fields\n     */\n    titleize: require('synonomous/transformers').toTitle,\n\n    /**\n     * @summary Returns a schema derived from given sample data row with \"metakeys\" filtered out.\n     * @desc Metakeys are keys beginning with a double-underscore.\n     *\n     * DO NOT REMOVE -- Not used in fin-hypergrid/core but has legacy exposure.\n     * @param {dataRowObject[]} [data]\n     * @returns {columnSchema[]} Array object also decroated with synonyms for elements.\n     * @memberOf module:fields\n     */\n    getSchema: function(data) {\n        var dataRow = data && data[0] || {},\n            schema = fields.getFieldNames(dataRow);\n\n        fields.normalizeSchema(schema);\n        fields.decorateSchema(schema);\n        fields.decorateColumnSchema(schema, 'toTitle');\n\n        return schema;\n    }\n};\n\nmodule.exports = fields;\n","'use strict';\n\nvar Registry = require('../lib/Registry');\n\n\n/**\n * @classdesc Registry of feature constructors.\n * @param {boolean} [privateRegistry=false] - This instance will use a private registry.\n * @constructor\n */\nvar Features = Registry.extend('Features', {\n\n    BaseClass: require('./Feature'), // abstract base class\n\n    initialize: function() {\n        // preregister the standard cell renderers\n        this.add(Features.CellClick);\n        this.add(Features.CellEditing);\n        this.add(Features.CellSelection);\n        this.add(Features.ColumnMoving);\n        this.add(Features.ColumnResizing);\n        this.add(Features.ColumnSelection);\n        this.add(Features.ColumnSorting);\n        this.add(Features.Filters);\n        this.add(Features.KeyPaging);\n        this.add(Features.OnHover);\n        // this.add(require('./RowResizing'));\n        this.add(Features.RowSelection);\n        this.add(Features.ThumbwheelScrolling);\n    }\n\n});\n\n\n// Following shared props provided solely in support of build file usage, e.g., `fin.Hypergrid.features.yada`,\n// presumably for overriding built-in features, and are not meant to be used elsewhere.\n\nFeatures.BaseClass = require('./Feature'); // abstract base class\nFeatures.CellClick = require('./CellClick');\nFeatures.CellEditing = require('./CellEditing');\nFeatures.CellSelection = require('./CellSelection');\nFeatures.ColumnMoving = require('./ColumnMoving');\nFeatures.ColumnResizing = require('./ColumnResizing');\nFeatures.ColumnSelection = require('./ColumnSelection');\nFeatures.ColumnSorting = require('./ColumnSorting');\nFeatures.Filters = require('./Filters');\nFeatures.KeyPaging = require('./KeyPaging');\nFeatures.OnHover = require('./OnHover');\n// Features.RowResizing = require('./RowResizing');\nFeatures.RowSelection = require('./RowSelection');\nFeatures.ThumbwheelScrolling = require('./ThumbwheelScrolling');\n\n\nmodule.exports = new Features;\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n * @extends Feature\n */\nvar CellClick = Feature.extend('CellClick', {\n\n    handleMouseMove: function(grid, event) {\n        var link = event.properties.link,\n            isActionableLink = link && typeof link !== 'boolean'; // actionable with truthy other than `true`\n\n        this.cursor = isActionableLink ? 'pointer' : null;\n\n        if (this.next) {\n            this.next.handleMouseMove(grid, event);\n        }\n    },\n\n    /**\n     * @param {Hypergrid} grid\n     * @param {CellEvent} event - the event details\n     * @memberOf CellClick#\n     */\n    handleClick: function(grid, event) {\n        var consumed = (event.isDataCell || event.isTreeColumn) && (\n            this.openLink(grid, event) !== undefined ||\n            grid.cellClicked(event)\n        );\n\n        if (!consumed && this.next) {\n            this.next.handleClick(grid, event);\n        }\n    },\n\n    /**\n     * @summary Open the cell's URL.\n     *\n     * @desc The URL is found in the cell's {@link module:defaults.link|link} property, which serves two functions:\n     * 1. **Renders as a link.** When truthy causes {@link SimpleCell} cell renderer to render the cell underlined with {@link module:defaults.linkColor|linkColor}. (See also {@link module:defaults.linkOnHover|linkOnHover} and {@link module:defaults.linkColorOnHover|linkColorOnHover}.) Therefore, setting this property to `true` will render as a link, although clicking on it will have no effect. This is useful if you wish to handle the click yourself by attaching a `'fin-click'` listener to your hypergrid.\n     * 2. **Fetch the URL.** The value of the link property is interpreted as per {@link module:defaults.link|link}.\n     * 3. **Decorate the URL.** The cell name (_i.e.,_ the data column name) and cell value are merged into the URL wherever the respective substrings `'%name'` and `'%value'` are found. For example, if the column name is \"age\" and the cell value is 6 (or a function returning 25), and the link is `'http://www.abc.com?%name=%value'`, then the actual link (first argument given to `grid.windowOpen`) would be `'http://www.abc.com?age=25'`.\n     * 4. **Open the URL.** The link is then opened by {@link Hypergrid#windowOpen|grid.windowOpen}. If `link` is an array, it is \"applied\" to `grid.windowOpen` in its entirety; otherwise, `grid.windowOpen` is called with the link as the first argument and {@link module:defaults.linkTarget|linkTarget} as the second.\n     * 5. **Decorate the link.** On successful return from `windowOpen()`, the text is colored as \"visited\" as per the cell's {@link module:defaults.linkVisitedColor|linkVisitedColor} property (by setting the cell's `linkColor` property to its `linkVisitedColor` property).\n\n     * @param {Hypergrid} grid\n     * @param {CellEvent} cellEvent - Event details.\n     *\n     * @returns {boolean|window|null|undefined} One of:\n     *\n     * | Value | Meaning |\n     * | :---- | :------ |\n     * | `undefined` | no link to open |\n     * | `null` | `grid.windowOpen` failed to open a window |\n     * | _otherwise_ | A `window` reference returned by a successful call to `grid.windowOpen`. |\n     *\n     * @memberOf CellClick#\n     */\n    openLink: function(grid, cellEvent) {\n        var result, url,\n            dataRow = cellEvent.dataRow,\n            config = Object.create(cellEvent.properties, { dataRow: { value: dataRow } }),\n            value = config.exec(cellEvent.value),\n            linkProp = cellEvent.properties.link,\n            isArray = linkProp instanceof Array,\n            link = isArray ? linkProp[0] : linkProp;\n\n        // STEP 2: Fetch the URL\n        switch (typeof link) {\n            case 'string':\n                if (link === '*') {\n                    url = value;\n                } else if (/^\\w+$/.test(link)) {\n                    url = dataRow[link];\n                }\n                break;\n\n            case 'function':\n                url = link(cellEvent);\n                break;\n        }\n\n        if (url) {\n            // STEP 3: Decorate the URL\n            url = url.toString().replace(/%name/g, config.name).replace(/%value/g, value);\n\n            // STEP 4: Open the URL\n            if (isArray) {\n                linkProp = linkProp.slice();\n                linkProp[0] = url;\n                result = grid.windowOpen.apply(grid, linkProp);\n            } else {\n                result = grid.windowOpen(url, cellEvent.properties.linkTarget);\n            }\n        }\n\n        // STEP 5: Decorate the link as \"visited\"\n        if (result) {\n            cellEvent.setCellProperty('linkColor', grid.properties.linkVisitedColor);\n            grid.renderer.resetCellPropertiesCache(cellEvent);\n            grid.repaint();\n        }\n\n        return result;\n    }\n\n});\n\nmodule.exports = CellClick;\n","'use strict';\n\nvar Feature = require('./Feature');\nvar CellEditor = require('../cellEditors/CellEditor');\n\n/**\n * @constructor\n * @extends Feature\n */\nvar CellEditing = Feature.extend('CellEditing', {\n\n    /**\n     * @memberOf CellEditing.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleClick: function(grid, event) {\n        edit.call(this, grid, event);\n    },\n\n    /**\n     * @memberOf CellEditing.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleDoubleClick: function(grid, event) {\n        edit.call(this, grid, event, true);\n    },\n\n    /**\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @memberOf KeyPaging.prototype\n     */\n    handleKeyDown: function(grid, event) {\n        var char, isVisibleChar, isDeleteChar, editor, cellEvent;\n\n        if (\n            (cellEvent = grid.getGridCellFromLastSelection()) &&\n            cellEvent.properties.editOnKeydown &&\n            !grid.cellEditor &&\n            (\n                (char = event.detail.char) === 'F2' ||\n                (isVisibleChar = char.length === 1 && !(event.detail.meta || event.detail.ctrl)) ||\n                (isDeleteChar = char === 'DELETE' || char === 'BACKSPACE')\n            )\n        ) {\n            editor = grid.onEditorActivate(cellEvent);\n\n            if (editor instanceof CellEditor) {\n                if (isVisibleChar) {\n                    editor.input.value = char;\n                } else if (isDeleteChar) {\n                    editor.setEditorValue('');\n                }\n                event.detail.primitiveEvent.preventDefault();\n            }\n        } else if (this.next) {\n            this.next.handleKeyDown(grid, event);\n        }\n    }\n\n});\n\nfunction edit(grid, event, onDoubleClick) {\n    if (\n        event.isDataCell &&\n        !(event.getCellProperty('editOnDoubleClick') ^ onDoubleClick) // both same (true or falsy)?\n    ) {\n        grid.onEditorActivate(event);\n    }\n\n    if (this.next) {\n        this.next[onDoubleClick ? 'handleDoubleClick' : 'handleClick'](grid, event);\n    }\n}\n\nmodule.exports = CellEditing;\n","/* eslint-env browser */\n\n/** @module effects */\n\n/** @typedef {function} effectFunction\n * @desc Element to perform transitions upon is `options.el` if defined or `this.el`.\n * @param {object} [options]\n * @param {HTMLElement} [options.el=this.el]\n * @param {function} [options.callback] Function to call at conclusion of transitions.\n * @param {string} [options.duration='0.065s'] - Duration of each transition.\n * @param {object} [options.styles=defaultGlowerStyles] - Hash of CSS styles and values to transition. (For {@link effects~glower|glower} only.\n */\n\n'use strict';\n\n/**\n * Shake element back and fourth a few times as if to say, \"Nope!\"\n * @type {effectFunction}\n * @memberOf module:effects\n */\nexports.shaker = function(options) {\n    options = options || {};\n    var context = this,\n        el = options.el || context.el,\n        duration = options.duration || '0.065s',\n        computedStyle = window.getComputedStyle(el),\n        transitions = computedStyle.transition.split(','),\n        position = computedStyle.position,\n        x = parseInt(computedStyle.left),\n        dx = -3,\n        shakes = 6;\n\n    transitions.push('left ' + duration);\n    el.style.transition = transitions.join(',');\n    el.addEventListener('transitionend', shaker);\n    shaker();\n    function shaker(event) {\n        if (!event || event.propertyName === 'left') {\n            el.style.left = x + dx + 'px';\n            if (!shakes--) {\n                el.removeEventListener('transitionend', shaker);\n                transitions.pop();\n                el.style.transition = transitions.join(',');\n                el.style.position = position;\n                if (options.callback) {\n                    options.callback.call(context, options);\n                }\n            }\n            dx = shakes ? -dx : 0;\n        }\n    }\n};\n\nvar defaultGlowerStyles = {\n    'background-color': 'yellow',\n    'box-shadow': '0 0 10px red'\n};\n\n/**\n * Transition styles on element for a moment and revert as if to say, \"Whoa!.\"\n * @type {effectFunction}\n * @memberOf module:effects\n */\nexports.glower = function(options) {\n    options = options || {};\n    var context = this,\n        el = options.el || context.el,\n        duration = options.duration || '0.25s',\n        styles = options.styles || defaultGlowerStyles,\n        values = styles.length,\n        computedStyle = window.getComputedStyle(el),\n        styleWas = {},\n        transition = computedStyle.transition,\n        transitions = transition.split(',');\n\n    Object.keys(styles).forEach(function(style) {\n        styleWas[style] = {\n            style: computedStyle[style],\n            undo: true\n        };\n        transitions.push(style + ' ' + duration);\n    });\n\n    el.style.transition = transitions.join(',');\n    el.addEventListener('transitionend', glower);\n    Object.keys(styles).forEach(function(style) {\n        el.style[style] = styles[style];\n    });\n\n    function glower(event) {\n        var was = styleWas[event.propertyName];\n        if (was.undo) {\n            el.style[event.propertyName] = was.style;\n            was.undo = false;\n        } else if (!--values) {\n            el.removeEventListener('transitionend', glower);\n            el.style.transition = transition;\n            if (options.callback) {\n                options.callback.call(context, options);\n            }\n        }\n    }\n};\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n * @extends Feature\n */\nvar CellSelection = Feature.extend('CellSelection', {\n\n    /**\n     * The pixel location of the mouse pointer during a drag operation.\n     * @type {Point}\n     * @memberOf CellSelection.prototype\n     */\n    currentDrag: null,\n\n    /**\n     * the cell coordinates of the where the mouse pointer is during a drag operation\n     * @type {Object}\n     * @memberOf CellSelection.prototype\n     */\n    lastDragCell: null,\n\n    /**\n     * a millisecond value representing the previous time an autoscroll started\n     * @type {number}\n     * @default 0\n     * @memberOf CellSelection.prototype\n     */\n    sbLastAuto: 0,\n\n    /**\n     * a millisecond value representing the time the current autoscroll started\n     * @type {number}\n     * @default 0\n     * @memberOf CellSelection.prototype\n     */\n    sbAutoStart: 0,\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseUp: function(grid, event) {\n        if (this.dragging) {\n            this.dragging = false;\n        }\n        if (this.next) {\n            this.next.handleMouseUp(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDown: function(grid, event) {\n        var dx = event.gridCell.x,\n            dy = event.dataCell.y,\n            isSelectable = grid.behavior.getCellProperty(event.dataCell.x, event.gridCell.y, 'cellSelection');\n\n        if (isSelectable && event.isDataCell && !event.primitiveEvent.detail.isRightClick) {\n            var dCell = grid.newPoint(dx, dy),\n                primEvent = event.primitiveEvent,\n                keys = primEvent.detail.keys;\n            this.dragging = true;\n            this.extendSelection(grid, dCell, keys);\n        } else if (this.next) {\n            this.next.handleMouseDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDrag: function(grid, event) {\n        if (this.dragging && grid.properties.cellSelection && !event.primitiveEvent.detail.isRightClick) {\n            this.currentDrag = event.primitiveEvent.detail.mouse;\n            this.lastDragCell = grid.newPoint(event.gridCell.x, event.dataCell.y);\n            this.checkDragScroll(grid, this.currentDrag);\n            this.handleMouseDragCellSelection(grid, this.lastDragCell, event.primitiveEvent.detail.keys);\n        } else if (this.next) {\n            this.next.handleMouseDrag(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleKeyDown: function(grid, event) {\n        var detail = event.detail,\n            cellEvent = grid.getGridCellFromLastSelection(true),\n            navKey = cellEvent && (\n                cellEvent.properties.mappedNavKey(detail.char, detail.ctrl) ||\n                cellEvent.properties.navKey(detail.char, detail.ctrl)\n            ),\n            handler = this['handle' + navKey];\n\n\n        // STEP 1: Move the selection\n        if (handler) {\n            handler.call(this, grid, detail);\n\n            // STEP 2: Open the cell editor at the new position if `editable` AND edited cell had `editOnNextCell`\n            if (cellEvent.properties.editOnNextCell) {\n                grid.renderer.computeCellsBounds(true); // moving selection may have auto-scrolled\n                cellEvent = grid.getGridCellFromLastSelection(); // new cell\n                grid.editAt(cellEvent); // succeeds only if `editable`\n            }\n\n            // STEP 3: If editor not opened on new cell, take focus\n            if (!grid.cellEditor) {\n                grid.takeFocus();\n            }\n        } else if (this.next) {\n            this.next.handleKeyDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc Handle a mousedrag selection.\n     * @param {Hypergrid} grid\n     * @param {Object} mouse - the event details\n     * @param {Array} keys - array of the keys that are currently pressed down\n     */\n    handleMouseDragCellSelection: function(grid, gridCell, keys) {\n        var x = Math.max(0, gridCell.x),\n            y = Math.max(0, gridCell.y),\n            previousDragExtent = grid.getDragExtent(),\n            mouseDown = grid.getMouseDown(),\n            newX = x - mouseDown.x,\n            newY = y - mouseDown.y;\n\n        if (previousDragExtent.x === newX && previousDragExtent.y === newY) {\n            return;\n        }\n\n        grid.clearMostRecentSelection();\n\n        grid.select(mouseDown.x, mouseDown.y, newX, newY);\n        grid.setDragExtent(grid.newPoint(newX, newY));\n\n        grid.repaint();\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc this checks while were dragging if we go outside the visible bounds, if so, kick off the external autoscroll check function (above)\n     * @param {Hypergrid} grid\n     * @param {Object} mouse - the event details\n     */\n    checkDragScroll: function(grid, mouse) {\n        if (!grid.properties.scrollingEnabled) {\n            return;\n        }\n        var b = grid.getDataBounds();\n        var inside = b.contains(mouse);\n        if (inside) {\n            if (grid.isScrollingNow()) {\n                grid.setScrollingNow(false);\n            }\n        } else if (!grid.isScrollingNow()) {\n            grid.setScrollingNow(true);\n            this.scrollDrag(grid);\n        }\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc this function makes sure that while we are dragging outside of the grid visible bounds, we srcroll accordingly\n     * @param {Hypergrid} grid\n     */\n    scrollDrag: function(grid) {\n        if (!grid.isScrollingNow()) {\n            return;\n        }\n\n        var dragStartedInHeaderArea = grid.isMouseDownInHeaderArea(),\n            lastDragCell = this.lastDragCell,\n            b = grid.getDataBounds(),\n\n            xOffset = 0,\n            yOffset = 0,\n\n            numFixedColumns = grid.getFixedColumnCount(),\n            numFixedRows = grid.getFixedRowCount(),\n\n            dragEndInFixedAreaX = lastDragCell.x < numFixedColumns,\n            dragEndInFixedAreaY = lastDragCell.y < numFixedRows;\n\n        if (!dragStartedInHeaderArea) {\n            if (this.currentDrag.x < b.origin.x) {\n                xOffset = -1;\n            }\n            if (this.currentDrag.y < b.origin.y) {\n                yOffset = -1;\n            }\n        }\n        if (this.currentDrag.x > b.origin.x + b.extent.x) {\n            xOffset = 1;\n        }\n        if (this.currentDrag.y > b.origin.y + b.extent.y) {\n            yOffset = 1;\n        }\n\n        var dragCellOffsetX = xOffset;\n        var dragCellOffsetY = yOffset;\n\n        if (dragEndInFixedAreaX) {\n            dragCellOffsetX = 0;\n        }\n        if (dragEndInFixedAreaY) {\n            dragCellOffsetY = 0;\n        }\n\n        this.lastDragCell = lastDragCell.plusXY(dragCellOffsetX, dragCellOffsetY);\n        grid.scrollBy(xOffset, yOffset);\n        this.handleMouseDragCellSelection(grid, lastDragCell, []); // update the selection\n        grid.repaint();\n        setTimeout(this.scrollDrag.bind(this, grid), 25);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc extend a selection or create one if there isnt yet\n     * @param {Hypergrid} grid\n     * @param {Object} gridCell - the event details\n     * @param {Array} keys - array of the keys that are currently pressed down\n     */\n    extendSelection: function(grid, gridCell, keys) {\n        var hasCTRL = keys.indexOf('CTRL') >= 0,\n            hasSHIFT = keys.indexOf('SHIFT') >= 0,\n            mousePoint = grid.getMouseDown(),\n            x = gridCell.x, // - numFixedColumns + scrollLeft;\n            y = gridCell.y; // - numFixedRows + scrollTop;\n\n        //were outside of the grid do nothing\n        if (x < 0 || y < 0) {\n            return;\n        }\n\n        //we have repeated a click in the same spot deslect the value from last time\n        if (\n            hasCTRL &&\n            x === mousePoint.x &&\n            y === mousePoint.y\n        ) {\n            grid.clearMostRecentSelection();\n            grid.popMouseDown();\n            grid.repaint();\n            return;\n        }\n\n        if (!hasCTRL && !hasSHIFT) {\n            grid.clearSelections();\n        }\n\n        if (hasSHIFT) {\n            grid.clearMostRecentSelection();\n            grid.select(mousePoint.x, mousePoint.y, x - mousePoint.x, y - mousePoint.y);\n            grid.setDragExtent(grid.newPoint(x - mousePoint.x, y - mousePoint.y));\n        } else {\n            grid.select(x, y, 0, 0);\n            grid.setMouseDown(grid.newPoint(x, y));\n            grid.setDragExtent(grid.newPoint(0, 0));\n        }\n        grid.repaint();\n    },\n\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     */\n    handleDOWNSHIFT: function(grid) {\n        this.moveShiftSelect(grid, 0, 1);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleUPSHIFT: function(grid) {\n        this.moveShiftSelect(grid, 0, -1);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleLEFTSHIFT: function(grid) {\n        this.moveShiftSelect(grid, -1, 0);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleRIGHTSHIFT: function(grid) {\n        this.moveShiftSelect(grid, 1, 0);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleDOWN: function(grid, event) {\n        //keep the browser viewport from auto scrolling on key event\n        event.primitiveEvent.preventDefault();\n\n        var count = this.getAutoScrollAcceleration();\n        grid.moveSingleSelect(0, count);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleUP: function(grid, event) {\n        //keep the browser viewport from auto scrolling on key event\n        event.primitiveEvent.preventDefault();\n\n        var count = this.getAutoScrollAcceleration();\n        grid.moveSingleSelect(0, -count);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleLEFT: function(grid) {\n        grid.moveSingleSelect(-1, 0);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleRIGHT: function(grid) {\n        grid.moveSingleSelect(1, 0);\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc If we are holding down the same navigation key, accelerate the increment we scroll\n     * #### returns: integer\n     */\n    getAutoScrollAcceleration: function() {\n        var count = 1;\n        var elapsed = this.getAutoScrollDuration() / 2000;\n        count = Math.max(1, Math.floor(elapsed * elapsed * elapsed * elapsed));\n        return count;\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc set the start time to right now when we initiate an auto scroll\n     */\n    setAutoScrollStartTime: function() {\n        this.sbAutoStart = Date.now();\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc update the autoscroll start time if we haven't autoscrolled within the last 500ms otherwise update the current autoscroll time\n     */\n    pingAutoScroll: function() {\n        var now = Date.now();\n        if (now - this.sbLastAuto > 500) {\n            this.setAutoScrollStartTime();\n        }\n        this.sbLastAuto = Date.now();\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc answer how long we have been auto scrolling\n     * #### returns: integer\n     */\n    getAutoScrollDuration: function() {\n        if (Date.now() - this.sbLastAuto > 500) {\n            return 0;\n        }\n        return Date.now() - this.sbAutoStart;\n    },\n\n    /**\n     * @memberOf CellSelection.prototype\n     * @desc Augment the most recent selection extent by (offsetX,offsetY) and scroll if necessary.\n     * @param {Hypergrid} grid\n     * @param {number} offsetX - x coordinate to start at\n     * @param {number} offsetY - y coordinate to start at\n     */\n    moveShiftSelect: function(grid, offsetX, offsetY) {\n        if (grid.extendSelect(offsetX, offsetY)) {\n            this.pingAutoScroll();\n        }\n    }\n\n});\n\nmodule.exports = CellSelection;\n","/* eslint-env browser */\n/* global requestAnimationFrame */\n\n'use strict';\n\n// This feature is responsible for column drag and drop reordering.\n// This object is a mess and desperately needs a complete rewrite.....\n\nvar Feature = require('./Feature');\n\nvar GRAB = ['grab', '-moz-grab', '-webkit-grab'],\n    GRABBING = ['grabbing', '-moz-grabbing', '-webkit-grabbing'],\n    setName = function(name) { this.cursor = name; };\n\nvar columnAnimationTime = 150;\nvar dragger;\nvar draggerCTX;\nvar floatColumn;\nvar floatColumnCTX;\n\n/**\n * @constructor\n * @extends Feature\n */\nvar ColumnMoving = Feature.extend('ColumnMoving', {\n\n    /**\n     * queue up the animations that need to play so they are done synchronously\n     * @type {Array}\n     * @memberOf CellMoving.prototype\n     */\n    floaterAnimationQueue: [],\n\n    /**\n     * am I currently auto scrolling right\n     * @type {boolean}\n     * @memberOf CellMoving.prototype\n     */\n    columnDragAutoScrollingRight: false,\n\n    /**\n     * am I currently auto scrolling left\n     * @type {boolean}\n     * @memberOf CellMoving.prototype\n     */\n    columnDragAutoScrollingLeft: false,\n\n    /**\n     * is the drag mechanism currently enabled (\"armed\")\n     * @type {boolean}\n     * @memberOf CellMoving.prototype\n     */\n    dragArmed: false,\n\n    /**\n     * am I dragging right now\n     * @type {boolean}\n     * @memberOf CellMoving.prototype\n     */\n    dragging: false,\n\n    /**\n     * the column index of the currently dragged column\n     * @type {number}\n     * @memberOf CellMoving.prototype\n     */\n    dragCol: -1,\n\n    /**\n     * an offset to position the dragged item from the cursor\n     * @type {number}\n     * @memberOf CellMoving.prototype\n     */\n    dragOffset: 0,\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc give me an opportunity to initialize stuff on the grid\n     * @param {Hypergrid} grid\n     */\n    initializeOn: function(grid) {\n        this.isFloatingNow = false;\n        this.initializeAnimationSupport(grid);\n        if (this.next) {\n            this.next.initializeOn(grid);\n        }\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc initialize animation support on the grid\n     * @param {Hypergrid} grid\n     */\n    initializeAnimationSupport: function(grid) {\n        if (!dragger) {\n            dragger = document.createElement('canvas');\n            dragger.setAttribute('width', '0px');\n            dragger.setAttribute('height', '0px');\n            dragger.style.position = 'fixed';\n\n            document.body.appendChild(dragger);\n            draggerCTX = dragger.getContext('2d', { alpha: false });\n        }\n        if (!floatColumn) {\n            floatColumn = document.createElement('canvas');\n            floatColumn.setAttribute('width', '0px');\n            floatColumn.setAttribute('height', '0px');\n            floatColumn.style.position = 'fixed';\n\n            document.body.appendChild(floatColumn);\n            floatColumnCTX = floatColumn.getContext('2d', { alpha: false });\n        }\n\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDrag: function(grid, event) {\n\n        var gridCell = event.gridCell;\n        var x;\n        //var y;\n\n        var distance = Math.abs(event.primitiveEvent.detail.dragstart.x - event.primitiveEvent.detail.mouse.x);\n\n        if (distance < 10 || event.isColumnFixed) {\n            if (this.next) {\n                this.next.handleMouseDrag(grid, event);\n            }\n            return;\n        }\n\n        if (event.isHeaderCell && this.dragArmed && !this.dragging) {\n            this.dragging = true;\n            this.dragCol = gridCell.x;\n            this.dragOffset = event.mousePoint.x;\n            this.detachChain();\n            x = event.primitiveEvent.detail.mouse.x - this.dragOffset;\n            //y = event.primitiveEvent.detail.mouse.y;\n            this.createDragColumn(grid, x, this.dragCol);\n        } else if (this.next) {\n            this.next.handleMouseDrag(grid, event);\n        }\n\n        if (this.dragging) {\n            x = event.primitiveEvent.detail.mouse.x - this.dragOffset;\n            //y = event.primitiveEvent.detail.mouse.y;\n            this.dragColumn(grid, x);\n        }\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDown: function(grid, event) {\n        if (\n            grid.properties.columnsReorderable &&\n            !event.primitiveEvent.detail.isRightClick &&\n            !event.isColumnFixed &&\n            event.isHeaderCell\n        ) {\n            this.dragArmed = true;\n            this.cursor = GRABBING;\n            grid.clearSelections();\n        } else if (this.next) {\n            this.next.handleMouseDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseUp: function(grid, event) {\n        //var col = event.gridCell.x;\n        if (this.dragging) {\n            this.cursor = null;\n            //delay here to give other events a chance to be dropped\n            var self = this;\n            this.endDragColumn(grid);\n            setTimeout(function() {\n                self.attachChain();\n            }, 200);\n        }\n        this.dragCol = -1;\n        this.dragging = false;\n        this.dragArmed = false;\n        this.cursor = null;\n        grid.repaint();\n\n        if (this.next) {\n            this.next.handleMouseUp(grid, event);\n        }\n\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseMove: function(grid, event) {\n        if (\n            grid.properties.columnsReorderable &&\n            !event.isColumnFixed &&\n            !this.dragging &&\n            event.isHeaderCell &&\n            event.mousePoint.y < grid.properties.columnGrabMargin\n        ) {\n            this.cursor = GRAB;\n        } else {\n            this.cursor = null;\n        }\n\n        if (this.next) {\n            this.next.handleMouseMove(grid, event);\n        }\n\n        if (event.isHeaderCell && this.dragging) {\n            this.cursor = GRABBING;\n        }\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc this is the main event handler that manages the dragging of the column\n     * @param {Hypergrid} grid\n     * @param {boolean} draggedToTheRight - are we moving to the right\n     */\n    floatColumnTo: function(grid, draggedToTheRight) {\n        this.floatingNow = true;\n\n        var visibleColumns = grid.renderer.visibleColumns;\n        var scrollLeft = grid.getHScrollValue();\n        var floaterIndex = grid.renderOverridesCache.floater.columnIndex;\n        var draggerIndex = grid.renderOverridesCache.dragger.columnIndex;\n        var hdpiratio = grid.renderOverridesCache.dragger.hdpiratio;\n\n        var draggerStartX;\n        var floaterStartX;\n        var fixedColumnCount = grid.getFixedColumnCount();\n        var draggerWidth = grid.getColumnWidth(draggerIndex);\n        var floaterWidth = grid.getColumnWidth(floaterIndex);\n\n        var max = grid.getVisibleColumnsCount();\n\n        var doffset = 0;\n        var foffset = 0;\n\n        if (draggerIndex >= fixedColumnCount) {\n            doffset = scrollLeft;\n        }\n        if (floaterIndex >= fixedColumnCount) {\n            foffset = scrollLeft;\n        }\n\n        if (draggedToTheRight) {\n            draggerStartX = visibleColumns[Math.min(max, draggerIndex - doffset)].left;\n            floaterStartX = visibleColumns[Math.min(max, floaterIndex - foffset)].left;\n\n            grid.renderOverridesCache.dragger.startX = (draggerStartX + floaterWidth) * hdpiratio;\n            grid.renderOverridesCache.floater.startX = draggerStartX * hdpiratio;\n\n        } else {\n            floaterStartX = visibleColumns[Math.min(max, floaterIndex - foffset)].left;\n            draggerStartX = floaterStartX + draggerWidth;\n\n            grid.renderOverridesCache.dragger.startX = floaterStartX * hdpiratio;\n            grid.renderOverridesCache.floater.startX = draggerStartX * hdpiratio;\n        }\n        grid.swapColumns(draggerIndex, floaterIndex);\n        grid.renderOverridesCache.dragger.columnIndex = floaterIndex;\n        grid.renderOverridesCache.floater.columnIndex = draggerIndex;\n\n\n        this.floaterAnimationQueue.unshift(this.doColumnMoveAnimation(grid, floaterStartX, draggerStartX));\n\n        this.doFloaterAnimation(grid);\n\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc manifest the column drag and drop animation\n     * @param {Hypergrid} grid\n     * @param {number} floaterStartX - the x start coordinate of the column underneath that floats behind the dragged column\n     * @param {number} draggerStartX - the x start coordinate of the dragged column\n     */\n    doColumnMoveAnimation: function(grid, floaterStartX, draggerStartX) {\n        var self = this;\n        return function() {\n            var d = floatColumn;\n            d.style.display = 'inline';\n            self.setCrossBrowserProperty(d, 'transform', 'translate(' + floaterStartX + 'px, ' + 0 + 'px)');\n\n            //d.style.webkit-webkit-Transform = 'translate(' + floaterStartX + 'px, ' + 0 + 'px)';\n            //d.style.webkit-webkit-Transform = 'translate(' + floaterStartX + 'px, ' + 0 + 'px)';\n\n            requestAnimationFrame(function() {\n                self.setCrossBrowserProperty(d, 'transition', (self.isWebkit ? '-webkit-' : '') + 'transform ' + columnAnimationTime + 'ms ease');\n                self.setCrossBrowserProperty(d, 'transform', 'translate(' + draggerStartX + 'px, ' + -2 + 'px)');\n            });\n            grid.repaint();\n            //need to change this to key frames\n\n            setTimeout(function() {\n                self.setCrossBrowserProperty(d, 'transition', '');\n                grid.renderOverridesCache.floater = null;\n                grid.repaint();\n                self.doFloaterAnimation(grid);\n                requestAnimationFrame(function() {\n                    d.style.display = 'none';\n                    self.isFloatingNow = false;\n                });\n            }, columnAnimationTime + 50);\n        };\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc manifest the floater animation\n     * @param {Hypergrid} grid\n     */\n    doFloaterAnimation: function(grid) {\n        if (this.floaterAnimationQueue.length === 0) {\n            this.floatingNow = false;\n            grid.repaint();\n            return;\n        }\n        var animation = this.floaterAnimationQueue.pop();\n        animation();\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc create the float column at columnIndex underneath the dragged column\n     * @param {Hypergrid} grid\n     * @param {number} columnIndex - the index of the column that will be floating\n     */\n    createFloatColumn: function(grid, columnIndex) {\n\n        var fixedColumnCount = grid.getFixedColumnCount();\n        var scrollLeft = grid.getHScrollValue();\n\n        if (columnIndex < fixedColumnCount) {\n            scrollLeft = 0;\n        }\n\n        var columnWidth = grid.getColumnWidth(columnIndex);\n        var colHeight = grid.div.clientHeight;\n        var d = floatColumn;\n        var style = d.style;\n        var location = grid.div.getBoundingClientRect();\n\n        style.top = (location.top - 2) + 'px';\n        style.left = location.left + 'px';\n\n        var hdpiRatio = grid.getHiDPI(floatColumnCTX);\n\n        d.setAttribute('width', Math.round(columnWidth * hdpiRatio) + 'px');\n        d.setAttribute('height', Math.round(colHeight * hdpiRatio) + 'px');\n        style.boxShadow = '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)';\n        style.width = columnWidth + 'px'; //Math.round(columnWidth / hdpiRatio) + 'px';\n        style.height = colHeight + 'px'; //Math.round(colHeight / hdpiRatio) + 'px';\n        style.borderTop = '1px solid ' + grid.properties.lineColor;\n        style.backgroundColor = grid.properties.backgroundColor;\n\n        var startX = grid.renderer.visibleColumns[columnIndex - scrollLeft].left * hdpiRatio;\n\n        floatColumnCTX.scale(hdpiRatio, hdpiRatio);\n\n        grid.renderOverridesCache.floater = {\n            columnIndex: columnIndex,\n            ctx: floatColumnCTX,\n            startX: startX,\n            width: columnWidth,\n            height: colHeight,\n            hdpiratio: hdpiRatio\n        };\n\n        style.zIndex = '4';\n        this.setCrossBrowserProperty(d, 'transform', 'translate(' + startX + 'px, ' + -2 + 'px)');\n        GRABBING.forEach(setName, style);\n        grid.repaint();\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc utility function for setting cross browser css properties\n     * @param {HTMLElement} element - descripton\n     * @param {string} property - the property\n     * @param {string} value - the value to assign\n     */\n    setCrossBrowserProperty: function(element, property, value) {\n        var uProperty = property[0].toUpperCase() + property.substr(1);\n        this.setProp(element, 'webkit' + uProperty, value);\n        this.setProp(element, 'Moz' + uProperty, value);\n        this.setProp(element, 'ms' + uProperty, value);\n        this.setProp(element, 'O' + uProperty, value);\n        this.setProp(element, property, value);\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc utility function for setting properties on HTMLElements\n     * @param {HTMLElement} element - descripton\n     * @param {string} property - the property\n     * @param {string} value - the value to assign\n     */\n    setProp: function(element, property, value) {\n        if (property in element.style) {\n            element.style[property] = value;\n        }\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc create the dragged column at columnIndex above the floated column\n     * @param {Hypergrid} grid\n     * @param {number} x - the start position\n     * @param {number} columnIndex - the index of the column that will be floating\n     */\n    createDragColumn: function(grid, x, columnIndex) {\n\n        var fixedColumnCount = grid.getFixedColumnCount();\n        var scrollLeft = grid.getHScrollValue();\n\n        if (columnIndex < fixedColumnCount) {\n            scrollLeft = 0;\n        }\n\n        var hdpiRatio = grid.getHiDPI(draggerCTX);\n        var columnWidth = grid.getColumnWidth(columnIndex);\n        var colHeight = grid.div.clientHeight;\n        var d = dragger;\n        var location = grid.div.getBoundingClientRect();\n        var style = d.style;\n\n        style.top = location.top + 'px';\n        style.left = location.left + 'px';\n        style.opacity = 0.85;\n        style.boxShadow = '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)';\n        //style.zIndex = 100;\n        style.borderTop = '1px solid ' + grid.properties.lineColor;\n        style.backgroundColor = grid.properties.backgroundColor;\n\n        d.setAttribute('width', Math.round(columnWidth * hdpiRatio) + 'px');\n        d.setAttribute('height', Math.round(colHeight * hdpiRatio) + 'px');\n\n        style.width = columnWidth + 'px'; //Math.round(columnWidth / hdpiRatio) + 'px';\n        style.height = colHeight + 'px'; //Math.round(colHeight / hdpiRatio) + 'px';\n\n        var startX = grid.renderer.visibleColumns[columnIndex - scrollLeft].left * hdpiRatio;\n\n        draggerCTX.scale(hdpiRatio, hdpiRatio);\n\n        grid.renderOverridesCache.dragger = {\n            columnIndex: columnIndex,\n            startIndex: columnIndex,\n            ctx: draggerCTX,\n            startX: startX,\n            width: columnWidth,\n            height: colHeight,\n            hdpiratio: hdpiRatio\n        };\n\n        this.setCrossBrowserProperty(d, 'transform', 'translate(' + x + 'px, -5px)');\n        style.zIndex = '5';\n        GRABBING.forEach(setName, style);\n        grid.repaint();\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc this function is the main dragging logic\n     * @param {Hypergrid} grid\n     * @param {number} x - the start position\n     */\n    dragColumn: function(grid, x) {\n\n        //TODO: this function is overly complex, refactor this in to something more reasonable\n        var self = this;\n\n        var autoScrollingNow = this.columnDragAutoScrollingRight || this.columnDragAutoScrollingLeft;\n\n        var hdpiRatio = grid.getHiDPI(draggerCTX);\n\n        var dragColumnIndex = grid.renderOverridesCache.dragger.columnIndex;\n\n        var minX = 0;\n        var maxX = grid.renderer.getFinalVisibleColumnBoundary();\n        x = Math.min(x, maxX + 15);\n        x = Math.max(minX - 15, x);\n\n        //am I at my lower bound\n        var atMin = x < minX && dragColumnIndex !== 0;\n\n        //am I at my upper bound\n        var atMax = x > maxX;\n\n        var d = dragger;\n\n        this.setCrossBrowserProperty(d, 'transition', (self.isWebkit ? '-webkit-' : '') + 'transform ' + 0 + 'ms ease, box-shadow ' + columnAnimationTime + 'ms ease');\n\n        this.setCrossBrowserProperty(d, 'transform', 'translate(' + x + 'px, ' + -10 + 'px)');\n        requestAnimationFrame(function() {\n            d.style.display = 'inline';\n        });\n\n        var overCol = grid.renderer.getColumnFromPixelX(x + (d.width / 2 / hdpiRatio));\n\n        if (atMin) {\n            overCol = 0;\n        }\n\n        if (atMax) {\n            overCol = grid.getColumnCount() - 1;\n        }\n\n        var doAFloat = dragColumnIndex > overCol;\n        doAFloat = doAFloat || (overCol - dragColumnIndex >= 1);\n\n        if (doAFloat && !autoScrollingNow) {\n            var draggedToTheRight = dragColumnIndex < overCol;\n            // if (draggedToTheRight) {\n            //     overCol -= 1;\n            // }\n            if (this.isFloatingNow) {\n                return;\n            }\n\n            this.isFloatingNow = true;\n            this.createFloatColumn(grid, overCol);\n            this.floatColumnTo(grid, draggedToTheRight);\n        } else {\n\n            if (x < minX - 10) {\n                this.checkAutoScrollToLeft(grid, x);\n            }\n            if (x > minX - 10) {\n                this.columnDragAutoScrollingLeft = false;\n            }\n            //lets check for autoscroll to right if were up against it\n            if (atMax || x > maxX + 10) {\n                this.checkAutoScrollToRight(grid, x);\n                return;\n            }\n            if (x < maxX + 10) {\n                this.columnDragAutoScrollingRight = false;\n            }\n        }\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc autoscroll to the right if necessary\n     * @param {Hypergrid} grid\n     * @param {number} x - the start position\n     */\n    checkAutoScrollToRight: function(grid, x) {\n        if (this.columnDragAutoScrollingRight) {\n            return;\n        }\n        this.columnDragAutoScrollingRight = true;\n        this._checkAutoScrollToRight(grid, x);\n    },\n\n    _checkAutoScrollToRight: function(grid, x) {\n        if (!this.columnDragAutoScrollingRight) {\n            return;\n        }\n        var scrollLeft = grid.getHScrollValue();\n        if (!grid.dragging || scrollLeft > (grid.sbHScroller.range.max - 2)) {\n            return;\n        }\n        var draggedIndex = grid.renderOverridesCache.dragger.columnIndex;\n        grid.scrollBy(1, 0);\n        var newIndex = draggedIndex + 1;\n\n        grid.swapColumns(newIndex, draggedIndex);\n        grid.renderOverridesCache.dragger.columnIndex = newIndex;\n\n        setTimeout(this._checkAutoScrollToRight.bind(this, grid, x), 250);\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc autoscroll to the left if necessary\n     * @param {Hypergrid} grid\n     * @param {number} x - the start position\n     */\n    checkAutoScrollToLeft: function(grid, x) {\n        if (this.columnDragAutoScrollingLeft) {\n            return;\n        }\n        this.columnDragAutoScrollingLeft = true;\n        this._checkAutoScrollToLeft(grid, x);\n    },\n\n    _checkAutoScrollToLeft: function(grid, x) {\n        if (!this.columnDragAutoScrollingLeft) {\n            return;\n        }\n\n        var scrollLeft = grid.getHScrollValue();\n        if (!grid.dragging || scrollLeft < 1) {\n            return;\n        }\n        var draggedIndex = grid.renderOverridesCache.dragger.columnIndex;\n        grid.swapColumns(draggedIndex + scrollLeft, draggedIndex + scrollLeft - 1);\n        grid.scrollBy(-1, 0);\n        setTimeout(this._checkAutoScrollToLeft.bind(this, grid, x), 250);\n    },\n\n    /**\n     * @memberOf CellMoving.prototype\n     * @desc a column drag has completed, update data and cleanup\n     * @param {Hypergrid} grid\n     */\n    endDragColumn: function(grid) {\n\n        var fixedColumnCount = grid.getFixedColumnCount();\n        var scrollLeft = grid.getHScrollValue();\n\n        var columnIndex = grid.renderOverridesCache.dragger.columnIndex;\n\n        if (columnIndex < fixedColumnCount) {\n            scrollLeft = 0;\n        }\n\n        var self = this;\n        var startX = grid.renderer.visibleColumns[columnIndex - scrollLeft].left;\n        var d = dragger;\n        var changed = grid.renderOverridesCache.dragger.startIndex !== grid.renderOverridesCache.dragger.columnIndex;\n        self.setCrossBrowserProperty(d, 'transition', (self.isWebkit ? '-webkit-' : '') + 'transform ' + columnAnimationTime + 'ms ease, box-shadow ' + columnAnimationTime + 'ms ease');\n        self.setCrossBrowserProperty(d, 'transform', 'translate(' + startX + 'px, ' + -1 + 'px)');\n        d.style.boxShadow = '0px 0px 0px #888888';\n\n        setTimeout(function() {\n            grid.renderOverridesCache.dragger = null;\n            grid.repaint();\n            requestAnimationFrame(function() {\n                d.style.display = 'none';\n                grid.endDragColumnNotification(); //internal notification\n                if (changed){\n                    grid.fireSyntheticOnColumnsChangedEvent(); //public notification\n                }\n            });\n        }, columnAnimationTime + 50);\n\n    }\n\n});\n\nmodule.exports = ColumnMoving;\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n * @extends Feature\n */\nvar ColumnResizing = Feature.extend('ColumnResizing', {\n\n    /**\n     * the pixel location of the where the drag was initiated\n     * @type {number}\n     * @default\n     * @memberOf ColumnResizing.prototype\n     */\n    dragStart: -1,\n\n    /**\n     * the starting width/height of the row/column we are dragging\n     * @type {number}\n     * @default -1\n     * @memberOf ColumnResizing.prototype\n     */\n    dragStartWidth: -1,\n\n    /**\n     * @memberOf ColumnResizing.prototype\n     * @desc get the mouse x,y coordinate\n     * @returns {number}\n     * @param {MouseEvent} event - the mouse event to query\n     */\n    getMouseValue: function(event) {\n        return event.primitiveEvent.detail.mouse.x;\n    },\n\n    /**\n     * @memberOf ColumnResizing.prototype\n     * @desc returns the index of which divider I'm over\n     * @returns {number}\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    overAreaDivider: function(grid, event) {\n        var leftMostColumnIndex = grid.behavior.leftMostColIndex;\n        return event.gridCell.x !== leftMostColumnIndex && event.mousePoint.x <= 3 ||\n            event.mousePoint.x >= event.bounds.width - 3;\n    },\n\n    /**\n     * @memberOf ColumnResizing.prototype\n     * @desc return the cursor name\n     * @returns {string}\n     */\n    getCursorName: function() {\n        return 'col-resize';\n    },\n\n    /**\n     * @memberOf ColumnResizing.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDrag: function(grid, event) {\n        if (this.dragColumn) {\n            var delta = this.getMouseValue(event) - this.dragStart;\n            var dragWidth = this.dragStartWidth + delta;\n            if (!this.nextColumn) {\n                grid.behavior.setColumnWidth(this.dragColumn, dragWidth);\n            } else if (\n                0 < delta && delta <= (this.nextStartWidth - this.nextColumn.properties.minimumColumnWidth) ||\n                0 > delta && delta >= -(this.dragStartWidth - this.dragColumn.properties.minimumColumnWidth)\n            ) {\n                var nextWidth = this.nextStartWidth - delta;\n                grid.behavior.setColumnWidth(this.dragColumn, dragWidth);\n                grid.behavior.setColumnWidth(this.nextColumn, nextWidth);\n            }\n        } else if (this.next) {\n            this.next.handleMouseDrag(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf ColumnResizing.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDown: function(grid, event) {\n        if (event.isHeaderRow && this.overAreaDivider(grid, event)) {\n            var gridColumnIndex = event.gridCell.x;\n\n            if (event.mousePoint.x <= 3) {\n                gridColumnIndex -= 1;\n                var vc = grid.renderer.visibleColumns[gridColumnIndex] ||\n                    grid.renderer.visibleColumns[gridColumnIndex - 1]; // get row number column if tree column undefined\n                if (vc) {\n                    this.dragColumn = vc.column;\n                    this.dragStartWidth = vc.width;\n                } else {\n                    return; // can't drag left-most column boundary\n                }\n            } else {\n                this.dragColumn = event.column;\n                this.dragStartWidth = event.bounds.width;\n            }\n\n            this.dragStart = this.getMouseValue(event);\n\n            if (this.dragColumn.properties.resizeColumnInPlace) {\n                gridColumnIndex += 1;\n                vc = grid.renderer.visibleColumns[gridColumnIndex] ||\n                    grid.renderer.visibleColumns[gridColumnIndex + 1]; // get first data column if tree column undefined;\n                if (vc) {\n                    this.nextColumn = vc.column;\n                    this.nextStartWidth = this.nextColumn.getWidth();\n                } else {\n                    this.nextColumn = undefined;\n                }\n            } else {\n                this.nextColumn = undefined; // in case resizeColumnInPlace was previously on but is now off\n            }\n        } else if (this.next) {\n            this.next.handleMouseDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf ColumnResizing.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseUp: function(grid, event) {\n        if (this.dragColumn) {\n            this.cursor = null;\n            this.dragColumn = false;\n\n            event.primitiveEvent.stopPropagation();\n            //delay here to give other events a chance to be dropped\n            grid.behaviorShapeChanged();\n        } else if (this.next) {\n            this.next.handleMouseUp(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf ColumnResizing.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseMove: function(grid, event) {\n        if (!this.dragColumn) {\n            this.cursor = null;\n\n            if (this.next) {\n                this.next.handleMouseMove(grid, event);\n            }\n\n            this.cursor = event.isHeaderRow && this.overAreaDivider(grid, event) ? this.getCursorName() : null;\n        }\n    },\n\n    /**\n     * @param {Hypergrid} grid\n     * @param {CellEvent} cellEvent\n     * @memberOf ColumnResizing.prototype\n     */\n    handleDoubleClick: function(grid, event) {\n        if (event.isHeaderRow && this.overAreaDivider(grid, event)) {\n            var column = event.mousePoint.x <= 3\n                ? grid.behavior.getActiveColumn(event.gridCell.x - 1)\n                : event.column;\n            column.addProperties({\n                columnAutosizing: true,\n                columnAutosized: false // todo: columnAutosizing should be a setter that automatically resets columnAutosized on state change to true\n            });\n            setTimeout(function() { // do after next render, which measures text now that auto-sizing is on\n                grid.autosizeColumn(column);\n            });\n        } else if (this.next) {\n            this.next.handleDoubleClick(grid, event);\n        }\n    }\n\n});\n\nmodule.exports = ColumnResizing;\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n * @extends Feature\n */\nvar ColumnSelection = Feature.extend('ColumnSelection', {\n\n    /**\n     * The pixel location of the mouse pointer during a drag operation.\n     * @type {Point}\n     * @default null\n     * @memberOf ColumnSelection.prototype\n     */\n    currentDrag: null,\n\n    /**\n     * The horizontal cell coordinate of the where the mouse pointer is during a drag operation.\n     * @type {Object}\n     * @default null\n     * @memberOf ColumnSelection.prototype\n     */\n    lastDragColumn: null,\n\n    /**\n     * a millisecond value representing the previous time an autoscroll started\n     * @type {number}\n     * @default 0\n     * @memberOf ColumnSelection.prototype\n     */\n    sbLastAuto: 0,\n\n    /**\n     * a millisecond value representing the time the current autoscroll started\n     * @type {number}\n     * @default 0\n     * @memberOf ColumnSelection.prototype\n     */\n    sbAutoStart: 0,\n\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseUp: function(grid, event) {\n        if (this.dragging) {\n            this.dragging = false;\n        }\n        if (this.next) {\n            this.next.handleMouseUp(grid, event);\n        }\n    },\n\n    handleDoubleClick: function(grid, event) {\n        if (this.doubleClickTimer) {\n            clearTimeout(this.doubleClickTimer); // prevent mouseDown from continuing\n            this.doubleClickTimer = undefined;\n        }\n        if (this.next) {\n            this.next.handleDoubleClick(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDown: function(grid, event) {\n        if (this.doubleClickTimer) {\n            return;\n        }\n\n        // todo: >= 5 depends on header being top-most row which is currently always true but we may allow header \"section\" to be arbitrary position within quadrant (see also handleMouseDown in ColumnMoving.js)\n        if (\n            grid.properties.columnSelection &&\n            !event.primitiveEvent.detail.isRightClick &&\n            (\n                grid.properties.autoSelectColumns ||\n                event.isHeaderCell && event.mousePoint.y >= 5\n            )\n        ) {\n            // HOLD OFF WHILE WAITING FOR DOUBLE-CLICK\n            this.doubleClickTimer = setTimeout(\n                doubleClickTimerCallback.bind(this, grid, event),\n                doubleClickDelay.call(this, grid, event)\n            );\n        } else if (this.next) {\n            this.next.handleMouseDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDrag: function(grid, event) {\n        if (\n            grid.properties.columnSelection &&\n            !this.isColumnDragging(grid) &&\n            !event.primitiveEvent.detail.isRightClick &&\n            this.dragging\n        ) {\n            //if we are in the fixed area do not apply the scroll values\n            this.lastDragColumn = event.gridCell.x;\n            this.currentDrag = event.primitiveEvent.detail.mouse;\n            this.checkDragScroll(grid, this.currentDrag);\n            this.handleMouseDragCellSelection(grid, this.lastDragColumn, event.primitiveEvent.detail.keys);\n        } else if (this.next) {\n            this.next.handleMouseDrag(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleKeyDown: function(grid, event) {\n        var detail = event.detail,\n            handler = grid.getLastSelectionType() === 'column' &&\n                this['handle' + detail.char];\n\n        if (handler) {\n            handler.call(this, grid, detail);\n        } else if (this.next) {\n            this.next.handleKeyDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc Handle a mousedrag selection\n     * @param {Hypergrid} grid\n     * @param {Object} mouse - the event details\n     * @param {Array} keys - array of the keys that are currently pressed down\n     */\n    handleMouseDragCellSelection: function(grid, x, keys) {\n        var mouseX = grid.getMouseDown().x;\n\n        grid.clearMostRecentColumnSelection();\n\n        grid.selectColumn(mouseX, x);\n        grid.setDragExtent(grid.newPoint(x - mouseX, 0));\n\n        grid.repaint();\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc this checks while were dragging if we go outside the visible bounds, if so, kick off the external autoscroll check function (above)\n     * @param {Hypergrid} grid\n     * @param {Object} mouse - the event details\n     */\n    checkDragScroll: function(grid, mouse) {\n        if (\n            grid.properties.scrollingEnabled &&\n            grid.getDataBounds().contains(mouse)\n        ) {\n            if (grid.isScrollingNow()) {\n                grid.setScrollingNow(false);\n            }\n        } else {\n            if (!grid.isScrollingNow()) {\n                grid.setScrollingNow(true);\n                this.scrollDrag(grid);\n            }\n        }\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc this function makes sure that while we are dragging outside of the grid visible bounds, we srcroll accordingly\n     * @param {Hypergrid} grid\n     */\n    scrollDrag: function(grid) {\n        if (!grid.isScrollingNow()) {\n            return;\n        }\n\n        var b = grid.getDataBounds(),\n            xOffset;\n\n        if (this.currentDrag.x < b.origin.x) {\n            xOffset = -1;\n        } else if (this.currentDrag.x > b.origin.x + b.extent.x) {\n            xOffset = 1;\n        }\n\n        if (xOffset) {\n            if (this.lastDragColumn >= grid.getFixedColumnCount()) {\n                this.lastDragColumn += xOffset;\n            }\n            grid.scrollBy(xOffset, 0);\n        }\n\n        this.handleMouseDragCellSelection(grid, this.lastDragColumn, []); // update the selection\n        grid.repaint();\n        setTimeout(this.scrollDrag.bind(this, grid), 25);\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc extend a selection or create one if there isnt yet\n     * @param {Hypergrid} grid\n     * @param {Object} gridCell - the event details\n     * @param {Array} keys - array of the keys that are currently pressed down\n     */\n    extendSelection: function(grid, x, keys) {\n        if (!grid.abortEditing()) { return; }\n\n        var mouseX = grid.getMouseDown().x,\n            hasSHIFT = keys.indexOf('SHIFT') > 0;\n\n        if (x < 0) { // outside of the grid?\n            return; // do nothing\n        }\n\n        if (hasSHIFT) {\n            grid.clearMostRecentColumnSelection();\n            grid.selectColumn(x, mouseX);\n            grid.setDragExtent(grid.newPoint(x - mouseX, 0));\n        } else {\n            grid.toggleSelectColumn(x, keys);\n            grid.setMouseDown(grid.newPoint(x, 0));\n            grid.setDragExtent(grid.newPoint(0, 0));\n        }\n\n        grid.repaint();\n    },\n\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     */\n    handleDOWNSHIFT: function(grid) {},\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleUPSHIFT: function(grid) {},\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleLEFTSHIFT: function(grid) {\n        this.moveShiftSelect(grid, -1);\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleRIGHTSHIFT: function(grid) {\n        this.moveShiftSelect(grid, 1);\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleDOWN: function(grid) {\n\n        // var mouseCorner = grid.getMouseDown().plus(grid.getDragExtent());\n        // var maxRows = grid.getRowCount() - 1;\n\n        // var newX = mouseCorner.x;\n        // var newY = grid.getHeaderRowCount() + grid.getVScrollValue();\n\n        // newY = Math.min(maxRows, newY);\n\n        // grid.clearSelections();\n        // grid.select(newX, newY, 0, 0);\n        // grid.setMouseDown(new grid.rectangular.Point(newX, newY));\n        // grid.setDragExtent(new grid.rectangular.Point(0, 0));\n\n        // grid.repaint();\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleUP: function(grid) {},\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleLEFT: function(grid) {\n        this.moveSingleSelect(grid, -1);\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleRIGHT: function(grid) {\n        this.moveSingleSelect(grid, 1);\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc If we are holding down the same navigation key, accelerate the increment we scroll\n     * #### returns: integer\n     */\n    getAutoScrollAcceleration: function() {\n        var elapsed = this.getAutoScrollDuration() / 2000;\n        return Math.max(1, Math.floor(elapsed * elapsed * elapsed * elapsed));\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc set the start time to right now when we initiate an auto scroll\n     */\n    setAutoScrollStartTime: function() {\n        this.sbAutoStart = Date.now();\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc update the autoscroll start time if we haven't autoscrolled within the last 500ms otherwise update the current autoscroll time\n     */\n    pingAutoScroll: function() {\n        var now = Date.now();\n        if (now - this.sbLastAuto > 500) {\n            this.setAutoScrollStartTime();\n        }\n        this.sbLastAuto = Date.now();\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc answer how long we have been auto scrolling\n     * #### returns: integer\n     */\n    getAutoScrollDuration: function() {\n        if (Date.now() - this.sbLastAuto > 500) {\n            return 0;\n        }\n        return Date.now() - this.sbAutoStart;\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc Augment the most recent selection extent by (offsetX,offsetY) and scroll if necessary.\n     * @param {Hypergrid} grid\n     * @param {number} offsetX - x coordinate to start at\n     * @param {number} offsetY - y coordinate to start at\n     */\n    moveShiftSelect: function(grid, offsetX) {\n        var origin = grid.getMouseDown(),\n            extent = grid.getDragExtent(),\n            newX = extent.x + offsetX,\n            maxViewableColumns = grid.renderer.visibleColumns.length - 1,\n            maxColumns = grid.getColumnCount() - 1;\n\n        if (!grid.properties.scrollingEnabled) {\n            maxColumns = Math.min(maxColumns, maxViewableColumns);\n        }\n\n        newX = Math.min(maxColumns - origin.x, Math.max(-origin.x, newX));\n\n        grid.clearMostRecentColumnSelection();\n        grid.selectColumn(origin.x, origin.x + newX);\n        grid.setDragExtent(grid.newPoint(newX, 0));\n\n        if (grid.insureModelColIsVisible(newX + origin.x, offsetX)) {\n            this.pingAutoScroll();\n        }\n\n        grid.repaint();\n    },\n\n    /**\n     * @memberOf ColumnSelection.prototype\n     * @desc Replace the most recent selection with a single cell selection that is moved (offsetX,offsetY) from the previous selection extent.\n     * @param {Hypergrid} grid\n     * @param {number} offsetX - x coordinate to start at\n     * @param {number} offsetY - y coordinate to start at\n     */\n    moveSingleSelect: function(grid, offsetX) {\n        var extent = grid.getDragExtent(),\n            mouseCorner = grid.getMouseDown().plus(extent),\n            newX = mouseCorner.x + offsetX,\n            maxColumns = grid.getColumnCount() - 1,\n            maxViewableColumns = grid.getVisibleColumnsCount() - 1;\n\n        if (!grid.properties.scrollingEnabled) {\n            maxColumns = Math.min(maxColumns, maxViewableColumns);\n        }\n\n        newX = Math.min(maxColumns, Math.max(0, newX));\n\n        grid.clearSelections();\n        grid.selectColumn(newX);\n        grid.setMouseDown(grid.newPoint(newX, 0));\n        grid.setDragExtent(grid.newPoint(0, 0));\n\n        if (grid.insureModelColIsVisible(newX, offsetX)) {\n            this.pingAutoScroll();\n        }\n\n        grid.repaint();\n    },\n\n    isColumnDragging: function(grid) {\n        var dragger = grid.lookupFeature('ColumnMoving');\n        return dragger && (dragger.dragging || dragger.dragArmed); //&& !this.dragging;\n    }\n\n});\n\nfunction doubleClickDelay(grid, event) {\n    var columnProperties;\n\n    return (\n        event.isHeaderCell &&\n        !(columnProperties = event.columnProperties).unsortable &&\n        columnProperties.sortOnDoubleClick &&\n        300\n    );\n}\n\nfunction doubleClickTimerCallback(grid, event) {\n    this.doubleClickTimer = undefined;\n    this.dragging = true;\n    this.extendSelection(grid, event.gridCell.x, event.primitiveEvent.detail.keys);\n}\n\nmodule.exports = ColumnSelection;\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n * @extends Feature\n */\nvar ColumnSorting = Feature.extend('ColumnSorting', {\n\n    /**\n     * @memberOf ColumnSorting.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleClick: function(grid, event) {\n        sort.call(this, grid, event);\n    },\n\n    /**\n     * @memberOf ColumnSorting.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleDoubleClick: function(grid, event) {\n        sort.call(this, grid, event, true);\n    },\n\n    /**\n     * @memberOf ColumnSorting.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseMove: function(grid, event) {\n        var columnProperties;\n        if (\n            event.isRowFixed &&\n            event.isHeaderCell &&\n            (columnProperties = grid.behavior.getColumnProperties(event.gridCell.x)) &&\n            !columnProperties.unsortable\n        ) {\n            this.cursor = 'pointer';\n        } else {\n            this.cursor = null;\n        }\n        if (this.next) {\n            this.next.handleMouseMove(grid, event);\n        }\n    }\n\n});\n\nfunction sort(grid, event, onDoubleClick) {\n    var columnProperties;\n    if (\n        event.isHeaderCell &&\n        !(columnProperties = event.columnProperties).unsortable &&\n        !(columnProperties.sortOnDoubleClick ^ onDoubleClick) // both same (true or falsy)?\n    ) {\n        grid.fireSyntheticColumnSortEvent(event.gridCell.x, event.primitiveEvent.detail.keys);\n    }\n\n    if (this.next) {\n        this.next[onDoubleClick ? 'handleDoubleClick' : 'handleClick'](grid, event);\n    }\n}\n\nmodule.exports = ColumnSorting;\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n */\nvar Filters = Feature.extend('Filters', {\n\n    /**\n     * Navigate away from the filter cell when:\n     * 1. Coming from a cell editor (`event.detail.editor` defined).\n     * 2. The cell editor was for a filter cell.\n     * 3. The key (`event.detail.char) maps (through {@link module:defaults.navKeyMap|navKeyMap}) to one of:\n     *    * `'UP'` or `'DOWN'` - Selects first visible data cell under filter cell.\n     *    * `'LEFT'` - Opens filter cell editor in previous filterable column; if nonesuch, selects first visible data cell under filter cell.\n     *    * `'RIGHT'` - Opens filter cell editor in next filterable column; if nonesuch, selects first visible data cell under filter cell.\n     */\n    handleKeyDown: function(grid, event) {\n        var cellEvent, mappedNavKey, handler,\n            detail = event.detail;\n\n        if (detail.editor) {\n            cellEvent = detail.editor.event;\n            if (cellEvent.isFilterCell) {\n                mappedNavKey = cellEvent.properties.mappedNavKey(detail.char);\n                handler = this['handle' + mappedNavKey];\n            }\n        }\n\n        if (handler) {\n            handler.call(this, grid, detail);\n        } else if (this.next) {\n            this.next.handleKeyDown(grid, event);\n        }\n    },\n\n    handleLEFT: function(grid, detail) { moveLaterally(grid, detail, -1); },\n    handleRIGHT: function(grid, detail) { moveLaterally(grid, detail, +1); },\n    handleUP: moveDown,\n    handleDOWN: moveDown,\n\n    handleDoubleClick: function(grid, event) {\n        if (event.isFilterCell) {\n            grid.onEditorActivate(event);\n        } else if (this.next) {\n            this.next.handleDoubleClick(grid, event);\n        }\n    },\n\n    handleClick: function(grid, event) {\n        if (event.isFilterCell) {\n            grid.onEditorActivate(event);\n        } else if (this.next) {\n            this.next.handleClick(grid, event);\n        }\n    }\n\n});\n\nfunction moveLaterally(grid, detail, deltaX) {\n    var cellEvent = detail.editor.event,\n        gridX = cellEvent.visibleColumn.index,\n        gridY = cellEvent.visibleRow.index,\n        originX = gridX,\n        C = grid.renderer.visibleColumns.length;\n\n    cellEvent = new grid.behavior.CellEvent; // redefine so we don't reset the original below\n\n    while (\n        (gridX = (gridX + deltaX + C) % C) !== originX &&\n        cellEvent.resetGridXY(gridX, gridY)\n    ) {\n        if (cellEvent.properties.filterable) {\n            // Select previous or next filterable column's filter cell\n            grid.editAt(cellEvent);\n            return;\n        }\n    }\n\n    moveDown(grid, cellEvent);\n}\n\nfunction moveDown(grid, detail) {\n    var cellEvent = detail.editor.event,\n        gridX = cellEvent.visibleColumn.index;\n\n    // Select first visible grid cell of this column\n    grid.selectViewportCell(gridX, 0);\n    grid.takeFocus();\n}\n\nmodule.exports = Filters;\n","'use strict';\n\nvar Feature = require('./Feature');\n\nvar commands = {\n    PAGEDOWN: function(grid) { grid.pageDown(); },\n    PAGEUP: function(grid) { grid.pageUp(); },\n    PAGELEFT: function(grid) { grid.pageLeft(); },\n    PAGERIGHT: function(grid) { grid.pageRight(); }\n};\n\n/**\n * @constructor\n */\nvar KeyPaging = Feature.extend('KeyPaging', {\n\n    /**\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @memberOf KeyPaging.prototype\n     */\n    handleKeyDown: function(grid, event) {\n        var func = commands[event.detail.char];\n        if (func) {\n            func(grid);\n        } else if (this.next) {\n            this.next.handleKeyDown(grid, event);\n        }\n    }\n\n});\n\nmodule.exports = KeyPaging;\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n */\nvar OnHover = Feature.extend('OnHover', {\n\n    /**\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     * @memberOf OnHover.prototype\n     */\n    handleMouseMove: function(grid, event) {\n        var hoverCell = grid.hoverCell;\n        if (!event.gridCell.equals(hoverCell)) {\n            if (hoverCell) {\n                this.handleMouseExit(grid, hoverCell);\n            }\n            this.handleMouseEnter(grid, event);\n            grid.setHoverCell(event);\n        } else if (this.next) {\n            this.next.handleMouseMove(grid, event);\n        }\n    }\n\n});\n\nmodule.exports = OnHover;\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n */\nvar RowSelection = Feature.extend('RowSelection', {\n\n    /**\n     * The pixel location of the mouse pointer during a drag operation.\n     * @type {Point}\n     * @default null\n     * @memberOf RowSelection.prototype\n     */\n    currentDrag: null,\n\n    /**\n     * The cell coordinates of the where the mouse pointer is during a drag operation.\n     * @type {Object}\n     * @default null\n     * @memberOf RowSelection.prototype\n     */\n    lastDragCell: null,\n\n    /**\n     * a millisecond value representing the previous time an autoscroll started\n     * @type {number}\n     * @default 0\n     * @memberOf RowSelection.prototype\n     */\n    sbLastAuto: 0,\n\n    /**\n     * a millisecond value representing the time the current autoscroll started\n     * @type {number}\n     * @default 0\n     * @memberOf RowSelection.prototype\n     */\n    sbAutoStart: 0,\n\n    dragArmed: false,\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseUp: function(grid, event) {\n        if (this.dragArmed) {\n            this.dragArmed = false;\n            moveCellSelection(grid);\n            grid.fireSyntheticRowSelectionChangedEvent();\n        } else if (this.dragging) {\n            this.dragging = false;\n            moveCellSelection(grid);\n            grid.fireSyntheticRowSelectionChangedEvent();\n        } else if (this.next) {\n            this.next.handleMouseUp(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDown: function(grid, event) {\n        var leftClick = !event.primitiveEvent.detail.isRightClick,\n            rowNumberClick = leftClick &&\n                grid.properties.showRowNumbers &&\n                event.isHandleColumn &&\n                event.mousePointInClickRect;\n\n        if (rowNumberClick && !grid.fireSyntheticRowHeaderClickedEvent(event)) {\n            return;\n        }\n\n        var rowSelectable = grid.properties.rowSelection && (leftClick && grid.properties.autoSelectRows || rowNumberClick);\n\n        if (rowSelectable && event.isHeaderHandle) {\n            //global row selection\n            grid.toggleSelectAllRows();\n        } else if (rowSelectable && event.isDataRow)  {\n            // if we are in the fixed area, do not apply the scroll values\n            this.dragArmed = true;\n            this.extendSelection(grid, event.dataCell.y, event.primitiveEvent.detail.keys);\n        } else if (this.next) {\n            this.next.handleMouseDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleMouseDrag: function(grid, event) {\n        if (\n            this.dragArmed &&\n            grid.properties.rowSelection &&\n            !event.primitiveEvent.detail.isRightClick\n        ) {\n            //if we are in the fixed area do not apply the scroll values\n            this.lastDragRow = event.dataCell.y;\n            this.dragging = true;\n            this.currentDrag = event.primitiveEvent.detail.mouse;\n            this.checkDragScroll(grid, this.currentDrag);\n            this.handleMouseDragCellSelection(grid, this.lastDragRow, event.primitiveEvent.detail.keys);\n        } else if (this.next) {\n            this.next.handleMouseDrag(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleKeyDown: function(grid, event) {\n        var handler;\n        if (\n            grid.getLastSelectionType() === 'row' &&\n            (handler = this['handle' + event.detail.char])\n        ) {\n            handler.call(this, grid, event.detail);\n        } else if (this.next) {\n            this.next.handleKeyDown(grid, event);\n        }\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc Handle a mousedrag selection\n     * @param {Hypergrid} grid\n     * @param {Object} mouse - the event details\n     * @param {Array} keys - array of the keys that are currently pressed down\n     */\n    handleMouseDragCellSelection: function(grid, y, keys) {\n        var mouseY = grid.getMouseDown().y;\n\n        grid.clearMostRecentRowSelection();\n\n        grid.selectRow(mouseY, y);\n        grid.setDragExtent(grid.newPoint(0, y - mouseY));\n\n        grid.repaint();\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc this checks while were dragging if we go outside the visible bounds, if so, kick off the external autoscroll check function (above)\n     * @param {Hypergrid} grid\n     * @param {Object} mouse - the event details\n     */\n    checkDragScroll: function(grid, mouse) {\n        if (\n            grid.properties.scrollingEnabled &&\n            grid.getDataBounds().contains(mouse)\n        ) {\n            if (grid.isScrollingNow()) {\n                grid.setScrollingNow(false);\n            }\n        } else {\n            if (!grid.isScrollingNow()) {\n                grid.setScrollingNow(true);\n                this.scrollDrag(grid);\n            }\n        }\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc this function makes sure that while we are dragging outside of the grid visible bounds, we srcroll accordingly\n     * @param {Hypergrid} grid\n     */\n    scrollDrag: function(grid) {\n        if (!grid.isScrollingNow()) {\n            return;\n        }\n\n        var b = grid.getDataBounds(),\n            yOffset;\n\n        if (this.currentDrag.y < b.origin.y) {\n            yOffset = -1;\n        } else if (this.currentDrag.y > b.origin.y + b.extent.y) {\n            yOffset = 1;\n        }\n\n        if (yOffset) {\n            if (this.lastDragRow >= grid.getFixedRowCount()) {\n                this.lastDragRow += yOffset;\n            }\n            grid.scrollBy(0, yOffset);\n        }\n\n        this.handleMouseDragCellSelection(grid, this.lastDragRow, []); // update the selection\n        grid.repaint();\n        setTimeout(this.scrollDrag.bind(this, grid), 25);\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc extend a selection or create one if there isnt yet\n     * @param {Hypergrid} grid\n     * @param {Object} gridCell - the event details\n     * @param {Array} keys - array of the keys that are currently pressed down\n     */\n    extendSelection: function(grid, y, keys) {\n        if (!grid.abortEditing()) { return; }\n\n        var mouseY = grid.getMouseDown().y,\n            hasSHIFT = keys.indexOf('SHIFT') !== -1;\n\n        if (y < 0) { // outside of the grid?\n            return; // do nothing\n        }\n\n        if (hasSHIFT) {\n            grid.clearMostRecentRowSelection();\n            grid.selectRow(y, mouseY);\n            grid.setDragExtent(grid.newPoint(0, y - mouseY));\n        } else {\n            grid.toggleSelectRow(y, keys);\n            grid.setMouseDown(grid.newPoint(0, y));\n            grid.setDragExtent(grid.newPoint(0, 0));\n        }\n\n        grid.repaint();\n    },\n\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     */\n    handleDOWNSHIFT: function(grid) {\n        this.moveShiftSelect(grid, 1);\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleUPSHIFT: function(grid) {\n        this.moveShiftSelect(grid, -1);\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleLEFTSHIFT: function(grid) {},\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleRIGHTSHIFT: function(grid) {},\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleDOWN: function(grid) {\n        this.moveSingleSelect(grid, 1);\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleUP: function(grid) {\n        this.moveSingleSelect(grid, -1);\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleLEFT: function(grid) {},\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleRIGHT: function(grid) {\n        var mouseCorner = grid.getMouseDown().plus(grid.getDragExtent()),\n            maxColumns = grid.getColumnCount() - 1,\n            newX = grid.getHScrollValue(),\n            newY = mouseCorner.y;\n\n        newX = Math.min(maxColumns, newX);\n\n        grid.clearSelections();\n        grid.select(newX, newY, 0, 0);\n        grid.setMouseDown(grid.newPoint(newX, newY));\n        grid.setDragExtent(grid.newPoint(0, 0));\n\n        grid.repaint();\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc If we are holding down the same navigation key, accelerate the increment we scroll\n     * #### returns: integer\n     */\n    getAutoScrollAcceleration: function() {\n        var count = 1;\n        var elapsed = this.getAutoScrollDuration() / 2000;\n        count = Math.max(1, Math.floor(elapsed * elapsed * elapsed * elapsed));\n        return count;\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc set the start time to right now when we initiate an auto scroll\n     */\n    setAutoScrollStartTime: function() {\n        this.sbAutoStart = Date.now();\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc update the autoscroll start time if we haven't autoscrolled within the last 500ms otherwise update the current autoscroll time\n     */\n    pingAutoScroll: function() {\n        var now = Date.now();\n        if (now - this.sbLastAuto > 500) {\n            this.setAutoScrollStartTime();\n        }\n        this.sbLastAuto = Date.now();\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc answer how long we have been auto scrolling\n     * #### returns: integer\n     */\n    getAutoScrollDuration: function() {\n        if (Date.now() - this.sbLastAuto > 500) {\n            return 0;\n        }\n        return Date.now() - this.sbAutoStart;\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc Augment the most recent selection extent by (offsetX,offsetY) and scroll if necessary.\n     * @param {Hypergrid} grid\n     * @param {number} offsetX - x coordinate to start at\n     * @param {number} offsetY - y coordinate to start at\n     */\n    moveShiftSelect: function(grid, offsetY) {\n       this.moveSingleSelect(grid, offsetY, true);\n    },\n\n    /**\n     * @memberOf RowSelection.prototype\n     * @desc Replace the most recent row selection with a single cell row selection `offsetY` rows from the previous selection.\n     * @param {Hypergrid} grid\n     * @param {number} offsetY - y coordinate to start at\n     */\n    moveSingleSelect: function(grid, offsetY, shift) {\n        var selections = grid.selectionModel.rowSelectionModel.selection,\n            lastSelection = selections[selections.length - 1],\n            top = lastSelection[0],\n            bottom = lastSelection[1];\n\n        if (shift) {\n            var firstOffsetY = lastSelection.offsetY = lastSelection.offsetY || offsetY;\n            if (lastSelection.offsetY < 0) {\n                top += offsetY;\n            } else {\n                bottom += offsetY;\n            }\n        } else {\n            top += offsetY;\n            bottom += offsetY;\n        }\n\n        if (top < 0 || bottom >= grid.getRowCount()) {\n            return;\n        }\n\n        selections.length -= 1;\n        if (selections.length) {\n            lastSelection = selections[selections.length - 1];\n            delete lastSelection.offsetY;\n        }\n        grid.selectRow(top, bottom);\n        if (shift && top !== bottom) {\n            lastSelection = selections[selections.length - 1];\n            lastSelection.offsetY = firstOffsetY;\n        }\n\n        grid.setMouseDown(grid.newPoint(0, top));\n        grid.setDragExtent(grid.newPoint(0, bottom - top));\n\n        grid.scrollToMakeVisible(grid.properties.fixedColumnCount, offsetY < 0 ? top : bottom + 1); // +1 for partial row\n\n        moveCellSelection(grid);\n        grid.fireSyntheticRowSelectionChangedEvent();\n        grid.repaint();\n    },\n\n    isSingleRowSelection: function() {\n        return true;\n    }\n\n});\n\nfunction moveCellSelection(grid) {\n    var rows;\n\n    if (\n        grid.properties.collapseCellSelections &&\n        grid.properties.singleRowSelectionMode && // let's only attempt this when in this mode\n        !grid.properties.multipleSelections && // and only when in single selection mode\n        (rows = grid.getSelectedRows()).length && // user just selected a row (must be single row due to mode we're in)\n        grid.selectionModel.getSelections().length  // there was a cell region selected (must be the only one)\n    ) {\n        var rect = grid.selectionModel.getLastSelection(), // the only cell selection\n            x = rect.left,\n            y = rows[0], // we know there's only 1 row selected\n            width = rect.right - x,\n            height = 0, // collapse the new region to occupy a single row\n            fireSelectionChangedEvent = false;\n\n        grid.selectionModel.select(x, y, width, height, fireSelectionChangedEvent);\n        grid.repaint();\n    }\n}\n\nmodule.exports = RowSelection;\n","'use strict';\n\nvar Feature = require('./Feature');\n\n/**\n * @constructor\n */\nvar ThumbwheelScrolling = Feature.extend('ThumbwheelScrolling', {\n\n    /**\n     * @memberOf ThumbwheelScrolling.prototype\n     * @param {Hypergrid} grid\n     * @param {Object} event - the event details\n     */\n    handleWheelMoved: function(grid, e) {\n        if (!grid.properties.scrollingEnabled) {\n            return;\n        }\n\n        var primEvent = e.primitiveEvent,\n            deltaX = Math.sign(primEvent.wheelDeltaX || -primEvent.deltaX),\n            deltaY = Math.sign(primEvent.wheelDeltaY || -primEvent.deltaY);\n\n        if (deltaX || deltaY) {\n            grid.scrollBy(\n                -deltaX || 0, // 0 if NaN\n                -deltaY || 0\n            );\n        }\n    }\n\n});\n\n\nmodule.exports = ThumbwheelScrolling;\n","'use strict';\n\n/**\n * Behavior.js mixes this module into its prototype.\n * @mixin\n */\nexports.mixin = {\n    /**\n     * @summary Get the cell's own properties object.\n     * @desc May be undefined because cells only have their own properties object when at lest one own property has been set.\n     * @param {CellEvent|number} xOrCellEvent - Data x coordinate.\n     * @param {number} [y] - Grid row coordinate. _Omit when `xOrCellEvent` is a `CellEvent`._\n     * @param {DataModel} [dataModel=this.dataModel] - For use only when `xOrCellEvent` is _not_ a `CellEvent`: Provide a subgrid.\n     * @returns {undefined|object} The \"own\" properties of the cell at x,y in the grid. If the cell does not own a properties object, returns `undefined`.\n     * @memberOf Behavior#\n     */\n    getCellOwnProperties: function(xOrCellEvent, y, dataModel) {\n        if (arguments.length === 1) {\n            // xOrCellEvent is cellEvent\n            return xOrCellEvent.column.getCellOwnProperties(xOrCellEvent.dataCell.y, xOrCellEvent.subgrid);\n        } else {\n            // xOrCellEvent is x\n            return this.getColumn(xOrCellEvent).getCellOwnProperties(y, dataModel);\n        }\n    },\n\n    /**\n     * @summary Get the properties object for cell.\n     * @desc This is the cell's own properties object if found else the column object.\n     *\n     * If you are seeking a single specific property, consider calling {@link Behavior#getCellProperty} instead.\n     * @param {CellEvent|number} xOrCellEvent - Data x coordinate.\n     * @param {number} [y] - Grid row coordinate. _Omit when `xOrCellEvent` is a `CellEvent`._\n     * @param {DataModel} [dataModel=this.dataModel] - For use only when `xOrCellEvent` is _not_ a `CellEvent`: Provide a subgrid.\n     * @return {object} The properties of the cell at x,y in the grid.\n     * @memberOf Behavior#\n     */\n    getCellProperties: function(xOrCellEvent, y, dataModel) {\n        if (arguments.length === 1) {\n            // xOrCellEvent is cellEvent\n            return xOrCellEvent.properties;\n        } else {\n            // xOrCellEvent is x\n            return this.getColumn(xOrCellEvent).getCellProperties(y, dataModel);\n        }\n    },\n\n    /**\n     * @summary Return a specific cell property.\n     * @desc If there is no cell properties object, defers to column properties object.\n     * @param {CellEvent|number} xOrCellEvent - Data x coordinate.\n     * @param {number} [y] - Grid row coordinate._ Omit when `xOrCellEvent` is a `CellEvent`._\n     * @param {string} key - Name of property to get. _When `y` omitted, this param promoted to 2nd arg._\n     * @param {DataModel} [dataModel=this.dataModel] - For use only when `xOrCellEvent` is _not_ a `CellEvent`: Provide a subgrid.\n     * @return {object} The specified property for the cell at x,y in the grid.\n     * @memberOf Behavior#\n     */\n    getCellProperty: function(xOrCellEvent, y, key, dataModel) {\n        if (typeof xOrCellEvent === 'object') {\n            key = y;\n            return xOrCellEvent.properties[key];\n        } else {\n            return this.getColumn(xOrCellEvent).getCellProperty(y, key, dataModel);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc update the data at point x, y with value\n     * @param {CellEvent|number} xOrCellEvent - Data x coordinate.\n     * @param {number} [y] - Grid row coordinate. _Omit when `xOrCellEvent` is a `CellEvent`._\n     * @param {Object} properties - Hash of cell properties. _When `y` omitted, this param promoted to 2nd arg._\n     * @param {DataModel} [dataModel=this.dataModel] - For use only when `xOrCellEvent` is _not_ a `CellEvent`: Provide a subgrid.\n     */\n    setCellProperties: function(xOrCellEvent, y, properties, dataModel) {\n        if (typeof xOrCellEvent === 'object') {\n            properties = y;\n            return xOrCellEvent.column.setCellProperties(xOrCellEvent.dataCell.y, properties, xOrCellEvent.subgrid);\n        } else {\n            return this.getColumn(xOrCellEvent).setCellProperties(y, properties, dataModel);\n        }\n    },\n\n    /**\n     * @memberOf Behavior#\n     * @desc update the data at point x, y with value\n     * @param {CellEvent|number} xOrCellEvent - Data x coordinate.\n     * @param {number} [y] - Grid row coordinate. _Omit when `xOrCellEvent` is a `CellEvent`._\n     * @param {Object} properties - Hash of cell properties. _When `y` omitted, this param promoted to 2nd arg._\n     * @param {DataModel} [dataModel=this.dataModel] - For use only when `xOrCellEvent` is _not_ a `CellEvent`: Provide a subgrid.\n     */\n    addCellProperties: function(xOrCellEvent, y, properties, dataModel) {\n        if (typeof xOrCellEvent === 'object') {\n            properties = y;\n            return xOrCellEvent.column.addCellProperties(xOrCellEvent.dataCell.y, properties, xOrCellEvent.subgrid); // y omitted so y here is actually properties\n        } else {\n            return this.getColumn(xOrCellEvent).addCellProperties(y, properties, dataModel);\n        }\n    },\n\n    /**\n     * @summary Set a specific cell property.\n     * @desc If there is no cell properties object, defers to column properties object.\n     *\n     * NOTE: For performance reasons, renderer's cell event objects cache their respective cell properties objects. This method accepts a `CellEvent` overload. Whenever possible, use the `CellEvent` from the renderer's cell event pool. Doing so will reset the cell properties object cache.\n     *\n     * If you use some other `CellEvent`, the renderer's `CellEvent` properties cache will not be automatically reset until the whole cell event pool is reset on the next call to {@link Renderer#computeCellBoundaries}. If necessary, you can \"manually\" reset it by calling {@link Renderer#resetCellPropertiesCache|resetCellPropertiesCache(yourCellEvent)} which searches the cell event pool for one with matching coordinates and resets the cache.\n     *\n     * The raw coordinates overload calls the `resetCellPropertiesCache(x, y)` overload for you.\n     * @param {CellEvent|number} xOrCellEvent - `CellEvent` or data x coordinate.\n     * @param {number} [y] - Grid row coordinate. _Omit when `xOrCellEvent` is a `CellEvent`._\n     * @param {string} key - Name of property to get. _When `y` omitted, this param promoted to 2nd arg._\n     * @param value\n     * @param {DataModel} [dataModel=this.dataModel] - For use only when `xOrCellEvent` is _not_ a `CellEvent`: Provide a subgrid.\n     * @memberOf Behavior#\n     */\n    setCellProperty: function(xOrCellEvent, y, key, value, dataModel) {\n        var cellOwnProperties;\n        if (typeof xOrCellEvent === 'object') {\n            value = key;\n            key = y;\n            cellOwnProperties = xOrCellEvent.setCellProperty(key, value);\n        } else {\n            cellOwnProperties = this.getColumn(xOrCellEvent).setCellProperty(y, key, value, dataModel);\n            this.grid.renderer.resetCellPropertiesCache(xOrCellEvent, y, dataModel);\n        }\n        return cellOwnProperties;\n    }\n};\n","'use strict';\n\n/**\n * Behavior.js mixes this module into its prototype.\n * @mixin\n */\nexports.mixin = {\n\n    getSchema: function() {\n        return this.dataModel.getSchema();\n    },\n\n    setSchema: function(newSchema) {\n        this.dataModel.setSchema(newSchema);\n    },\n\n    /**\n     * @summary Gets the number of rows in the data subgrid.\n     * @see {@link https://fin-hypergrid.github.io/doc/DataModel.html#getRowCount|getRowCount}\n     * @memberOf Behavior#\n     */\n    getRowCount: function() {\n        return this.dataModel.getRowCount();\n    },\n\n    /**\n     * @summary Get the value at cell (x,y).\n     * @desc When the last parameter (see `dataModel` below) is omitted, this method:\n     * * Is backwards compatible to the v2 version.\n     * * Does _not_ default to the data subgrid — although you can provide it explicitly (`this.behavior.dataModel`).\n     * @param {number} x - The horizontal grid coordinate\n     * @param {number} y - The vertical coordinate.\n     * @param {DataModel} [dataModel] - `x` and `y` are _data cell coordinates_ in the given subgrid data model. If If omitted, `x` and `y` are _grid cell coordinates._\n     * @returns {*} The raw cell data.\n     * @memberOf Behavior#\n     */\n    getValue: function(x, y, dataModel) {\n        if (dataModel) {\n            return dataModel.getValue(x, y);\n        } else {\n            var cellEvent = new this.CellEvent,\n                visible = cellEvent.resetDataXY(x, y, dataModel);\n            if (visible) {\n                return cellEvent.value;\n            }\n        }\n    },\n\n    /**\n     * @summary Update the value at cell (x,y) with the given value.\n     * @desc When the last parameter (see `dataModel` below) is omitted, this method:\n     * * Is backwards compatible to the v2 version.\n     * * Does _not_ default to the data subgrid — although you can provide it explicitly (`this.behavior.dataModel`).\n     * @param {number} x - The horizontal coordinate.\n     * @param {number} y - The vertical coordinate.\n     * @param {*} value - New cell data.\n     * @param {DataModel} [dataModel] - `x` and `y` are _data cell coordinates_ in the given subgrid data model. If If omitted, `x` and `y` are _grid cell coordinates._\n     * @memberOf Behavior#\n     */\n    setValue: function(x, y, value, dataModel) {\n        if (dataModel) {\n            dataModel.setValue(x, y, value);\n        } else {\n            var cellEvent = new this.CellEvent,\n                visible = cellEvent.resetDataXY(x, y, dataModel);\n            if (visible) {\n                cellEvent.value = value;\n            }\n        }\n    },\n\n    /**\n     * @summary Calls `apply()` on the data model.\n     * @see {@link https://fin-hypergrid.github.io/doc/DataModel.html#reindex|reindex}\n     * @memberOf Behavior#\n     */\n    reindex: function() {\n        this.dataModel.apply();\n    },\n\n    /**\n     * Retrieve a data row from the data model.\n     * @see {@link https://fin-hypergrid.github.io/doc/DataModel.html#getRow|getRow}\n     * @memberOf Behavior#\n     * @return {dataRowObject} The data row object at y index.\n     * @param {number} y - the row index of interest\n     */\n    getRow: function(y) {\n        return this.dataModel.getRow(y);\n    },\n\n    /**\n     * Retrieve all data rows from the data model.\n     * > Use with caution!\n     * @see {@link https://fin-hypergrid.github.io/doc/DataModel.html#getData|getData}\n     * @return {dataRowObject[]}\n     * @memberOf Behavior#\n     */\n    getData: function() {\n        return this.dataModel.getData();\n    },\n\n};\n","'use strict';\n\nvar dataModels = require('../dataModels/index');\n\n/** @typedef subgridConstructorRef\n * @summary Type definition.\n * @desc One of:\n * * **`function` type** - Assumed to already be a data model constructor.\n * * **`string` type** - The name of a data model \"class\" (constructor) registered in the {@link src/dataModels} namespace. Used to look up the constructor in the namespace.\n */\n\n/** @typedef subgridSpec\n * @summary Type definition.\n * @desc One of:\n * * **`object` type** _(except when an array)_ - Assumed to be a reference to an already-instantiated data model. Used as is.\n * * **`'data'` special value** - Set to the data subgrid (_i.e.,_ the behavior's already-instantiated data model).\n * * **{@link subgridConstructorRef}** _(see)_ - The constructor ref is resolved and called with the `new` keyword + a reference to the grid as the sole parameter.\n * * **`Array` object** — Accommodates data model constructor arguments. The constructor ref is resolved and called with the `new` keyword + a reference to the grid as the first parameter + the remaining elements as additional parameters. (If you don't have remaining elements, don't give an array here; just provide a simple `subgridConstructorRef` instead.) The array should have two or more elements:\n *   * The first element is a {@link subgridConstructorRef}.\n *   * Remaining elements are used as additional parameters to the constructor.\n */\n\n/**\n * Behavior.js mixes this module into its prototype.\n * @mixin\n */\nexports.mixin = {\n    /**\n     * An array where each element represents a subgrid to be rendered in the hypergrid.\n     *\n     * The list should always include at least one \"data\" subgrid, typically {@link Behavior#dataModel|dataModel}.\n     * It may also include zero or more other types of subgrids such as header, filter, and summary subgrids.\n     *\n     * This object also sports a dictionary of subgrids in `lookup` property where each dictionary key is one of:\n     * * **`subgrid.name`** (for those that have a defined name, which is presumed to be unique)\n     * * **`subgrid.type`** (not unique, so if you plan on having multiple, name them!)\n     * * **`'data'`** for the (one and only) data subgrid when unnamed (note that data subgrids have no `type`)\n     *\n     * The setter:\n     * * \"Enlivens\" any constructors (see {@link Behavior~createSubgrid|createSubgrid} for details).\n     * * Reconstructs the dictionary.\n     * * Calls {@link Behavior#shapeChanged|shapeChanged()}.\n     *\n     * @param {subgridSpec[]} subgridSpecs\n     *\n     * @type {DataModel[]}\n     *\n     * @memberOf Behavior#\n     */\n    set subgrids(subgridSpecs) {\n        var subgrids = this._subgrids = [];\n\n        subgrids.lookup = {};\n\n        subgridSpecs.forEach(function(spec) {\n            if (spec) {\n                subgrids.push(this.createSubgrid(spec));\n            }\n        }, this);\n\n        this.shapeChanged();\n    },\n    get subgrids() {\n        return this._subgrids;\n    },\n\n    /**\n     * @summary Maps a `subgridSpec` to a data model.\n     * @desc The spec may describe either an existing data model, or a constructor for a new data model.\n     * @param {subgridSpec} spec\n     * @returns {DataModel} A data model.\n     * @memberOf Behavior#\n     */\n    createSubgrid: function(spec, args) {\n        var subgrid, Constructor, variableArgArray;\n\n        if (spec === 'data') {\n            subgrid = this.dataModel;\n        } else if (spec instanceof Array && spec.length) {\n            Constructor = derefSubgridRef.call(this, spec[0]);\n            variableArgArray = spec.slice(1);\n            subgrid = this.createApply(Constructor, variableArgArray, undefined, { grid: this.grid });\n            subgrid = this.decorateDataModel(subgrid);\n        } else if (typeof spec === 'object') {\n            subgrid = spec;\n        } else {\n            Constructor = derefSubgridRef.call(this, spec);\n            variableArgArray = Array.prototype.slice.call(arguments, 1);\n            subgrid = this.createApply(Constructor, variableArgArray, undefined, { grid: this.grid });\n            subgrid = this.decorateDataModel(subgrid);\n        }\n\n        // undefined type is data\n        if (!subgrid.type) {\n            subgrid.type = 'data';\n        }\n\n        // make dictionary lookup entry\n        var key = subgrid.type === 'data' && subgrid.type || subgrid.name || subgrid.type;\n        this._subgrids.lookup[key] = this._subgrids.lookup[key] || subgrid; // only save first with this key\n\n        // make isType boolean\n        subgrid['is' + subgrid.type[0].toUpperCase() + subgrid.type.substr(1)] = true;\n\n        return subgrid;\n    },\n\n    /**\n     * @summary Gets the number of \"header rows\".\n     * @desc Defined as the sum of all rows in all subgrids before the (first) data subgrid.\n     * @memberOf Local.prototype\n     */\n    getHeaderRowCount: function() {\n        var result = 0;\n\n        this.subgrids.find(function(subgrid) {\n            if (subgrid.isData) {\n                return true; // stop\n            }\n            result += subgrid.getRowCount();\n        });\n\n        return result;\n    },\n\n    /**\n     * @summary Gets the number of \"footer rows\".\n     * @desc Defined as the sum of all rows in all subgrids after the (last) data subgrid.\n     * @memberOf Local.prototype\n     */\n    getFooterRowCount: function() {\n        var gotData;\n        return this.subgrids.reduce(function(rows, subgrid) {\n            if (gotData && !subgrid.isData) {\n                rows += subgrid.getRowCount();\n            } else {\n                gotData = subgrid.isData;\n            }\n            return rows;\n        }, 0);\n    },\n\n    /**\n     * @summary Gets the total number of logical rows.\n     * @desc Defined as the sum of all rows in all subgrids.\n     * @memberOf Local.prototype\n     */\n    getLogicalRowCount: function() {\n        return this.subgrids.reduce(function(rows, subgrid) {\n            return (rows += subgrid.getRowCount());\n        }, 0);\n    }\n};\n\n/**\n * @summary Resolves a subgrid constructor reference.\n * @desc The ref is resolved to a data model constructor.\n * @this {Behavior}\n * @param {subgridConstructorRef} ref\n * @returns {DataModel} A data model constructor.\n * @memberOf Behavior~\n */\nfunction derefSubgridRef(ref) {\n    var Constructor;\n    switch (typeof ref) {\n        case 'string':\n            Constructor = dataModels.get(ref);\n            break;\n        case 'function':\n            Constructor = ref;\n            break;\n        default:\n            throw new this.HypergridError('Expected subgrid ref to be registered name or constructor, but found ' + typeof ref + '.');\n    }\n    return Constructor;\n}\n","'use strict';\n\nvar Registry = require('../lib/Registry');\n\n/**\n * @classdesc Registry of cell editor constructors.\n * @param {object} options\n * @constructor\n */\nvar DataModels = Registry.extend('DataModels', {\n\n    BaseClass: require('datasaur-base'),\n\n    initialize: function() {\n        // preregister the standard cell editors\n        this.add(require('./HeaderSubgrid'));\n    }\n\n});\n\nmodule.exports = new DataModels;\n","'use strict';\n\nvar DataSourceBase = require('datasaur-base');\n\n/**\n * @implements DataModel\n * @param {Hypergrid} grid\n * @param {object} [options]\n * @param {string} [options.name]\n * @constructor\n */\nvar HeaderSubgrid = DataSourceBase.extend('HeaderSubgrid', {\n    type: 'header',\n\n    initialize: function(nextDataSource, options) {\n        this.grid = options.grid;\n    },\n\n    getRowCount: function() {\n        return this.grid.properties.showHeaderRow ? 1 : 0;\n    },\n\n    getValue: function(x, y) {\n        var column = this.grid.behavior.getColumn(x);\n        return column.header || column.name; // use field name when header undefined\n    },\n\n    setValue: function(x, y, value) {\n        if (y < this.getRowCount()) {\n            this.grid.behavior.getColumn(x).header = value;\n        }\n    },\n\n    getRow: function(y) {\n        return this.dataRow;\n    }\n});\n\nmodule.exports = HeaderSubgrid;\n","'use strict';\n\nvar Behavior = require('../Behavior');\n\n/** @memberOf Local~\n * @default require('datasaur-local')\n * @type {function|function[]}\n * @summary Default data model.\n * @desc The default data model for newly instantiated `Hypergrid` objects without `DataModel` or `dataModel` options specified. Scheduled for eventual deprecation at which point one of the options will be required.\n */\nvar DefaultDataModel = require('datasaur-local');\n\nvar decorators = require('./decorators');\nvar dispatchDataModelEvent = require('./dispatchDataModelEvent');\n\n\n/**\n * This class mimics the {@link DataModel}.\n * > This constructor (actually {@link Local#initialize}) will be called upon instantiation of this class or of any class that extends from this class. See {@link https://github.com/joneit/extend-me|extend-me} for more info.\n * @constructor\n * @extends Behavior\n */\nvar Local = Behavior.extend('Local', {\n\n    initialize: function(grid, options) {\n        this.setData(options);\n    },\n\n    /**\n     * @summary Convenience getter/setter.\n     * @desc Calls the data model's `getSchema`/`setSchema` methods.\n     * @see {@link https://fin-hypergrid.github.io/doc/DataModel.html#getSchema|getSchema}\n     * @see {@link https://fin-hypergrid.github.io/doc/DataModel.html#setSchema|setSchema}\n     * @type {Array}\n     * @memberOf Local#\n     */\n    get schema() {\n        return this.dataModel.getSchema();\n    },\n    set schema(newSchema) {\n        this.dataModel.setSchema(newSchema);\n    },\n\n    dataModelEventHandlers: require('./events').dataModelEventHandlers, // for adding additional event handlers\n\n    createColumns: function() {\n        this.super.createColumns.call(this, createColumns);\n    },\n\n    /**\n     * @summary Build the `$rowProxy$` lazy getter collection based on current `schema`.\n     *\n     * @desc The `$rowProxy$` lazy getter collection is returned by the `getRow` fallback.\n     *\n     * `$rowProxy$` collection is a dataRow-like object (a hash of column values keyed by column name)\n     * for the particular row whose index is in the `$y$` property.\n     *\n     * The row index can be conveniently set with a call to `fallbacks.getRow()`,\n     * which sets the row index and returns the accessor itself.\n     *\n     * `$y$` is a \"hidden\" property, non-enumerable it won't show up in `Object.keys(...)`.\n     *\n     * This fallback implementation is \"lazy\": The enumerable members are all getters that invoke `getValue` and setters that invoke `setValue`.\n     *\n     * This function should be called each time a new schema is set.\n     */\n    createDataRowProxy: function() {\n        var dataModel = this.dataModel,\n            dataRowProxy = {};\n\n        Object.defineProperty(dataRowProxy, '$y$', {\n            enumerable: false, // not a real data field\n            writable: true // set later on calls to fallbacks.getRow(y) to y\n        });\n\n        this.schema.forEach(function(columnSchema, columnIndex) {\n            Object.defineProperty(dataRowProxy, columnSchema.name, {\n                enumerable: true, // is a real data field\n                get: function() {\n                    return dataModel.getValue(columnIndex, this.$y$);\n                },\n                set: function(value) {\n                    return dataModel.setValue(columnIndex, this.$y$, value);\n                }\n            });\n        });\n\n        dataModel.$rowProxy$ = dataRowProxy;\n    },\n\n    /**\n     * Create a new data model\n     * @param {object} [options]\n     * @param {DataModel} [options.dataModel] - A fully instantiated data model object.\n     * @param {function|function[]} [options.DataModel=DefaultDataModel] - Data model constructor, or array of data model constructors for a multi-stage data model, to be used to instantiate the data model unless a fully instantiated `options.dataModel` was given.\n     * @returns {boolean} `true` if the data model has changed.\n     * @memberOf Local#\n     */\n    getNewDataModel: function(options) {\n        var dataModel;\n\n        options = options || {};\n\n        if (options.dataModel) {\n            dataModel = options.dataModel;\n        } else {\n            [].concat(options.DataModel || DefaultDataModel).forEach(function(DataModel) {\n                dataModel = new DataModel(dataModel);\n            });\n        }\n\n        return dataModel;\n    },\n\n    /**\n     * @summary Attach a data model object to the grid.\n     * @desc Installs data model events, fallbacks, and hooks.\n     *\n     * Called from {@link Behavior#reset}.\n     * @this {Behavior}\n     * @param {object} [options]\n     * @param {DataModel} [options.dataModel] - A fully instantiated data model object.\n     * @param {function} [options.DataModel=require('datasaur-local')] - Data model will be instantiated from this constructor unless `options.dataModel` was given.\n     * @param {DataModel} [options.metadata] - Passed to {@link DataModel#setMetadataStore setMetadataStore}.\n     * @returns {boolean} `true` if the data model has changed.\n     * @memberOf Local#\n     */\n    resetDataModel: function(options) {\n        var newDataModel = this.getNewDataModel(options),\n            changed = newDataModel && newDataModel !== this.dataModel;\n\n        if (changed) {\n            this.dataModel = this.decorateDataModel(newDataModel, options);\n            decorators.addDeprecationWarnings.call(this);\n            decorators.addFriendlierDrillDownMapKeys.call(this);\n        }\n\n        return changed;\n    },\n\n    /**\n     * Decorate data model object, initialize its metadata store, and subscribe to its events.\n     * @see {@link module:decorators.injectPolyfills injectPolyfills}\n     * @see {@link module:decorators.injectCode injectCode}\n     * @see {@link module:decorators.injectDefaulthooks injectDefaulthooks}\n     * @param {DataModel} newDataModel\n     * @param {DataModel} [options.metadata] - Passed to {@link DataModel#setMetadataStore setMetadataStore}.\n     * @memberOf Local#\n     */\n    decorateDataModel: function(newDataModel, options) {\n        decorators.injectPolyfills(newDataModel);\n        decorators.injectCode(newDataModel);\n        decorators.injectDefaulthooks(newDataModel);\n\n        newDataModel.setMetadataStore(options && options.metadata);\n\n        this.boundDispatchEvent = this.boundDispatchEvent || dispatchDataModelEvent.bind(this.grid);\n        newDataModel.addListener(this.boundDispatchEvent);\n\n        return newDataModel;\n    },\n\n    /**\n     * @summary Map of drill down characters used by the data model.\n     * @see {@link https://fin-hypergrid.github.io/doc/DataModel.html#charMap|charMap}\n     * @type {{OPEN:string, CLOSE:string, INDENT:string}}\n     * @memberOf Local#\n     */\n    get charMap() {\n        return this.dataModel.drillDownCharMap;\n    },\n\n    /**\n     * @summary Calls `click` on the data model if column is a tree column.\n     * @desc Sends clicked cell's coordinates to the data model.\n     *\n     * To tell if the click was consumed by the data model, add event listeners for {@link DataModel#fin-hypergrid-data-loaded} and/or {@link DataModel#fin-hypergrid-data-postreindex}.\n     * @see {@link https://fin-hypergrid.github.io/doc/DataModel.html#toggleRow toggleRow}\n     * @param {CellEvent} event\n     * @returns {@link DataModel#toggleRow}'s return value which may or may not be implemented.\n     * @memberOf Local#\n     */\n    cellClicked: function(event) {\n        return this.dataModel.toggleRow(event.dataCell.y, event.dataCell.x);\n    },\n\n    hasTreeColumn: function() {\n        return this.dataModel.isTree() && this.grid.properties.showTreeColumn;\n    }\n\n});\n\n/**\n * @this {Local}\n */\nfunction createColumns() {\n    this.schema.forEach(function(columnSchema) {\n        this.addColumn(columnSchema);\n    }, this);\n\n    this.columnEnumSynchronize();\n}\n\nLocal.prototype.mixIn(require('./columnEnum').mixin);\nLocal.prototype.mixIn.call(Local, require('./columnEnum').mixInShared);\n\nmodule.exports = Local;\n","'use strict';\n\n\n/**\n * @typedef {object} NormalizedDataModelEvent\n * @property {string} type - Event string.\n */\n\n/**\n * @module decorators\n */\n\nvar hooks = require('./hooks');\nvar fallbacks = require('./fallbacks');\nvar polyfills = require('./polyfills');\n\n\nvar warned = {};\n\n\n/**\n * Injects missing utility functions into the data model.\n *\n * Typically, data models are extended from `datasaur-base` which supplies the utility functions. However, extending from `datasaur-base` is not a requirement and for those data models that do not, the necessary utility functions are injected here.\n *\n * The only utility function so injected at this time is `install`, which is used by:\n * * {@link module:decorators.injectCode injectCode} to:\n *    * Inject fallbacks for missing non-essential data model methods\n *    * Bind the data model's `dispatchEvent` method to the grid instance\n * * {@link module:decorators.injectDefaulthooks injectDefaulthooks} to:\n *    * Inject a default for the `getCell` hook\n *    * Inject a default for the `getCellEditorAt` hook\n *\n * @this {Local}\n * @param {DataModel} dataModel\n * @memberOf module:decorators\n */\nfunction injectPolyfills(dataModel) {\n    Object.keys(polyfills).forEach(function(key) {\n        if (!dataModel[key]) {\n            dataModel[key] = polyfills[key];\n        }\n    });\n}\n\n/**\n * Inject fallback methods into data model when not implemented by data model.\n * @this {Local}\n * @param {DataModel} dataModel\n * @memberOf module:decorators\n */\nfunction injectCode(dataModel) {\n    dataModel.install(fallbacks, { inject: true });\n}\n\n/**\n * @param {DataModel} dataModel\n * @this {Local}\n * @memberOf module:decorators\n */\nfunction injectDefaulthooks(dataModel) {\n    dataModel.install(hooks, { inject: true });\n}\n\n/**\n * @summary Add deprecation warnings for deprecated legacy data model properties.\n * @desc This method may be removed in a future version whence all deprecations are removed.\n * @this {Local}\n * @memberOf module:decorators\n */\nfunction addDeprecationWarnings() {\n    var grid = this.grid;\n\n    Object.defineProperties(this.dataModel, {\n\n        grid: {\n            configurable: true,\n            enumerable: false,\n            get: function() {\n                if (!warned.grid) {\n                    console.warn('dataModel.grid has been deprecated as of v3.0.0. (Will be removed in a future release.) Data models should have no direct knowledge of or access to the grid. (If your data model needs to call grid methods, add a data event to your grid with `grid.addEventListener(\\'fin-hypergrid-data-my-event\\', myHandler)` and trigger it from your data model with `this.dispatchEvent(\\'fin-hypergrid-data-my-event\\')` or `this.dispatchEvent({ type: \\'fin-hypergrid-data-my-event\\' })`. If you need access to the grid object from within a `getCell` or `getCellEditAt` override, define `grid` in the same closure as the override.)');\n                    warned.grid = true;\n                }\n                return grid;\n            }\n        },\n\n        dataSource: {\n            configurable: true,\n            enumerable: false,\n            get: function() {\n                if (!warned.dataSource) {\n                    console.warn('dataModel.dataSource has been deprecated as of 3.0.0 in favor of `dataModel`. (Will be removed in a future release.) The _external_ data model, formerly `grid.behavior.dataModel.dataSource`, is now `grid.behavior.dataModel`.');\n                    warned.dataSource = true;\n                }\n                return this.dataModel;\n            }\n        }\n\n    });\n}\n\n// for app layer access to drill down chars, provide friendlier keys than data model normally supports in `drillDownCharMap`.\nvar friendlierDrillDownMapKeys = {\n    true: 'OPEN',\n    false: 'CLOSE',\n    null: 'INDENT'\n};\n\n/**\n * @this {Local}\n * @memberOf module:decorators\n */\nfunction addFriendlierDrillDownMapKeys() {\n    var charMap = this.dataModel.drillDownCharMap;\n    if (charMap) {\n        Object.keys(friendlierDrillDownMapKeys).forEach(function(key) {\n            if (key in charMap) {\n                var friendlierKey = friendlierDrillDownMapKeys[key];\n                if (!(friendlierKey in charMap)) {\n                    Object.defineProperty(charMap, friendlierKey, {\n                        get: function() { return this[key]; },\n                        set: function(s) { this[key] = s; }\n                    });\n                }\n            }\n        });\n    }\n}\n\n\nmodule.exports = {\n    injectPolyfills: injectPolyfills,\n    injectCode: injectCode,\n    addDeprecationWarnings: addDeprecationWarnings,\n    addFriendlierDrillDownMapKeys: addFriendlierDrillDownMapKeys,\n    injectDefaulthooks: injectDefaulthooks\n};\n","'use strict';\n\n/**\n * @module hooks\n */\n\n\n/**\n * Custom implementations can return with a call to the default implementation:\n * ```js\n * var getCell = require('fin-hypergrid/src/behaviors/dataModel/hooks').getCell;\n * function myCustomGetCell(config, rendererName) {\n *     // custom logic here that mutates config and/or renderName\n *     return getCell(config, rendererName);\n * }\n * ```\n * Alternatively, copy in the default implementation body (a one-liner):\n * ```js\n * function myCustomGetCell(config, rendererName) {\n *     // custom logic here that mutates config and/or renderName\n *     return config.grid.cellRenderers.get(rendererName);\n * }\n * ```\n * To set the default implementation for all new grid instances, override this function in place:\n * ```js\n * var hooks = require('fin-hypergrid/src/behaviors/dataModel/hooks');\n * hooks.getCell = myCustomDefaultGetCell;\n * ```\n * @this {DataModel}\n * @memberOf module:hooks\n */\nexports.getCell = function(config, rendererName) {\n    return config.grid.cellRenderers.get(rendererName);\n};\n\n\n/**\n * Custom implementations can return with a call to the default implementation:\n * ```js\n * var getCellEditorAt = require('fin-hypergrid/src/behaviors/dataModel/hooks').getCellEditorAt;\n * function myCustomGetCellEditorAt(columnIndex, rowIndex, editorName, cellEvent) {\n *     // custom logic here, may mutate config and/or renderName\n *     return getCellEditorAt(columnIndex, rowIndex, editorName, cellEvent);\n * }\n * ```\n * Alternatively, copy in the default implementation body (a one-liner):\n * ```js\n * function myCustomGetCellEditorAt(columnIndex, rowIndex, editorName, cellEvent) {\n *     // custom logic here, may mutate editorName\n *     return cellEvent.grid.cellEditors.create(editorName, cellEvent);\n * }\n * ```\n * To set the default implementation for all new grid instances, override this function in place:\n * ```js\n * var hooks = require('fin-hypergrid/src/behaviors/dataModel/hooks');\n * hooks.getCellEditorAt = myCustomDefaultGetCellEditorAt;\n * ```\n * @this {DataModel}\n * @memberOf module:hooks\n */\nexports.getCellEditorAt = function(columnIndex, rowIndex, editorName, cellEvent) {\n    return cellEvent.grid.cellEditors.create(editorName, cellEvent);\n};\n","'use strict';\n\n/**\n * @module fallbacks\n *\n * @desc {@link Behavior#resetDataModel resetDataModel()} inserts each of these catcher methods into the new data model when not otherwise implemented, which allows Hypergrid to indiscriminately call these otherwise missing methods on the data model without fear of the call failing.\n */\nmodule.exports = {\n    /** @implements DataModel#apply */\n    apply: function() {},\n\n    /** @implements DataModel#isTree */\n    isTree: function() {\n        return false;\n    },\n\n    /** @implements DataModel#isTreeCol */\n    isTreeCol: function(columnIndex) {\n        return false;\n    },\n\n    /** @implements DataModel#toggleRow */\n    toggleRow: function(rowIndex, columnIndex, expand) {},\n\n    /** @implements DataModel#getColumnCount */\n    getColumnCount: function() {\n        return this.getSchema().length;\n    },\n\n    /** @implements DataModel#getRow */\n    getRow: function(y) {\n        this.$rowProxy$.$y$ = y;\n        return this.$rowProxy$;\n    },\n\n    /** @implements DataModel#getData */\n    getData: function(metadataFieldName) {\n        var y, Y = this.getRowCount(),\n            row, rows = new Array(Y),\n            metadata;\n\n        for (y = 0; y < Y; y++) {\n            row = this.getRow(y);\n            if (row) {\n                rows[y] = Object.assign({}, row);\n                if (metadataFieldName) {\n                    metadata = this.getRowMetadata(y);\n                    if (metadata) {\n                        rows[y][metadataFieldName] = metadata;\n                    }\n                }\n            }\n        }\n\n        return rows;\n    },\n\n    setData: function(data) {\n        // fail silently because Local.js::setData currently calls this for every subgrid\n    },\n\n    setValue: function(x, y, value) {\n        console.warn('dataModel.setValue(' + x + ', ' + y + ', \"' + value + '\") called but no implementation. Data not saved.');\n    },\n\n    setSchema: function(schema) {\n        console.warn('dataModel.setSchema(schema) called but no implementation. Schema not updated.');\n    },\n\n    /** @implements DataModel#getRowIndex */\n    getRowIndex: function(y) {\n        return y;\n    },\n\n    /** @implements DataModel#getRowMetadata */\n    getRowMetadata: function(y, prototype) {\n        return this.metadata[y] || prototype !== undefined && (this.metadata[y] = Object.create(prototype));\n    },\n\n    /** @implements DataModel#getMetadataStore */\n    getMetadataStore: function() {\n        return this.metadata;\n    },\n\n    /** @implements DataModel#setRowMetadata */\n    setRowMetadata: function(y, metadata) {\n        if (metadata) {\n            this.metadata[y] = metadata;\n        } else {\n            delete this.metadata[y];\n        }\n        return metadata;\n    },\n\n    /** @implements DataModel#setMetadataStore */\n    setMetadataStore: function(newMetadataStore) {\n        this.metadata = newMetadataStore || [];\n    }\n};\n","'use strict';\n\nfunction silent() {}\n\nmodule.exports = {\n    install: function(api) {\n        if (!api) {\n            return;\n        }\n\n        var isArray = Array.isArray(api),\n            keys = isArray ? api : Object.keys(api).filter(function(key) {\n                return typeof api[key] === 'function' &&\n                    key !== 'constructor' &&\n                    key !== 'initialize';\n            });\n\n        keys.forEach(function(key) {\n            if (!this[key]) {\n                this[key] = isArray ? silent : api[key];\n            }\n        }, this);\n    },\n\n    dispatchEvent: function(nameOrEvent) {\n        if (this.handlers) {\n            this.handlers.forEach(function(handler) {\n                handler.call(this, nameOrEvent);\n            }, this);\n        }\n    },\n\n    addListener: function(handler) {\n        if (!this.handlers) {\n            this.handlers = [handler];\n        } else if (this.handlers.indexOf(handler) < 0) {\n            this.handlers.push(handler);\n        }\n    },\n\n    removeListener: function(handler) {\n        if (this.handlers && this.handlers.length) {\n            var index = this.handlers.indexOf(handler);\n            if (index >= 0) {\n                delete this.handlers[index];\n            }\n        }\n    },\n\n    removeAllListeners: function() {\n        if (this.handlers) {\n            this.handlers.length = 0;\n        }\n    }\n};\n","'use strict';\n\nvar dataModelEventHandlers = require('./events');\nvar dispatchGridEvent = require('../../lib/dispatchGridEvent');\n\n\nvar REGEX_DATA_EVENT_STRING = /^fin-hypergrid-(data|schema)(-[a-z]+)+$/;\n\n/**\n * @summary Hypergrid data model event handler.\n * @desc This function is not called by Hypergrid.\n * Rather, it is handed to the data model (by {@link module:decorators.injectCode injectCode} as `dispatchEvent`) to issue callbacks to the grid.\n *\n * This handler:\n * 1. Checks the event string to make sure it conforms to the expected syntax:\n *    * Starts with `fin-hypergrid-data-` or `fin-hypergrid-schema-`\n *    * Includes only lowercase letters and hyphens\n * 2. Calls a handler in the {@link dataModelEventHandlers} namespace of the same name as the event string.\n * 3. Re-emits the event as a DOM event to the `<canvas>` element (unless the handler has already done so).\n *\n * The data model's `dispatchEvent` method is bound to the grid by {@link module:decorators.injectCode injectCode}.\n * A curried version of this function, bound to the grid instance, is either:\n * * Added to the data model via its `addListener` method, if it has one; or\n * * Force-injected into the data model, overriding any native implementation. (A native implementation may exist simply to \"catch\" calls that might be made before the data model is attached to Hypergrid.)\n *\n * @this {Hypergrid}\n * @param {string|NormalizedDataModelEvent} event\n * @memberOf module:decorators~\n */\nmodule.exports = function(event) {\n    var type;\n\n    switch (typeof event) {\n        case 'string':\n            type = event;\n            event = { type: type };\n            break;\n        case 'object':\n            if ('type' in event) {\n                type = event.type;\n                break;\n            }\n        // fall through\n        default:\n            throw new this.HypergridError('Expected data model event to be: (string | {type:string})');\n    }\n\n    if (!REGEX_DATA_EVENT_STRING.test(type)) {\n        throw new this.HypergridError('Expected data model event type \"' + type + '\" to match ' + REGEX_DATA_EVENT_STRING + '.');\n    }\n\n    var nativeHandler = dataModelEventHandlers[event.type];\n    if (nativeHandler) {\n        var dispatched = nativeHandler.call(this, event);\n    }\n\n    return dispatched !== undefined ? dispatched : dispatchGridEvent.call(this, event.type, event);\n};\n","'use strict';\n\nvar Registry = require('../lib/Registry');\n\n\nvar warnedBaseClass;\n\n/**\n * @classdesc Registry of cell renderer singletons.\n * @constructor\n */\nvar CellRenderers = Registry.extend('CellRenderers', {\n\n    BaseClass: require('./CellRenderer'), // abstract base class\n\n    initialize: function() {\n        // preregister the standard cell renderers\n        this.add(require('./Button'));\n        this.add(require('./SimpleCell'));\n        this.add(require('./SliderCell'));\n        this.add(require('./SparkBar'));\n        this.add(require('./LastSelection'));\n        this.add(require('./SparkLine'));\n        this.add(require('./ErrorCell'));\n        this.add(require('./Tag'));\n        this.add(require('./TreeCell'));\n        this.add('emptycell', this.BaseClass); // remove this when deprecation below retired\n    },\n\n    // for better performance, instantiate at add time rather than render time.\n    add: function(name, Constructor) {\n        if (arguments.length === 1) {\n            Constructor = name;\n            return Registry.prototype.add.call(this, new Constructor);\n        } else {\n            return Registry.prototype.add.call(this, name, new Constructor);\n        }\n    },\n\n    get: function(name) {\n        if (name.map) {\n            return name.map(function(name) {\n                return Registry.prototype.get.call(this, name);\n            }, this);\n        }\n\n        var cellRenderer = Registry.prototype.get.call(this, name);\n        if (cellRenderer === this.items.emptycell) {\n            if (!warnedBaseClass) {\n                console.warn('grid.cellRenderers.get(\"' + name + '\").constructor has been deprecated as of v2.1.0 in favor of grid.cellRenderers.BaseClass property. (Will be removed in a future release.)');\n                warnedBaseClass = true;\n            }\n            this.BaseClass.constructor = this.BaseClass;\n        }\n        return cellRenderer;\n    }\n\n});\n\nmodule.exports = new CellRenderers;\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\nvar Rectangle = require('rectangular').Rectangle;\nvar images = require('../../images');\n\nvar WHITESPACE = /\\s\\s+/g;\n\n/**\n * @constructor\n * @summary The default cell renderer for a vanilla cell.\n * @desc Great care has been taken in crafting this function as it needs to perform extremely fast.\n *\n * Use `gc.cache` instead which we have implemented to cache the graphics context properties. Reads on the graphics context (`gc`) properties are expensive but not quite as expensive as writes. On read of a `gc.cache` prop, the actual `gc` prop is read into the cache once and from then on only the cache is referenced for that property. On write, the actual prop is only written to when the new value differs from the cached value.\n *\n * Clipping bounds are not set here as this is also an expensive operation. Instead, we employ a number of strategies to truncate overflowing text and content.\n *\n * @extends CellRenderer\n */\nvar SimpleCell = CellRenderer.extend('SimpleCell', {\n    paint: function(gc, config) {\n        var val = config.value,\n            bounds = config.bounds,\n            x = bounds.x,\n            y = bounds.y,\n            width = bounds.width,\n            height = bounds.height,\n            iconPadding = config.iconPadding,\n            partialRender = config.prefillColor === undefined, // signifies abort before rendering if same\n            snapshot = config.snapshot,\n            same = snapshot && partialRender,\n            valWidth = 0,\n            textColor, textFont,\n            ixoffset, iyoffset,\n            leftIcon, rightIcon, centerIcon,\n            leftPadding, rightPadding,\n            hover, hoverColor, selectColor, foundationColor, inheritsBackgroundColor,\n            c, colors;\n\n        // setting gc properties are expensive, let's not do it needlessly\n\n        if (val && val.constructor === Array) {\n            leftIcon = val[0];\n            rightIcon = val[2];\n            val = config.exec(val[1]);\n            if (val && val.naturalWidth !== undefined) { // must be an image (much faster than instanceof HTMLImageElement)\n                centerIcon = val;\n                val = null;\n            }\n        } else {\n            leftIcon = images[config.leftIcon];\n            centerIcon = images[config.centerIcon];\n            rightIcon = images[config.rightIcon];\n        }\n\n        // Note: vf == 0 is fastest equivalent of vf === 0 || vf === false which excludes NaN, null, undefined\n        var renderValue = val || config.renderFalsy && val == 0; // eslint-disable-line eqeqeq\n\n        if (renderValue) {\n            val = config.formatValue(val, config);\n\n            textFont = config.isSelected ? config.foregroundSelectionFont : config.font;\n\n            textColor = gc.cache.strokeStyle = config.isSelected\n                ? config.foregroundSelectionColor\n                : config.color;\n        } else {\n            val = '';\n        }\n\n        same = same &&\n            val === snapshot.value &&\n            textFont === snapshot.textFont &&\n            textColor === snapshot.textColor;\n\n        // fill background only if our bgColor is populated or we are a selected cell\n        colors = [];\n        c = 0;\n        if (config.isCellHovered && config.hoverCellHighlight.enabled) {\n            hoverColor = config.hoverCellHighlight.backgroundColor;\n        } else if (config.isRowHovered && (hover = config.hoverRowHighlight).enabled) {\n            hoverColor = config.isDataColumn || !hover.header || hover.header.backgroundColor === undefined ? hover.backgroundColor : hover.header.backgroundColor;\n        } else if (config.isColumnHovered && (hover = config.hoverColumnHighlight).enabled) {\n            hoverColor = config.isDataRow || !hover.header || hover.header.backgroundColor === undefined ? hover.backgroundColor : hover.header.backgroundColor;\n        }\n        if (gc.alpha(hoverColor) < 1) {\n            if (config.isSelected) {\n                selectColor = config.backgroundSelectionColor;\n            }\n\n            if (gc.alpha(selectColor) < 1) {\n                inheritsBackgroundColor = (config.backgroundColor === config.prefillColor);\n                if (!inheritsBackgroundColor) {\n                    foundationColor = true;\n                    colors.push(config.backgroundColor);\n                    same = same &&  foundationColor === snapshot.foundationColor &&\n                        config.backgroundColor === snapshot.colors[c++];\n                }\n            }\n\n            if (selectColor !== undefined) {\n                colors.push(selectColor);\n                same = same && selectColor === snapshot.colors[c++];\n            }\n        }\n        if (hoverColor !== undefined) {\n            colors.push(hoverColor);\n            same = same && hoverColor === snapshot.colors[c++];\n        }\n\n        // todo check if icons have changed\n        if (same && c === snapshot.colors.length) {\n            return;\n        }\n\n        // return a snapshot to save in cellEvent for future comparisons by partial renderer\n        config.snapshot = {\n            value: val,\n            textColor: textColor,\n            textFont: textFont,\n            foundationColor: foundationColor,\n            colors: colors\n        };\n\n        layerColors(gc, colors, x, y, width, height, foundationColor);\n\n        // Measure left and right icons, needed for rendering and for return value (min width)\n        leftPadding = leftIcon ? iconPadding + leftIcon.width + iconPadding : config.cellPadding;\n        rightPadding = rightIcon ? iconPadding + rightIcon.width + iconPadding : config.cellPadding;\n\n        if (renderValue) {\n            // draw text\n            gc.cache.fillStyle = textColor;\n            gc.cache.font = textFont;\n            valWidth = config.isHeaderRow && config.headerTextWrapping\n                ? renderMultiLineText(gc, config, val, leftPadding, rightPadding)\n                : renderSingleLineText(gc, config, val, leftPadding, rightPadding);\n        }\n\n        if (centerIcon) {\n            // Measure & draw center icon\n            iyoffset = Math.round((height - centerIcon.height) / 2);\n            ixoffset = width - Math.round((width - centerIcon.width) / 2) - centerIcon.width;\n            gc.drawImage(centerIcon, x + ixoffset, y + iyoffset);\n            valWidth = iconPadding + centerIcon.width + iconPadding;\n            if (config.hotIcon === 'center') {\n                config.clickRect = new Rectangle(ixoffset, iyoffset, centerIcon.width, centerIcon.height);\n            }\n        }\n\n\n        if (leftIcon) {\n            // Draw left icon\n            iyoffset = Math.round((height - leftIcon.height) / 2);\n            gc.drawImage(leftIcon, x + iconPadding, y + iyoffset);\n            if (config.hotIcon === 'left') {\n                config.clickRect = new Rectangle(iconPadding, iyoffset, leftIcon.width, leftIcon.height);\n            }\n        }\n\n        if (rightIcon) {\n            // Repaint background before painting right icon, because text may have flowed under where it will be.\n            // This is a work-around to clipping which is too expensive to perform here.\n            ixoffset = width - (rightIcon.width + iconPadding);\n            var rightX = x + ixoffset;\n            if (inheritsBackgroundColor) {\n                foundationColor = true;\n                colors.unshift(config.backgroundColor);\n            }\n            layerColors(gc, colors, rightX, y, rightPadding, height, foundationColor);\n\n            // Draw right icon\n            iyoffset = Math.round((height - rightIcon.height) / 2);\n            gc.drawImage(rightIcon, rightX, y + iyoffset);\n            if (config.hotIcon === 'right') {\n                config.clickRect =  new Rectangle(ixoffset, iyoffset, rightIcon.width, rightIcon.height);\n            }\n        }\n\n        if (config.cellBorderThickness) {\n            gc.beginPath();\n            gc.rect(x, y, width, height);\n            gc.cache.lineWidth = config.cellBorderThickness;\n            gc.cache.strokeStyle = config.cellBorderStyle;\n            gc.stroke();\n            gc.closePath();\n        }\n\n        config.minWidth = leftPadding + valWidth + rightPadding;\n    }\n});\n\n/**\n * @summary Renders single line text.\n * @param {CanvasRenderingContext2D} gc\n * @param {object} config\n * @param {Rectangle} config.bounds - The clipping rect of the cell to be rendered.\n * @param {*} val - The text to render in the cell.\n * @memberOf SimpleCell.prototype\n */\nfunction renderMultiLineText(gc, config, val, leftPadding, rightPadding) {\n    var x = config.bounds.x,\n        y = config.bounds.y,\n        width = config.bounds.width,\n        height = config.bounds.height,\n        cleanVal = (val + '').trim().replace(WHITESPACE, ' '), // trim and squeeze whitespace\n        lines = findLines(gc, config, cleanVal.split(' '), width);\n\n    if (lines.length === 1) {\n        return renderSingleLineText(gc, config, cleanVal, leftPadding, rightPadding);\n    }\n\n    var halignOffset = leftPadding,\n        valignOffset = config.voffset,\n        halign = config.halign,\n        textHeight = gc.getTextHeight(config.font).height;\n\n    switch (halign) {\n        case 'right':\n            halignOffset = width - rightPadding;\n            break;\n        case 'center':\n            halignOffset = width / 2;\n            break;\n    }\n\n    var hMin = 0, vMin = Math.ceil(textHeight / 2);\n\n    valignOffset += Math.ceil((height - (lines.length - 1) * textHeight) / 2);\n\n    halignOffset = Math.max(hMin, halignOffset);\n    valignOffset = Math.max(vMin, valignOffset);\n\n    gc.cache.save(); // define a clipping region for cell\n    gc.beginPath();\n    gc.rect(x, y, width, height);\n    gc.clip();\n\n    gc.cache.textAlign = halign;\n    gc.cache.textBaseline = 'middle';\n\n    for (var i = 0; i < lines.length; i++) {\n        gc.simpleText(lines[i], x + halignOffset, y + valignOffset + (i * textHeight));\n    }\n\n    gc.cache.restore(); // discard clipping region\n\n    return width;\n}\n\n/**\n * @summary Renders single line text.\n * @param {CanvasRenderingContext2D} gc\n * @param {object} config\n * @param {Rectangle} config.bounds - The clipping rect of the cell to be rendered.\n * @param {*} val - The text to render in the cell.\n * @memberOf SimpleCell.prototype\n */\nfunction renderSingleLineText(gc, config, val, leftPadding, rightPadding) {\n    var x = config.bounds.x,\n        y = config.bounds.y,\n        width = config.bounds.width,\n        halignOffset = leftPadding,\n        halign = config.halign,\n        minWidth,\n        metrics;\n\n    if (config.columnAutosizing) {\n        metrics = gc.getTextWidthTruncated(val, width - leftPadding, config.truncateTextWithEllipsis);\n        minWidth = metrics.width;\n        val = metrics.string || val;\n        switch (halign) {\n            case 'right':\n                halignOffset = width - rightPadding - metrics.width;\n                break;\n            case 'center':\n                halignOffset = (width - metrics.width) / 2;\n                break;\n        }\n    } else {\n        metrics = gc.getTextWidthTruncated(val, width - leftPadding, config.truncateTextWithEllipsis, true);\n        minWidth = 0;\n        if (metrics.string !== undefined) {\n            val = metrics.string;\n        } else {\n            switch (halign) {\n                case 'right':\n                    halignOffset = width - rightPadding - metrics.width;\n                    break;\n                case 'center':\n                    halignOffset = (width - metrics.width) / 2;\n                    break;\n            }\n        }\n    }\n\n    if (val !== null) {\n        x += Math.max(leftPadding, halignOffset);\n        y += Math.floor(config.bounds.height / 2);\n\n        if (config.isUserDataArea) {\n            if (config.link) {\n                if (config.isCellHovered || !config.linkOnHover) {\n                    if (config.linkColor) {\n                        gc.cache.strokeStyle = config.linkColor;\n                    }\n                    gc.beginPath();\n                    underline(config, gc, val, x, y, 1);\n                    gc.stroke();\n                    gc.closePath();\n                }\n                if (config.linkColor && (config.isCellHovered || !config.linkColorOnHover)) {\n                    gc.cache.fillStyle = config.linkColor;\n                }\n            }\n\n            if (config.strikeThrough === true) {\n                gc.beginPath();\n                strikeThrough(config, gc, val, x, y, 1);\n                gc.stroke();\n                gc.closePath();\n            }\n        }\n\n        gc.cache.textAlign = 'left';\n        gc.cache.textBaseline = 'middle';\n        gc.simpleText(val, x, y);\n    }\n\n    return minWidth;\n}\n\nfunction findLines(gc, config, words, width) {\n\n    if (words.length === 1) {\n        return words;\n    }\n\n    // starting with just the first word...\n    var stillFits, line = [words.shift()];\n    while (\n        // so lone as line still fits within current column...\n    (stillFits = gc.getTextWidth(line.join(' ')) < width)\n    // ...AND there are more words available...\n    && words.length\n        ) {\n        // ...add another word to end of line and retest\n        line.push(words.shift());\n    }\n\n    if (\n        !stillFits // if line is now too long...\n        && line.length > 1 // ...AND is multiple words...\n    ) {\n        words.unshift(line.pop()); // ...back off by (i.e., remove) one word\n    }\n\n    line = [line.join(' ')];\n\n    if (words.length) { // if there's anything left...\n        line = line.concat(findLines(gc, config, words, width)); // ...break it up as well\n    }\n\n    return line;\n}\n\nfunction strikeThrough(config, gc, text, x, y, thickness) {\n    var textWidth = gc.getTextWidth(text);\n\n    switch (gc.cache.textAlign) {\n        case 'center':\n            x -= textWidth / 2;\n            break;\n        case 'right':\n            x -= textWidth;\n            break;\n    }\n\n    y = Math.round(y) + 0.5;\n\n    gc.cache.lineWidth = thickness;\n    gc.moveTo(x - 1, y);\n    gc.lineTo(x + textWidth + 1, y);\n}\n\nfunction underline(config, gc, text, x, y, thickness) {\n    var textHeight = gc.getTextHeight(config.font).height,\n        textWidth = gc.getTextWidth(text);\n\n    switch (gc.cache.textAlign) {\n        case 'center':\n            x -= textWidth / 2;\n            break;\n        case 'right':\n            x -= textWidth;\n            break;\n    }\n\n    y = Math.ceil(y) + Math.round(textHeight / 2) - 0.5;\n\n    //gc.beginPath();\n    gc.cache.lineWidth = thickness;\n    gc.moveTo(x, y);\n    gc.lineTo(x + textWidth, y);\n}\n\nfunction layerColors(gc, colors, x, y, width, height, foundationColor) {\n    for (var i = 0; i < colors.length; i++) {\n        if (foundationColor && !i) {\n            gc.clearFill(x, y, width, height, colors[i]);\n        } else {\n            gc.cache.fillStyle = colors[i];\n            gc.fillRect(x, y, width, height);\n        }\n    }\n}\n\nmodule.exports = SimpleCell;\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\n\n/**\n * Renders a slider button.\n * Currently however the user cannot interact with it.\n * @constructor\n * @extends CellRenderer\n */\nvar Slider = CellRenderer.extend('Slider', {\n    paint: function(gc, config) {\n        var x = config.bounds.x,\n            y = config.bounds.y,\n            width = config.bounds.width,\n            height = config.bounds.height;\n        gc.cache.strokeStyle = 'white';\n        var val = config.value;\n        var radius = height / 2;\n        var offset = width * val;\n        var bgColor = config.isSelected ? config.backgroundColor : '#333333';\n        var btnGradient = gc.createLinearGradient(x, y, x, y + height);\n        btnGradient.addColorStop(0, bgColor);\n        btnGradient.addColorStop(1, '#666666');\n        var arcGradient = gc.createLinearGradient(x, y, x, y + height);\n        arcGradient.addColorStop(0, '#aaaaaa');\n        arcGradient.addColorStop(1, '#777777');\n        gc.cache.fillStyle = btnGradient;\n        this.roundRect(gc, x, y, width, height, radius, btnGradient);\n        if (val < 1.0) {\n            gc.cache.fillStyle = arcGradient;\n        } else {\n            gc.cache.fillStyle = '#eeeeee';\n        }\n        gc.beginPath();\n        gc.arc(x + Math.max(offset - radius, radius), y + radius, radius, 0, 2 * Math.PI);\n        gc.fill();\n        gc.closePath();\n        config.minWidth = 100;\n    }\n});\n\nmodule.exports = Slider;\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\n\n/**\n * Renders a bar chart sparkline, hence the name.\n * @constructor\n * @extends CellRenderer\n */\nvar SparkBar = CellRenderer.extend('SparkBar', {\n    paint: function(gc, config) {\n        var x = config.bounds.x,\n            y = config.bounds.y,\n            width = config.bounds.width,\n            height = config.bounds.height;\n\n        gc.beginPath();\n        var val = config.value;\n        if (!val || !val.length) {\n            return;\n        }\n        var count = val.length;\n        var eWidth = width / count;\n        var fgColor = config.isSelected ? config.foregroundSelectionColor : config.color;\n        if (config.backgroundColor || config.isSelected) {\n            gc.cache.fillStyle = config.isSelected ? 'blue' : config.backgroundColor;\n            gc.fillRect(x, y, width, height);\n        }\n        gc.cache.fillStyle = fgColor;\n        for (var i = 0; i < val.length; i++) {\n            var barheight = val[i] / 110 * height;\n            gc.fillRect(x + 5, y + height - barheight, eWidth * 0.6666, barheight);\n            x += eWidth;\n        }\n        gc.closePath();\n        config.minWidth = count * 10;\n    }\n});\n\nmodule.exports = SparkBar;\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\n\n/**\n * @constructor\n * @desc A rendering of the last Selection Model\n * @extends CellRenderer\n */\nvar LastSelection = CellRenderer.extend('LastSelection', {\n    paint: function(gc, config) {\n        var visOverlay = gc.alpha(config.selectionRegionOverlayColor) > 0,\n            visOutline = gc.alpha(config.selectionRegionOutlineColor) > 0;\n\n        if (visOverlay || visOutline) {\n            var x = config.bounds.x,\n                y = config.bounds.y,\n                width = config.bounds.width,\n                height = config.bounds.height;\n\n            gc.beginPath();\n\n            gc.rect(x, y, width, height);\n\n            if (visOverlay) {\n                gc.cache.fillStyle = config.selectionRegionOverlayColor;\n                gc.fill();\n            }\n\n            if (visOutline) {\n                gc.cache.lineWidth = 1;\n                gc.cache.strokeStyle = config.selectionRegionOutlineColor;\n                gc.stroke();\n            }\n\n            gc.closePath();\n        }\n    }\n});\n\nmodule.exports = LastSelection;\n\n\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\n\n/**\n * Renders a sparkline.\n * @see [Edward Tufte sparkline](http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0001OR)\n * @constructor\n * @extends CellRenderer\n */\nvar SparkLine = CellRenderer.extend('SparkLine', {\n    paint: function(gc, config) {\n        var x = config.bounds.x,\n            y = config.bounds.y,\n            width = config.bounds.width,\n            height = config.bounds.height;\n\n        gc.beginPath();\n        var val = config.value;\n        if (!val || !val.length) {\n            return;\n        }\n        var count = val.length;\n        var eWidth = width / count;\n\n        var fgColor = config.isSelected ? config.foregroundSelectionColor : config.color;\n        if (config.backgroundColor || config.isSelected) {\n            gc.cache.fillStyle = config.isSelected ? config.backgroundSelectionColor : config.backgroundColor;\n            gc.fillRect(x, y, width, height);\n        }\n        gc.cache.strokeStyle = fgColor;\n        gc.cache.fillStyle = fgColor;\n        gc.beginPath();\n        var prev;\n        for (var i = 0; i < val.length; i++) {\n            var barheight = val[i] / 110 * height;\n            if (!prev) {\n                prev = barheight;\n            }\n            gc.lineTo(x + 5, y + height - barheight);\n            gc.arc(x + 5, y + height - barheight, 1, 0, 2 * Math.PI, false);\n            x += eWidth;\n        }\n        config.minWidth = count * 10;\n        gc.stroke();\n        gc.closePath();\n    }\n});\n\nmodule.exports = SparkLine;\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\n\n/**\n * @constructor\n * @extends CellRenderer\n */\nvar ErrorCell = CellRenderer.extend('ErrorCell', {\n\n    /**\n     * @summary Writes error message into cell.\n     *\n     * @desc This function is guaranteed to be called as follows:\n     *\n     * ```javascript\n     * gc.save();\n     * gc.beginPath();\n     * gc.rect(x, y, width, height);\n     * gc.clip();\n     * behavior.getCellProvider().renderCellError(gc, message, x, y, width, height);\n     * gc.restore();\n     * ```\n     *\n     * Before doing anything else, this function should clear the cell by setting `gc.fillStyle` and calling `gc.fill()`.\n     *\n     * @param {CanvasRenderingContext2D} gc\n     * @param {object} config\n     * @param {Rectangle} config.bounds - The clipping rect of the cell to be rendered.\n     * @memberOf ErrorCell.prototype\n     */\n    paint: function(gc, config, message) {\n        var x = config.bounds.x,\n            y = config.bounds.y,\n            // width = config.bounds.width,\n            height = config.bounds.height;\n\n        // clear the cell\n        // (this makes use of the rect path defined by the caller)\n        gc.cache.fillStyle = '#FFD500';\n        gc.fill();\n\n        // render message text\n        gc.cache.fillStyle = '#A00';\n        gc.cache.textAlign = 'start';\n        gc.cache.textBaseline = 'middle';\n        gc.cache.font = 'bold 6pt \"arial narrow\", verdana, geneva';\n        gc.fillText(message, x + 4, y + height / 2 + 0.5);\n    }\n});\n\nmodule.exports = ErrorCell;\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\n\n/**\n * @constructor\n * @extends CellRenderer\n */\nvar Tag = CellRenderer.extend('Tag', {\n\n    /**\n     * @memberOf Tag.prototype\n     */\n    paint: function(gc, config) {\n        if (config.tagbands) {\n            var tagband = config.tagbands.find(function(tagband) {\n                return config.value >= tagband.floor;\n            });\n            var fillStyle = tagband && tagband.fillStyle;\n\n            if (fillStyle) {\n                var b = config.bounds,\n                    x = b.x + b.width - 1,\n                    y = b.y;\n\n                gc.beginPath();\n                gc.moveTo(x, y);\n                gc.lineTo(x, y + 8);\n                gc.lineTo(x - 8, y);\n                // gc.lineTo(x, y);\n                gc.closePath();\n                gc.cache.fillStyle = fillStyle;\n                gc.fill();\n            }\n        }\n    }\n});\n\nmodule.exports = Tag;\n","'use strict';\n\nvar CellRenderer = require('./CellRenderer');\n\n/**\n * Renders a tree cell (presumably in the tree column).\n * @constructor\n * @extends CellRenderer\n */\nvar TreeCell = CellRenderer.extend('TreeCell', {\n    paint: function(gc, config) {\n        var x = config.bounds.x,\n            y = config.bounds.y,\n            val = config.value.data,\n            indent = config.value.indent,\n            icon = config.value.icon;\n\n        // Fill background only if our bgColor is populated or we are a selected cell.\n        if (config.backgroundColor || config.isSelected) {\n            gc.cache.fillStyle = config.isSelected ? config.backgroundColor : config.backgroundColor;\n            gc.fillRect(x, y, config.bounds.width, config.bounds.height);\n        }\n\n        if (!val || !val.length) {\n            return;\n        }\n\n        gc.cache.fillStyle = config.isSelected ? config.backgroundColor : config.backgroundColor;\n\n        var valignOffset = Math.ceil(config.bounds.height / 2);\n        gc.fillText(icon + val, x + indent, y + valignOffset);\n\n        config.minWidth = x + indent + gc.getTextWidth(icon + val) + 10;\n    }\n});\n\nmodule.exports = TreeCell;\n","'use strict';\n\nvar Registry = require('../lib/Registry');\n\n\nvar warnedBaseClass;\n\n/**\n * @classdesc Registry of cell editor constructors.\n * @constructor\n */\nvar CellEditors = Registry.extend('CellEditors', {\n\n    BaseClass: require('./CellEditor'), // abstract base class\n\n    initialize: function() {\n        // preregister the standard cell editors\n        this.add(require('./Color'));\n        this.add(require('./Date'));\n        this.add(require('./Number'));\n        this.add(require('./Slider'));\n        this.add(require('./Spinner'));\n        this.add(require('./Textfield'));\n    },\n\n    get: function(name) {\n        if (name && name.toLowerCase() === 'celleditor') {\n            if (!warnedBaseClass) {\n                console.warn('grid.cellEditors.get(\"' + name + '\") method call has been deprecated as of v2.1.0 in favor of grid.cellEditors.BaseClass property. (Will be removed in a future release.)');\n                warnedBaseClass = true;\n            }\n            return this.BaseClass;\n        }\n        try {\n            var CellEditor = Registry.prototype.get.call(this, name);\n        } catch (err) {\n            // fail silently\n        }\n        return CellEditor;\n    }\n\n});\n\nmodule.exports = new CellEditors;\n","'use strict';\n\nvar CellEditor = require('./CellEditor');\n\n/**\n * As of spring 2016:\n * Functions well in Chrome and Firefox; unimplemented in Safari.\n * @constructor\n * @extends CellEditor\n */\nvar Color = CellEditor.extend('Color', {\n\n    template: '<input type=\"color\" lang=\"{{locale}}\" style=\"{{style}}\">'\n\n});\n\nmodule.exports = Color;\n","/* eslint-env browser */\n\n'use strict';\n\nvar CellEditor = require('./CellEditor');\n\nvar isChromium = window.chrome,\n    winNav = window.navigator,\n    vendorName = winNav.vendor,\n    isOpera = winNav.userAgent.indexOf('OPR') > -1,\n    isIEedge = winNav.userAgent.indexOf('Edge') > -1,\n    isIOSChrome = winNav.userAgent.match('CriOS'),\n    isChrome = !isIOSChrome &&\n        isChromium !== null &&\n        isChromium !== undefined &&\n        vendorName === 'Google Inc.' &&\n        isOpera == false && isIEedge == false; // eslint-disable-line eqeqeq\n\n/**\n * As of spring 2016:\n * Functions well in Chrome except no localization (day, month names; date format).\n * Unimplemented in Safari, Firefox, Internet Explorer.\n * This is a \"snmart\" control. It detects Chrome:\n * * If Chrome, uses chromeDate overrides format to that required by the value attribute, yyyy-mm-dd. (Note that this is not the format displayed in the control, which is always mm/dd/yyyy.)\n * * Otherwise uses localized date format _but_ falls back to a regular text box.\n * @constructor\n * @extends CellEditor\n */\nvar Date = CellEditor.extend('Date', {\n\n    initialize: function(grid) {\n\n        var localizerName,\n            usesDateInputControl = isChrome;\n\n        if (usesDateInputControl) {\n            localizerName = 'chromeDate';\n            this.template = '<input type=\"date\">';\n        } else {\n            localizerName = 'date';\n            this.template = '<input type=\"text\" lang=\"{{locale}}\">';\n\n            this.selectAll = function() {\n                var lastCharPlusOne = this.getEditorValue().length;\n                this.input.setSelectionRange(0, lastCharPlusOne);\n            };\n        }\n\n        this.localizer = grid.localization.get(localizerName);\n    }\n});\n\n\nmodule.exports = Date;\n","'use strict';\n\nvar Textfield = require('./Textfield');\n\n/**\n * Functions well in Chrome, Safari, Firefox, and Internet Explorer.\n * @constructor\n * @extends Textfield\n */\nvar Number = Textfield.extend('Number', {\n\n    initialize: function(grid) {\n        this.localizer = grid.localization.get('number');\n    }\n\n});\n\nmodule.exports = Number;\n","'use strict';\n\nvar CellEditor = require('./CellEditor');\n\n/**\n * @constructor\n * @extends CellEditor\n */\nvar Slider = CellEditor.extend('Slider', {\n\n    template: '<input type=\"range\" lang=\"{{locale}}\" style=\"{{style}}\">'\n\n});\n\nmodule.exports = Slider;\n","'use strict';\n\nvar CellEditor = require('./CellEditor');\n\n/**\n * @constructor\n * @extends CellEditor\n */\nvar Spinner = CellEditor.extend('Spinner', {\n\n    template: '<input type=\"number\" lang=\"{{locale}}\" style=\"{{style}}\">'\n\n});\n\nmodule.exports = Spinner;\n","'use strict';\n\n/* eslint-env node, browser */\n\nvar cssInjector = require('css-injector');\n\n/**\n * @constructor FinBar\n * @summary Create a scrollbar object.\n * @desc Creating a scrollbar is a three-step process:\n *\n * 1. Instantiate the scrollbar object by calling this constructor function. Upon instantiation, the DOM element for the scrollbar (with a single child element for the scrollbar \"thumb\") is created but is not insert it into the DOM.\n * 2. After instantiation, it is the caller's responsibility to insert the scrollbar, {@link FinBar#bar|this.bar}, into the DOM.\n * 3. After insertion, the caller must call {@link FinBar#resize|resize()} at least once to size and position the scrollbar and its thumb. After that, `resize()` should also be called repeatedly on resize events (as the content element is being resized).\n *\n * Suggested configurations:\n * * _**Unbound**_<br/>\n * The scrollbar serves merely as a simple range (slider) control. Omit both `options.onchange` and `options.content`.\n * * _**Bound to virtual content element**_<br/>\n * Virtual content is projected into the element using a custom event handler supplied by the programmer in `options.onchange`. A typical use case would be to handle scrolling of the virtual content. Other use cases include data transformations, graphics transformations, _etc._\n * * _**Bound to real content**_<br/>\n * Set `options.content` to the \"real\" content element but omit `options.onchange`. This will cause the scrollbar to use the built-in event handler (`this.scrollRealContent`) which implements smooth scrolling of the content element within the container.\n *\n * @param {finbarOptions} [options={}] - Options object. See the type definition for member details.\n */\nfunction FinBar(options) {\n\n    // make bound versions of all the mouse event handler\n    var bound = this._bound = {};\n    Object.keys(handlersToBeBound).forEach(function (key) {\n        bound[key] = handlersToBeBound[key].bind(this);\n    }, this);\n\n    /**\n     * @name thumb\n     * @summary The generated scrollbar thumb element.\n     * @desc The thumb element's parent element is always the {@link FinBar#bar|bar} element.\n     *\n     * This property is typically referenced internally only. The size and position of the thumb element is maintained by `_calcThumb()`.\n     * @type {Element}\n     * @memberOf FinBar.prototype\n     */\n    var thumb = this.thumb = document.createElement('div');\n    thumb.classList.add('thumb');\n    thumb.onclick = bound.shortStop;\n    thumb.onmouseover = bound.onmouseover;\n    thumb.onmouseout = this._bound.onmouseout;\n\n    /**\n     * @name bar\n     * @summary The generated scrollbar element.\n     * @desc The caller inserts this element into the DOM (typically into the content container) and then calls its {@link FinBar#resize|resize()} method.\n     *\n     * Thus the node tree is typically:\n     * * A **content container** element, which contains:\n     *   * The content element(s)\n     *   * This **scrollbar element**, which in turn contains:\n     *     * The **thumb element**\n     *\n     * @type {Element}\n     * @memberOf FinBar.prototype\n     */\n    var bar = this.bar = document.createElement('div');\n    bar.classList.add('finbar-vertical');\n    bar.onmousedown = this._bound.onmousedown;\n    if (this.paging) { bar.onclick = bound.onclick; }\n    bar.appendChild(thumb);\n\n    options = options || {};\n\n    // presets\n    this.orientation = 'vertical';\n    this._min = this._index = 0;\n    this._max = 100;\n\n    // options\n    Object.keys(options).forEach(function (key) {\n        var option = options[key];\n        if (option !== undefined) {\n            switch (key) {\n\n                case 'index':\n                    this._index = option;\n                    break;\n\n                case 'range':\n                    validRange(option);\n                    this._min = option.min;\n                    this._max = option.max;\n                    this.contentSize = option.max - option.min + 1;\n                    break;\n\n                default:\n                    if (\n                        key.charAt(0) !== '_' &&\n                        typeof FinBar.prototype[key] !== 'function'\n                    ) {\n                        // override prototype defaults for standard ;\n                        // extend with additional properties (for use in onchange event handlers)\n                        this[key] = option;\n                    }\n                    break;\n\n            }\n        }\n    }, this);\n\n    cssInjector(cssFinBars, 'finbar-base', options.cssStylesheetReferenceElement);\n}\n\nFinBar.prototype = {\n\n    /**\n     * @summary The scrollbar orientation.\n     * @desc Set by the constructor to either `'vertical'` or `'horizontal'`. See the similarly named property in the {@link finbarOptions} object.\n     *\n     * Useful values are `'vertical'` (the default) or `'horizontal'`.\n     *\n     * Setting this property resets `this.oh` and `this.deltaProp` and changes the class names so as to reposition the scrollbar as per the CSS rules for the new orientation.\n     * @default 'vertical'\n     * @type {string}\n     * @memberOf FinBar.prototype\n     */\n    set orientation(orientation) {\n        if (orientation === this._orientation) {\n            return;\n        }\n\n        this._orientation = orientation;\n\n        /**\n         * @readonly\n         * @name oh\n         * @summary <u>O</u>rientation <u>h</u>ash for this scrollbar.\n         * @desc Set by the `orientation` setter to either the vertical or the horizontal orientation hash. The property should always be synchronized with `orientation`; do not update directly!\n         *\n         * This object is used internally to access scrollbars' DOM element properties in a generalized way without needing to constantly query the scrollbar orientation. For example, instead of explicitly coding `this.bar.top` for a vertical scrollbar and `this.bar.left` for a horizontal scrollbar, simply code `this.bar[this.oh.leading]` instead. See the {@link orientationHashType} definition for details.\n         *\n         * This object is useful externally for coding generalized {@link finbarOnChange} event handler functions that serve both horizontal and vertical scrollbars.\n         * @type {orientationHashType}\n         * @memberOf FinBar.prototype\n         */\n        this.oh = orientationHashes[this._orientation];\n\n        if (!this.oh) {\n            error('Invalid value for `options._orientation.');\n        }\n\n        /**\n         * @name deltaProp\n         * @summary The name of the `WheelEvent` property this scrollbar should listen to.\n         * @desc Set by the constructor. See the similarly named property in the {@link finbarOptions} object.\n         *\n         * Useful values are `'deltaX'`, `'deltaY'`, or `'deltaZ'`. A value of `null` means to ignore mouse wheel events entirely.\n         *\n         * The mouse wheel is one-dimensional and only emits events with `deltaY` data. This property is provided so that you can override the default of `'deltaX'` with a value of `'deltaY'` on your horizontal scrollbar primarily to accommodate certain \"panoramic\" interface designs where the mouse wheel should control horizontal rather than vertical scrolling. Just give `{ deltaProp: 'deltaY' }` in your horizontal scrollbar instantiation.\n         *\n         * Caveat: Note that a 2-finger drag on an Apple trackpad emits events with _both_ `deltaX ` and `deltaY` data so you might want to delay making the above adjustment until you can determine that you are getting Y data only with no X data at all (which is a sure bet you on a mouse wheel rather than a trackpad).\n\n         * @type {object|null}\n         * @memberOf FinBar.prototype\n         */\n        this.deltaProp = this.oh.delta;\n\n        this.bar.className = this.bar.className.replace(/(vertical|horizontal)/g, orientation);\n\n        if (this.bar.style.cssText || this.thumb.style.cssText) {\n            this.bar.removeAttribute('style');\n            this.thumb.removeAttribute('style');\n            this.resize();\n        }\n    },\n    get orientation() {\n        return this._orientation;\n    },\n\n    /**\n     * @summary Callback for scroll events.\n     * @desc Set by the constructor via the similarly named property in the {@link finbarOptions} object. After instantiation, `this.onchange` may be updated directly.\n     *\n     * This event handler is called whenever the value of the scrollbar is changed through user interaction. The typical use case is when the content is scrolled. It is called with the `FinBar` object as its context and the current value of the scrollbar (its index, rounded) as the only parameter.\n     *\n     * Set this property to `null` to stop emitting such events.\n     * @type {function(number)|null}\n     * @memberOf FinBar.prototype\n     */\n    onchange: null,\n\n    /**\n     * @summary Add a CSS class name to the bar element's class list.\n     * @desc Set by the constructor. See the similarly named property in the {@link finbarOptions} object.\n     *\n     * The bar element's class list will always include `finbar-vertical` (or `finbar-horizontal` based on the current orientation). Whenever this property is set to some value, first the old prefix+orientation is removed from the bar element's class list; then the new prefix+orientation is added to the bar element's class list. This property causes _an additional_ class name to be added to the bar element's class list. Therefore, this property will only add at most one additional class name to the list.\n     *\n     * To remove _classname-orientation_ from the bar element's class list, set this property to a falsy value, such as `null`.\n     *\n     * > NOTE: You only need to specify an additional class name when you need to have mulltiple different styles of scrollbars on the same page. If this is not a requirement, then you don't need to make a new class; you would just create some additional rules using the same selectors in the built-in stylesheet (../css/finbars.css):\n     * *`div.finbar-vertical` (or `div.finbar-horizontal`) for the scrollbar\n     * *`div.finbar-vertical > div` (or `div.finbar-horizontal > div`) for the \"thumb.\"\n     *\n     * Of course, your rules should come after the built-ins.\n     * @type {string}\n     * @memberOf FinBar.prototype\n     */\n    set classPrefix(prefix) {\n        if (this._classPrefix) {\n            this.bar.classList.remove(this._classPrefix + this.orientation);\n        }\n\n        this._classPrefix = prefix;\n\n        if (prefix) {\n            this.bar.classList.add(prefix + '-' + this.orientation);\n        }\n    },\n    get classPrefix() {\n        return this._classPrefix;\n    },\n\n    /**\n     * @name increment\n     * @summary Number of scrollbar index units representing a pageful. Used exclusively for paging up and down and for setting thumb size relative to content size.\n     * @desc Set by the constructor. See the similarly named property in the {@link finbarOptions} object.\n     *\n     * Can also be given as a parameter to the {@link FinBar#resize|resize} method, which is pertinent because content area size changes affect the definition of a \"pageful.\" However, you only need to do this if this value is being used. It not used when:\n     * * you define `paging.up` and `paging.down`\n     * * your scrollbar is using `scrollRealContent`\n     * @type {number}\n     * @memberOf FinBar.prototype\n     */\n    increment: 1,\n\n    /**\n     * Default value of multiplier for `WheelEvent#deltaX` (horizontal scrolling delta).\n     * @default\n     * @memberOf FinBar.prototype\n     */\n    deltaXFactor: 1,\n\n    /**\n     * Default value of multiplier for `WheelEvent#deltaY` (vertical scrolling delta).\n     * @default\n     * @memberOf FinBar.prototype\n     */\n    deltaYFactor: 1,\n\n    /**\n     * Default value of multiplier for `WheelEvent#deltaZ` (delpth scrolling delta).\n     * @default\n     * @memberOf FinBar.prototype\n     */\n    deltaZFactor: 1,\n\n    /**\n     * @name barStyles\n     * @summary Scrollbar styles to be applied by {@link FinBar#resize|resize()}.\n     * @desc Set by the constructor. See the similarly named property in the {@link finbarOptions} object.\n     *\n     * This is a value to be assigned to {@link FinBar#styles|styles} on each call to {@link FinBar#resize|resize()}. That is, a hash of values to be copied to the scrollbar element's style object on resize; or `null` for none.\n     *\n     * @see {@link FinBar#style|style}\n     * @type {finbarStyles|null}\n     * @memberOf FinBar.prototype\n     */\n    barStyles: null,\n\n    /**\n     * @name style\n     * @summary Additional scrollbar styles.\n     * @desc See type definition for more details. These styles are applied directly to the scrollbar's `bar` element.\n     *\n     * Values are adjusted as follows before being applied to the element:\n     * 1. Included \"pseudo-property\" names from the scrollbar's orientation hash, {@link FinBar#oh|oh}, are translated to actual property names before being applied.\n     * 2. When there are margins, percentages are translated to absolute pixel values because CSS ignores margins in its percentage calculations.\n     * 3. If you give a value without a unit (a raw number), \"px\" unit is appended.\n     *\n     * General notes:\n     * 1. It is always preferable to specify styles via a stylesheet. Only set this property when you need to specifically override (a) stylesheet value(s).\n     * 2. Can be set directly or via calls to the {@link FinBar#resize|resize} method.\n     * 3. Should only be set after the scrollbar has been inserted into the DOM.\n     * 4. Before applying these new values to the element, _all_ in-line style values are reset (by removing the element's `style` attribute), exposing inherited values (from stylesheets).\n     * 5. Empty object has no effect.\n     * 6. Falsey value in place of object has no effect.\n     *\n     * > CAVEAT: Do not attempt to treat the object you assign to this property as if it were `this.bar.style`. Specifically, changing this object after assigning it will have no effect on the scrollbar. You must assign it again if you want it to have an effect.\n     *\n     * @see {@link FinBar#barStyles|barStyles}\n     * @type {finbarStyles}\n     * @memberOf FinBar.prototype\n     */\n    set style(styles) {\n        var keys = Object.keys(styles = extend({}, styles, this._auxStyles));\n\n        if (keys.length) {\n            var bar = this.bar,\n                barRect = bar.getBoundingClientRect(),\n                container = this.container || bar.parentElement,\n                containerRect = container.getBoundingClientRect(),\n                oh = this.oh;\n\n            // Before applying new styles, revert all styles to values inherited from stylesheets\n            bar.removeAttribute('style');\n\n            keys.forEach(function (key) {\n                var val = styles[key];\n\n                if (key in oh) {\n                    key = oh[key];\n                }\n\n                if (!isNaN(Number(val))) {\n                    val = (val || 0) + 'px';\n                } else if (/%$/.test(val)) {\n                    // When bar size given as percentage of container, if bar has margins, restate size in pixels less margins.\n                    // (If left as percentage, CSS's calculation will not exclude margins.)\n                    var oriented = axis[key],\n                        margins = barRect[oriented.marginLeading] + barRect[oriented.marginTrailing];\n                    if (margins) {\n                        val = parseInt(val, 10) / 100 * containerRect[oriented.size] - margins + 'px';\n                    }\n                }\n\n                bar.style[key] = val;\n            });\n        }\n    },\n\n    /**\n     * @readonly\n     * @name paging\n     * @summary Enable page up/dn clicks.\n     * @desc Set by the constructor. See the similarly named property in the {@link finbarOptions} object.\n     *\n     * If truthy, listen for clicks in page-up and page-down regions of scrollbar.\n     *\n     * If an object, call `.paging.up()` on page-up clicks and `.paging.down()` will be called on page-down clicks.\n     *\n     * Changing the truthiness of this value after instantiation currently has no effect.\n     * @type {boolean|object}\n     * @memberOf FinBar.prototype\n     */\n    paging: true,\n\n    /**\n     * @name range\n     * @summary Setter for the minimum and maximum scroll values.\n     * @desc Set by the constructor. These values are the limits for {@link FooBar#index|index}.\n     *\n     * The setter accepts an object with exactly two numeric properties: `.min` which must be less than `.max`. The values are extracted and the object is discarded.\n     *\n     * The getter returns a new object with `.min` and '.max`.\n     *\n     * @type {rangeType}\n     * @memberOf FinBar.prototype\n     */\n    set range(range) {\n        validRange(range);\n        this._min = range.min;\n        this._max = range.max;\n        this.contentSize = range.max - range.min + 1;\n        this.index = this.index; // re-clamp\n    },\n    get range() {\n        return {\n            min: this._min,\n            max: this._max\n        };\n    },\n\n    /**\n     * @summary Index value of the scrollbar.\n     * @desc This is the position of the scroll thumb.\n     *\n     * Setting this value clamps it to {@link FinBar#min|min}..{@link FinBar#max|max}, scroll the content, and moves thumb.\n     *\n     * Getting this value returns the current index. The returned value will be in the range `min`..`max`. It is intentionally not rounded.\n     *\n     * Use this value as an alternative to (or in addition to) using the {@link FinBar#onchange|onchange} callback function.\n     *\n     * @see {@link FinBar#_setScroll|_setScroll}\n     * @type {number}\n     * @memberOf FinBar.prototype\n     */\n    set index(idx) {\n        idx = Math.min(this._max, Math.max(this._min, idx)); // clamp it\n        this._setScroll(idx);\n        // this._setThumbSize();\n    },\n    get index() {\n        return this._index;\n    },\n\n    /**\n     * @private\n     * @summary Move the thumb.\n     * @desc Also displays the index value in the test panel and invokes the callback.\n     * @param idx - The new scroll index, a value in the range `min`..`max`.\n     * @param [scaled=f(idx)] - The new thumb position in pixels and scaled relative to the containing {@link FinBar#bar|bar} element, i.e., a proportional number in the range `0`..`thumbMax`. When omitted, a function of `idx` is used.\n     * @memberOf FinBar.prototype\n     */\n    _setScroll: function (idx, scaled) {\n        this._index = idx;\n\n        // Display the index value in the test panel\n        if (this.testPanelItem && this.testPanelItem.index instanceof Element) {\n            this.testPanelItem.index.innerHTML = Math.round(idx);\n        }\n\n        // Call the callback\n        if (this.onchange) {\n            this.onchange.call(this, Math.round(idx));\n        }\n\n        // Move the thumb\n        if (scaled === undefined) {\n            scaled = (idx - this._min) / (this._max - this._min) * this._thumbMax;\n        }\n        this.thumb.style[this.oh.leading] = scaled + 'px';\n    },\n\n    scrollRealContent: function (idx) {\n        var containerRect = this.content.parentElement.getBoundingClientRect(),\n            sizeProp = this.oh.size,\n            maxScroll = Math.max(0, this.content[sizeProp] - containerRect[sizeProp]),\n            //scroll = Math.min(idx, maxScroll);\n            scroll = (idx - this._min) / (this._max - this._min) * maxScroll;\n        //console.log('scroll: ' + scroll);\n        this.content.style[this.oh.leading] = -scroll + 'px';\n    },\n\n    /**\n     * @summary Recalculate thumb position.\n     *\n     * @desc This method recalculates the thumb size and position. Call it once after inserting your scrollbar into the DOM, and repeatedly while resizing the scrollbar (which typically happens when the scrollbar's parent is resized by user.\n     *\n     * > This function shifts args if first arg omitted.\n     *\n     * @param {number} [increment=this.increment] - Resets {@link FooBar#increment|increment} (see).\n     *\n     * @param {finbarStyles} [barStyles=this.barStyles] - (See type definition for details.) Scrollbar styles to be applied to the bar element.\n     *\n     * Only specify a `barStyles` object when you need to override stylesheet values. If provided, becomes the new default (`this.barStyles`), for use as a default on subsequent calls.\n     *\n     * It is generally the case that the scrollbar's new position is sufficiently described by the current styles. Therefore, it is unusual to need to provide a `barStyles` object on every call to `resize`.\n     *\n     * @returns {FinBar} Self for chaining.\n     * @memberOf FinBar.prototype\n     */\n    resize: function (increment, barStyles) {\n        var bar = this.bar;\n\n        if (!bar.parentNode) {\n            return; // not in DOM yet so nothing to do\n        }\n\n        var container = this.container || bar.parentElement,\n            containerRect = container.getBoundingClientRect();\n\n        // shift args if if 1st arg omitted\n        if (typeof increment === 'object') {\n            barStyles = increment;\n            increment = undefined;\n        }\n\n        this.style = this.barStyles = barStyles || this.barStyles;\n\n        // Bound to real content: Content was given but no onchange handler.\n        // Set up .onchange, .containerSize, and .increment.\n        // Note this only makes sense if your index unit is pixels.\n        if (this.content) {\n            if (!this.onchange) {\n                this.onchange = this.scrollRealContent;\n                this.contentSize = this.content[this.oh.size];\n                this._min = 0;\n                this._max = this.contentSize - 1;\n            }\n        }\n        if (this.onchange === this.scrollRealContent) {\n            this.containerSize = containerRect[this.oh.size];\n            this.increment = this.containerSize / (this.contentSize - this.containerSize) * (this._max - this._min);\n        } else {\n            this.containerSize = 1;\n            this.increment = increment || this.increment;\n        }\n\n        var index = this.index;\n        this.testPanelItem = this.testPanelItem || this._addTestPanelItem();\n        this._setThumbSize();\n        this.index = index;\n\n        if (this.deltaProp !== null) {\n            container.addEventListener('wheel', this._bound.onwheel);\n        }\n\n        return this;\n    },\n\n    /**\n     * @summary Shorten trailing end of scrollbar by thickness of some other scrollbar.\n     * @desc In the \"classical\" scenario where vertical scroll bar is on the right and horizontal scrollbar is on the bottom, you want to shorten the \"trailing end\" (bottom and right ends, respectively) of at least one of them so they don't overlay.\n     *\n     * This convenience function is an programmatic alternative to hardcoding the correct style with the correct value in your stylesheet; or setting the correct style with the correct value in the {@link FinBar#barStyles|barStyles} object.\n     *\n     * @see {@link FinBar#foreshortenBy|foreshortenBy}.\n     *\n     * @param {FinBar|null} otherFinBar - Other scrollbar to avoid by shortening this one; `null` removes the trailing space\n     * @returns {FinBar} For chaining\n     */\n    shortenBy: function (otherFinBar) { return this.shortenEndBy('trailing', otherFinBar); },\n\n    /**\n     * @summary Shorten leading end of scrollbar by thickness of some other scrollbar.\n     * @desc Supports non-classical scrollbar scenarios where vertical scroll bar may be on left and horizontal scrollbar may be on top, in which case you want to shorten the \"leading end\" rather than the trailing end.\n     * @see {@link FinBar#shortenBy|shortenBy}.\n     * @param {FinBar|null} otherFinBar - Other scrollbar to avoid by shortening this one; `null` removes the trailing space\n     * @returns {FinBar} For chaining\n     */\n    foreshortenBy: function (otherFinBar) { return this.shortenEndBy('leading', otherFinBar); },\n\n    /**\n     * @summary Generalized shortening function.\n     * @see {@link FinBar#shortenBy|shortenBy}.\n     * @see {@link FinBar#foreshortenBy|foreshortenBy}.\n     * @param {string} whichEnd - a CSS style property name or an orientation hash name that translates to a CSS style property name.\n     * @param {FinBar|null} otherFinBar - Other scrollbar to avoid by shortening this one; `null` removes the trailing space\n     * @returns {FinBar} For chaining\n     */\n    shortenEndBy: function (whichEnd, otherFinBar) {\n        if (!otherFinBar) {\n            delete this._auxStyles;\n        } else if (otherFinBar instanceof FinBar && otherFinBar.orientation !== this.orientation) {\n            var otherStyle = window.getComputedStyle(otherFinBar.bar),\n                ooh = orientationHashes[otherFinBar.orientation];\n            this._auxStyles = {};\n            this._auxStyles[whichEnd] = otherStyle[ooh.thickness];\n        }\n        return this; // for chaining\n    },\n\n    /**\n     * @private\n     * @summary Sets the proportional thumb size and hides thumb when 100%.\n     * @desc The thumb size has an absolute minimum of 20 (pixels).\n     * @memberOf FinBar.prototype\n     */\n    _setThumbSize: function () {\n        var oh = this.oh,\n            thumbComp = window.getComputedStyle(this.thumb),\n            thumbMarginLeading = parseInt(thumbComp[oh.marginLeading]),\n            thumbMarginTrailing = parseInt(thumbComp[oh.marginTrailing]),\n            thumbMargins = thumbMarginLeading + thumbMarginTrailing,\n            barSize = this.bar.getBoundingClientRect()[oh.size],\n            thumbSize = Math.max(20, barSize * this.containerSize / this.contentSize);\n\n        if (this.containerSize < this.contentSize) {\n            this.bar.style.visibility = 'visible';\n            this.thumb.style[oh.size] = thumbSize + 'px';\n        } else {\n            this.bar.style.visibility = 'hidden';\n        }\n\n        /**\n         * @private\n         * @name _thumbMax\n         * @summary Maximum offset of thumb's leading edge.\n         * @desc This is the pixel offset within the scrollbar of the thumb when it is at its maximum position at the extreme end of its range.\n         *\n         * This value takes into account the newly calculated size of the thumb element (including its margins) and the inner size of the scrollbar (the thumb's containing element, including _its_ margins).\n         *\n         * NOTE: Scrollbar padding is not taken into account and assumed to be 0 in the current implementation and is assumed to be `0`; use thumb margins in place of scrollbar padding.\n         * @type {number}\n         * @memberOf FinBar.prototype\n         */\n        this._thumbMax = barSize - thumbSize - thumbMargins;\n\n        this._thumbMarginLeading = thumbMarginLeading; // used in mousedown\n    },\n\n    /**\n     * @summary Remove the scrollbar.\n     * @desc Unhooks all the event handlers and then removes the element from the DOM. Always call this method prior to disposing of the scrollbar object.\n     * @memberOf FinBar.prototype\n     */\n    remove: function () {\n        this.bar.onmousedown = null;\n        this._removeEvt('mousemove');\n        this._removeEvt('mouseup');\n\n        (this.container || this.bar.parentElement)._removeEvt('wheel', this._bound.onwheel);\n\n        this.bar.onclick =\n            this.thumb.onclick =\n                this.thumb.onmouseover =\n                    this.thumb.transitionend =\n                        this.thumb.onmouseout = null;\n\n        this.bar.remove();\n    },\n\n    /**\n     * @private\n     * @function _addTestPanelItem\n     * @summary Append a test panel element.\n     * @desc If there is a test panel in the DOM (typically an `<ol>...</ol>` element) with class names of both `this.classPrefix` and `'test-panel'` (or, barring that, any element with class name `'test-panel'`), an `<li>...</li>` element will be created and appended to it. This new element will contain a span for each class name given.\n     *\n     * You should define a CSS selector `.listening` for these spans. This class will be added to the spans to alter their appearance when a listener is added with that class name (prefixed with 'on').\n     *\n     * (This is an internal function that is called once by the constructor on every instantiation.)\n     * @returns {Element|undefined} The appended `<li>...</li>` element or `undefined` if there is no test panel.\n     * @memberOf FinBar.prototype\n     */\n    _addTestPanelItem: function () {\n        var testPanelItem,\n            testPanelElement = document.querySelector('.' + this._classPrefix + '.test-panel') || document.querySelector('.test-panel');\n\n        if (testPanelElement) {\n            var testPanelItemPartNames = [ 'mousedown', 'mousemove', 'mouseup', 'index' ],\n                item = document.createElement('li');\n\n            testPanelItemPartNames.forEach(function (partName) {\n                item.innerHTML += '<span class=\"' + partName + '\">' + partName.replace('mouse', '') + '</span>';\n            });\n\n            testPanelElement.appendChild(item);\n\n            testPanelItem = {};\n            testPanelItemPartNames.forEach(function (partName) {\n                testPanelItem[partName] = item.getElementsByClassName(partName)[0];\n            });\n        }\n\n        return testPanelItem;\n    },\n\n    _addEvt: function (evtName) {\n        var spy = this.testPanelItem && this.testPanelItem[evtName];\n        if (spy) { spy.classList.add('listening'); }\n        window.addEventListener(evtName, this._bound['on' + evtName]);\n    },\n\n    _removeEvt: function (evtName) {\n        var spy = this.testPanelItem && this.testPanelItem[evtName];\n        if (spy) { spy.classList.remove('listening'); }\n        window.removeEventListener(evtName, this._bound['on' + evtName]);\n    }\n};\n\nfunction extend(obj) {\n    for (var i = 1; i < arguments.length; ++i) {\n        var objn = arguments[i];\n        if (objn) {\n            for (var key in objn) {\n                obj[key] = objn[key];\n            }\n        }\n    }\n    return obj;\n}\n\nfunction validRange(range) {\n    var keys = Object.keys(range),\n        valid =  keys.length === 2 &&\n            typeof range.min === 'number' &&\n            typeof range.max === 'number' &&\n            range.min <= range.max;\n\n    if (!valid) {\n        error('Invalid .range object.');\n    }\n}\n\n/**\n * @private\n * @name handlersToBeBound\n * @type {object}\n * @desc The functions defined in this object are all DOM event handlers that are bound by the FinBar constructor to each new instance. In other words, the `this` value of these handlers, once bound, refer to the FinBar object and not to the event emitter. \"Do not consume raw.\"\n */\nvar handlersToBeBound = {\n    shortStop: function (evt) {\n        evt.stopPropagation();\n    },\n\n    onwheel: function (evt) {\n        this.index += evt[this.deltaProp] * this[this.deltaProp + 'Factor'];\n        evt.stopPropagation();\n        evt.preventDefault();\n    },\n\n    onclick: function (evt) {\n        var thumbBox = this.thumb.getBoundingClientRect(),\n            goingUp = evt[this.oh.coordinate] < thumbBox[this.oh.leading];\n\n        if (typeof this.paging === 'object') {\n            this.index = this.paging[goingUp ? 'up' : 'down'](Math.round(this.index));\n        } else {\n            this.index += goingUp ? -this.increment : this.increment;\n        }\n\n        // make the thumb glow momentarily\n        this.thumb.classList.add('hover');\n        var self = this;\n        this.thumb.addEventListener('transitionend', function waitForIt() {\n            this.removeEventListener('transitionend', waitForIt);\n            self._bound.onmouseup(evt);\n        });\n\n        evt.stopPropagation();\n    },\n\n    onmouseover: function () {\n        this.thumb.classList.add('hover');\n    },\n\n    onmouseout: function () {\n        this.thumb.classList.remove('hover');\n    },\n\n    onmousedown: function (evt) {\n        var thumbBox = this.thumb.getBoundingClientRect();\n        this.pinOffset = evt[this.oh.axis] - thumbBox[this.oh.leading] + this.bar.getBoundingClientRect()[this.oh.leading] + this._thumbMarginLeading;\n        document.documentElement.style.cursor = 'default';\n\n        this._addEvt('mousemove');\n        this._addEvt('mouseup');\n\n        evt.stopPropagation();\n        evt.preventDefault();\n    },\n\n    onmousemove: function (evt) {\n        var scaled = Math.min(this._thumbMax, Math.max(0, evt[this.oh.axis] - this.pinOffset));\n        var idx = scaled / this._thumbMax * (this._max - this._min) + this._min;\n\n        this._setScroll(idx, scaled);\n\n        evt.stopPropagation();\n        evt.preventDefault();\n    },\n\n    onmouseup: function (evt) {\n        this._removeEvt('mousemove');\n        this._removeEvt('mouseup');\n\n        document.documentElement.style.cursor = 'auto';\n\n        var thumbBox = this.thumb.getBoundingClientRect();\n        if (\n            thumbBox.left <= evt.clientX && evt.clientX <= thumbBox.right &&\n            thumbBox.top <= evt.clientY && evt.clientY <= thumbBox.bottom\n        ) {\n            this._bound.onmouseover(evt);\n        } else {\n            this._bound.onmouseout(evt);\n        }\n\n        evt.stopPropagation();\n        evt.preventDefault();\n    }\n};\n\nvar orientationHashes = {\n    vertical: {\n        coordinate:     'clientY',\n        axis:           'pageY',\n        size:           'height',\n        outside:        'right',\n        inside:         'left',\n        leading:        'top',\n        trailing:       'bottom',\n        marginLeading:  'marginTop',\n        marginTrailing: 'marginBottom',\n        thickness:      'width',\n        delta:          'deltaY'\n    },\n    horizontal: {\n        coordinate:     'clientX',\n        axis:           'pageX',\n        size:           'width',\n        outside:        'bottom',\n        inside:         'top',\n        leading:        'left',\n        trailing:       'right',\n        marginLeading:  'marginLeft',\n        marginTrailing: 'marginRight',\n        thickness:      'height',\n        delta:          'deltaX'\n    }\n};\n\nvar axis = {\n    top:    'vertical',\n    bottom: 'vertical',\n    height: 'vertical',\n    left:   'horizontal',\n    right:  'horizontal',\n    width:  'horizontal'\n};\n\nvar cssFinBars; // definition inserted by gulpfile between following comments\n/* inject:css */\ncssFinBars = 'div.finbar-horizontal,div.finbar-vertical{position:absolute;margin:3px}div.finbar-horizontal>.thumb,div.finbar-vertical>.thumb{position:absolute;background-color:#d3d3d3;-webkit-box-shadow:0 0 1px #000;-moz-box-shadow:0 0 1px #000;box-shadow:0 0 1px #000;border-radius:4px;margin:2px;opacity:.4;transition:opacity .5s}div.finbar-horizontal>.thumb.hover,div.finbar-vertical>.thumb.hover{opacity:1;transition:opacity .5s}div.finbar-vertical{top:0;bottom:0;right:0;width:11px}div.finbar-vertical>.thumb{top:0;right:0;width:7px}div.finbar-horizontal{left:0;right:0;bottom:0;height:11px}div.finbar-horizontal>.thumb{left:0;bottom:0;height:7px}';\n/* endinject */\n\nfunction error(msg) {\n    throw 'finbars: ' + msg;\n}\n\n// Interface\nmodule.exports = FinBar;\n","'use strict';\n\n/* eslint-env browser */\n\n/** @namespace cssInjector */\n\n/**\n * @summary Insert base stylesheet into DOM\n *\n * @desc Creates a new `<style>...</style>` element from the named text string(s) and inserts it but only if it does not already exist in the specified container as per `referenceElement`.\n *\n * > Caveat: If stylesheet is for use in a shadow DOM, you must specify a local `referenceElement`.\n *\n * @returns A reference to the newly created `<style>...</style>` element.\n *\n * @param {string|string[]} cssRules\n * @param {string} [ID]\n * @param {undefined|null|Element|string} [referenceElement] - Container for insertion. Overloads:\n * * `undefined` type (or omitted): injects stylesheet at top of `<head>...</head>` element\n * * `null` value: injects stylesheet at bottom of `<head>...</head>` element\n * * `Element` type: injects stylesheet immediately before given element, wherever it is found.\n * * `string` type: injects stylesheet immediately before given first element found that matches the given css selector.\n *\n * @memberOf cssInjector\n */\nfunction cssInjector(cssRules, ID, referenceElement) {\n    if (typeof referenceElement === 'string') {\n        referenceElement = document.querySelector(referenceElement);\n        if (!referenceElement) {\n            throw 'Cannot find reference element for CSS injection.';\n        }\n    } else if (referenceElement && !(referenceElement instanceof Element)) {\n        throw 'Given value not a reference element.';\n    }\n\n    var container = referenceElement && referenceElement.parentNode || document.head || document.getElementsByTagName('head')[0];\n\n    if (ID) {\n        ID = cssInjector.idPrefix + ID;\n\n        if (container.querySelector('#' + ID)) {\n            return; // stylesheet already in DOM\n        }\n    }\n\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    if (ID) {\n        style.id = ID;\n    }\n    if (cssRules instanceof Array) {\n        cssRules = cssRules.join('\\n');\n    }\n    cssRules = '\\n' + cssRules + '\\n';\n    if (style.styleSheet) {\n        style.styleSheet.cssText = cssRules;\n    } else {\n        style.appendChild(document.createTextNode(cssRules));\n    }\n\n    if (referenceElement === undefined) {\n        referenceElement = container.firstChild;\n    }\n\n    container.insertBefore(style, referenceElement);\n\n    return style;\n}\n\n/**\n * @summary Optional prefix for `<style>` tag IDs.\n * @desc Defaults to `'injected-stylesheet-'`.\n * @type {string}\n * @memberOf cssInjector\n */\ncssInjector.idPrefix = 'injected-stylesheet-';\n\n// Interface\nmodule.exports = cssInjector;\n","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.2';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n","/* eslint-env browser */\n\n'use strict';\n\nvar dispatchGridEvent = require('../lib/dispatchGridEvent');\nvar Button = require('../cellRenderers/Button');\n\n/**\n * @summary Grid event support.\n * @desc Additions to `Hypergrid.prototype` for handling and firing events.\n *\n * All members are documented on the {@link Hypergrid} page.\n * @mixin events.mixin\n */\nexports.mixin = {\n\n    /**\n     * @summary Add an event listener to me.\n     * @desc Listeners added by this method should only be removed by {@link Hypergrid#removeEventListener|grid.removeEventListener} (or {@link Hypergrid#removeAllEventListeners|grid.removeAllEventListeners}).\n     * @param {string} eventName - The type of event we are interested in.\n     * @param {function} listener - The event handler.\n     * @param {boolean} [internal=false] - Used by {@link Hypergrid#addInternalEventListener|grid.addInternalEventListener} (see).\n     * @memberOf Hypergrid#\n     */\n    addEventListener: function(eventName, listener, internal) {\n        var self = this,\n            listeners = this.listeners[eventName] = this.listeners[eventName] || [],\n            alreadyAttached = listeners.find(function(info) { return info.listener === listener; });\n\n        if (!alreadyAttached) {\n            var info = {\n                internal: internal,\n                listener: listener,\n                decorator: function(e) {\n                    if (self.allowEventHandlers) {\n                        listener(e);\n                    }\n                }\n            };\n            listeners.push(info);\n            this.canvas.addEventListener(eventName, info.decorator);\n        }\n    },\n\n    /**\n     * @summary Add an internal event listener to me.\n     * @desc The new listener is flagged as \"internal.\" Internal listeners are removed as usual by {@link Hypergrid#removeEventListener|grid.removeEventListener}. However, they are ignored by {@link Hypergrid#removeAllEventListeners|grid.removeAllEventListeners()} (as called by {@link Hypergrid#reset|reset}). (But see {@link Hypergrid#removeAllEventListeners|grid.removeAllEventListeners(true)}.)\n     *\n     * Listeners added by this method should only be removed by {@link Hypergrid#removeEventListener|grid.removeEventListener} (or {@link Hypergrid#removeAllEventListeners|grid.removeAllEventListeners(true)}).\n     * @param {string} eventName - The type of event we are interested in.\n     * @param {function} listener - The event handler.\n     * @memberOf Hypergrid#\n     */\n    addInternalEventListener: function(eventName, listener) {\n        this.addEventListener(eventName, listener, true);\n    },\n\n    /**\n     * @summary Remove an event listeners.\n     * @desc Removes the event listener with matching name and function that was added by {@link Hypergrid#addEventListener|grid.addEventListener}.\n     *\n     * NOTE: This method cannot remove event listeners added by other means.\n     * @memberOf Hypergrid#\n     */\n    removeEventListener: function(eventName, listener) {\n        var listenerList = this.listeners[eventName];\n\n        if (listenerList) {\n            listenerList.find(function(info, index) {\n                if (info.listener === listener) {\n                    if (listenerList.length === 1) {\n                        delete this.listeners[eventName];\n                    } else {\n                        listenerList.splice(index, 1); // remove it from the list\n                    }\n                    this.canvas.removeEventListener(eventName, info.decorator);\n                    return true;\n                }\n            }, this);\n        }\n    },\n\n    /**\n     * @summary Remove all event listeners.\n     * @desc Removes all event listeners added with {@link Hypergrid#addEventListener|grid.addEventListener} except those added as \"internal.\"\n     * @param {boolean} [internal=false] - Include internal listeners.\n     * @memberOf Hypergrid#\n     */\n    removeAllEventListeners: function(internal) {\n        Object.keys(this.listeners).forEach(function(key) {\n            this.listeners[key].slice().forEach(function(info) {\n                if (internal || !info.internal) {\n                    this.removeEventListener(key, info.listener);\n                }\n            }, this);\n        }, this);\n    },\n\n    allowEvents: function(allow){\n        this.allowEventHandlers = !!allow;\n\n        if (this.behavior.featureChain) {\n            if (allow){\n                this.behavior.featureChain.attachChain();\n            } else {\n                this.behavior.featureChain.detachChain();\n            }\n        }\n\n        this.behavior.changed();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @param {number} c - grid column index.\n     * @param {string[]} keys\n     * @desc Synthesize and fire a `fin-column-sort` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticColumnSortEvent: function(c, keys) {\n        return dispatchGridEvent.call(this, 'fin-column-sort', {\n            column: c,\n            keys: keys\n        });\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-editor-keyup` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticEditorKeyUpEvent: function(inputControl, keyEvent) {\n        return dispatchGridEvent.call(this, 'fin-editor-keyup', {\n            input: inputControl,\n            keyEvent: keyEvent,\n            char: this.canvas.getKeyChar(keyEvent),\n            legacyChar: keyEvent.legacyKey // decorated by getKeyChar\n        });\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-editor-keydown` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticEditorKeyDownEvent: function(inputControl, keyEvent) {\n        return dispatchGridEvent.call(this, 'fin-editor-keydown', {\n            input: inputControl,\n            keyEvent: keyEvent,\n            char: this.canvas.getKeyChar(keyEvent),\n            legacyChar: keyEvent.legacyKey // decorated by getKeyChar\n        });\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-editor-keypress` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticEditorKeyPressEvent: function(inputControl, keyEvent) {\n        return dispatchGridEvent.call(this, 'fin-editor-keypress', {\n            input: inputControl,\n            keyEvent: keyEvent,\n            char: this.canvas.getKeyChar(keyEvent),\n            legacyChar: keyEvent.legacyKey // decorated by getKeyChar\n        });\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-editor-data-change` event.\n     *\n     * This event is cancelable.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticEditorDataChangeEvent: function(inputControl, oldValue, newValue) {\n        return dispatchGridEvent.call(this, 'fin-editor-data-change', true, {\n            input: inputControl,\n            oldValue: oldValue,\n            newValue: newValue\n        });\n    },\n\n    fireSyntheticRowHeaderClickedEvent: function(event) {\n        return dispatchGridEvent.call(this, 'fin-row-header-clicked', true, {}, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-row-selection-changed` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticRowSelectionChangedEvent: function() {\n        return dispatchGridEvent.call(this, 'fin-row-selection-changed', this.selectionDetailGetters);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-column-selection-changed` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticColumnSelectionChangedEvent: function() {\n        return dispatchGridEvent.call(this, 'fin-column-selection-changed', this.selectionDetailGetters);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-context-menu` event\n     * @param {keyEvent} event - The canvas event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticContextMenuEvent: function(event) {\n        Object.defineProperties(event, this.selectionDetailGetterDescriptors);\n        return dispatchGridEvent.call(this, 'fin-context-menu', {}, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-mouseup` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticMouseUpEvent: function(event) {\n        Object.defineProperties(event, this.selectionDetailGetterDescriptors);\n        return dispatchGridEvent.call(this, 'fin-mouseup', {}, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-mousedown` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticMouseDownEvent: function(event) {\n        Object.defineProperties(event, this.selectionDetailGetterDescriptors);\n        return dispatchGridEvent.call(this, 'fin-mousedown', {}, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-mousemove` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticMouseMoveEvent: function(event) {\n        return dispatchGridEvent.call(this, 'fin-mousemove', {}, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-button-pressed` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticButtonPressedEvent: function(event) {\n        if (event.cellRenderer instanceof Button) { // Button or subclass thereof?\n            if (event.value && event.value.subrows) {\n                var y = event.primitiveEvent.detail.mouse.y - event.bounds.y,\n                    subheight = event.bounds.height / event.value.subrows;\n                event.subrow = Math.floor(y / subheight);\n            }\n            return dispatchGridEvent.call(this, 'fin-button-pressed', {}, event);\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-column-drag-start` event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticOnColumnsChangedEvent: function() {\n        return dispatchGridEvent.call(this, 'fin-column-changed-event', {});\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-keydown` event.\n     * @param {keyEvent} event - The canvas event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticKeydownEvent: function(keyEvent) {\n        return dispatchGridEvent.call(this, 'fin-keydown', keyEvent.detail);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-keyup` event.\n     * @param {keyEvent} event - The canvas event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticKeyupEvent: function(keyEvent) {\n        return dispatchGridEvent.call(this, 'fin-keyup', keyEvent.detail);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a fin-filter-applied event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticFilterAppliedEvent: function() {\n        return dispatchGridEvent.call(this, 'fin-filter-applied', {});\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-cell-enter` event\n     * @param {Point} cell - The pixel location of the cell in which the click event occurred.\n     * @param {MouseEvent} event - The system mouse event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticOnCellEnterEvent: function(cellEvent) {\n        return dispatchGridEvent.call(this, 'fin-cell-enter', cellEvent);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-cell-exit` event.\n     * @param {Point} cell - The pixel location of the cell in which the click event occured.\n     * @param {MouseEvent} event - The system mouse event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticOnCellExitEvent: function(cellEvent) {\n        return dispatchGridEvent.call(this, 'fin-cell-exit', cellEvent);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-cell-click` event.\n     * @param {Point} cell - The pixel location of the cell in which the click event occured.\n     * @param {MouseEvent} event - The system mouse event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticClickEvent: function(cellEvent) {\n        return dispatchGridEvent.call(this, 'fin-click', {}, cellEvent);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a `fin-double-click` event.\n     * @param {MouseEvent} event - The system mouse event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticDoubleClickEvent: function(cellEvent) {\n        if (!this.abortEditing()) { return; }\n\n        return dispatchGridEvent.call(this, 'fin-double-click', {}, cellEvent);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a fin-grid-rendered event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticGridRenderedEvent: function() {\n       return dispatchGridEvent.call(this, 'fin-grid-rendered', { source: this });\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a fin-tick event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticTickEvent: function() {\n        return dispatchGridEvent.call(this, 'fin-tick', { source: this });\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a fin-grid-resized event.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireSyntheticGridResizedEvent: function(e) {\n        return dispatchGridEvent.call(this, 'fin-grid-resized', e);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a scroll event.\n     * @param {string} type - Should be either `fin-scroll-x` or `fin-scroll-y`.\n     * @param {number} oldValue - The old scroll value.\n     * @param {number} newValue - The new scroll value.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireScrollEvent: function(eventName, oldValue, newValue) {\n        return dispatchGridEvent.call(this, eventName, {\n            oldValue: oldValue,\n            value: newValue\n        });\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a fin-request-cell-edit event.\n     *\n     * This event is cancelable.\n     * @param {CellEvent} cellEvent\n     * @param {*} value\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireRequestCellEdit: function(cellEvent, value) {\n        return dispatchGridEvent.call(this, 'fin-request-cell-edit', true, { value: value }, cellEvent);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and fire a fin-before-cell-edit event.\n     *\n     * This event is cancelable.\n     * @param {Point} cell - The x,y coordinates.\n     * @param {Object} value - The current value.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireBeforeCellEdit: function(cellEvent, oldValue, newValue, control) {\n        return dispatchGridEvent.call(this, 'fin-before-cell-edit', true, {\n            oldValue: oldValue,\n            newValue: newValue,\n            input: control\n        }, cellEvent);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {Renderer} sub-component\n     * @param {Point} cell - The x,y coordinates.\n     * @param {Object} oldValue - The old value.\n     * @param {Object} newValue - The new value.\n     * @returns {boolean} Proceed; event was not [canceled](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent#Return_Value `EventTarget.dispatchEvent`).\n     */\n    fireAfterCellEdit: function(cellEvent, oldValue, newValue, control) {\n        return dispatchGridEvent.call(this, 'fin-after-cell-edit', {\n            newValue: newValue,\n            oldValue: oldValue,\n            input: control\n        }, cellEvent);\n    },\n\n    delegateCanvasEvents: function() {\n        var grid = this;\n\n        function handleMouseEvent(e, cb) {\n            if (grid.getLogicalRowCount() === 0) {\n                return;\n            }\n\n            var c = grid.getGridCellFromMousePoint(e.detail.mouse),\n                primitiveEvent,\n                decoratedEvent;\n\n            // No events on the whitespace of the grid unless they're drag events\n            if (!c.fake || e.detail.dragstart) {\n                primitiveEvent = c.cellEvent;\n            }\n\n            if (primitiveEvent) {\n                decoratedEvent = Object.defineProperty(\n                    primitiveEvent,\n                    'primitiveEvent',\n                    {\n                        value: e,\n                        enumerable: false,\n                        configurable: true,\n                        writable: true\n                    }\n                );\n                cb.call(grid, decoratedEvent);\n            }\n        }\n\n        this.addInternalEventListener('fin-canvas-resized', function(e) {\n            grid.resized();\n            grid.fireSyntheticGridResizedEvent(e);\n        });\n\n        this.addInternalEventListener('fin-canvas-mousemove', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            handleMouseEvent(e, function(mouseEvent) {\n                this.delegateMouseMove(mouseEvent);\n                this.fireSyntheticMouseMoveEvent(mouseEvent);\n            });\n        });\n\n        this.addInternalEventListener('fin-canvas-mousedown', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            if (!grid.abortEditing()) {\n                e.stopPropagation();\n                return;\n            }\n\n            handleMouseEvent(e, function(mouseEvent) {\n                mouseEvent.keys = e.detail.keys;\n                this.mouseDownState = mouseEvent;\n                this.delegateMouseDown(mouseEvent);\n                this.fireSyntheticMouseDownEvent(mouseEvent);\n                this.repaint();\n            });\n        });\n\n        this.addInternalEventListener('fin-canvas-click', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            handleMouseEvent(e, function(mouseEvent) {\n                var isMouseDownCell = this.mouseDownState && this.mouseDownState.gridCell.equals(mouseEvent.gridCell);\n                if (isMouseDownCell && mouseEvent.mousePointInClickRect) {\n                    mouseEvent.keys = e.detail.keys; // todo: this was in fin-tap but wasn't here\n                    if (this.mouseDownState) {\n                        this.fireSyntheticButtonPressedEvent(this.mouseDownState);\n                    }\n                    this.fireSyntheticClickEvent(mouseEvent);\n                    this.delegateClick(mouseEvent);\n                }\n                this.mouseDownState = null;\n            });\n        });\n\n        this.addInternalEventListener('fin-canvas-mouseup', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            grid.dragging = false;\n            if (grid.isScrollingNow()) {\n                grid.setScrollingNow(false);\n            }\n            if (grid.columnDragAutoScrolling) {\n                grid.columnDragAutoScrolling = false;\n            }\n            handleMouseEvent(e, function(mouseEvent) {\n                this.delegateMouseUp(mouseEvent);\n                this.fireSyntheticMouseUpEvent(mouseEvent);\n            });\n        });\n\n        this.addInternalEventListener('fin-canvas-dblclick', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            handleMouseEvent(e, function(mouseEvent) {\n                this.fireSyntheticDoubleClickEvent(mouseEvent, e);\n                this.delegateDoubleClick(mouseEvent);\n            });\n        });\n\n        this.addInternalEventListener('fin-canvas-drag', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            grid.dragging = true;\n            handleMouseEvent(e, grid.delegateMouseDrag);\n        });\n\n        this.addInternalEventListener('fin-canvas-keydown', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            grid.fireSyntheticKeydownEvent(e);\n            grid.delegateKeyDown(e);\n        });\n\n        this.addInternalEventListener('fin-canvas-keyup', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            grid.fireSyntheticKeyupEvent(e);\n            grid.delegateKeyUp(e);\n        });\n\n        this.addInternalEventListener('fin-canvas-wheelmoved', function(e) {\n            handleMouseEvent(e, grid.delegateWheelMoved);\n        });\n\n        this.addInternalEventListener('fin-canvas-mouseout', function(e) {\n            if (grid.properties.readOnly) {\n                return;\n            }\n            handleMouseEvent(e, grid.delegateMouseExit);\n        });\n\n        this.addInternalEventListener('fin-canvas-context-menu', function(e) {\n            handleMouseEvent(e, function(mouseEvent){\n                grid.delegateContextMenu(mouseEvent);\n                grid.fireSyntheticContextMenuEvent(mouseEvent);\n            });\n        });\n\n        //Register a listener for the copy event so we can copy our selected region to the pastebuffer if conditions are right.\n        document.body.addEventListener('copy', function(evt) {\n            grid.checkClipboardCopy(evt);\n        });\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Delegate the wheel moved event to the behavior.\n     * @param {Event} event - The pertinent event.\n     */\n    delegateWheelMoved: function(event) {\n        this.behavior.onWheelMoved(this, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Delegate MouseExit to the behavior (model).\n     * @param {Event} event - The pertinent event.\n     */\n    delegateMouseExit: function(event) {\n        this.behavior.handleMouseExit(this, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Delegate MouseExit to the behavior (model).\n     * @param {Event} event - The pertinent event.\n     */\n    delegateContextMenu: function(event) {\n        this.behavior.onContextMenu(this, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Delegate MouseMove to the behavior (model).\n     * @param {mouseDetails} mouseDetails - An enriched mouse event from fin-canvas.\n     */\n    delegateMouseMove: function(mouseDetails) {\n        this.behavior.onMouseMove(this, mouseDetails);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Delegate mousedown to the behavior (model).\n     * @param {mouseDetails} mouseDetails - An enriched mouse event from fin-canvas.\n     */\n    delegateMouseDown: function(mouseDetails) {\n        this.behavior.handleMouseDown(this, mouseDetails);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Delegate mouseup to the behavior (model).\n     * @param {mouseDetails} mouseDetails - An enriched mouse event from fin-canvas.\n     */\n    delegateMouseUp: function(mouseDetails) {\n        this.behavior.onMouseUp(this, mouseDetails);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Delegate click to the behavior (model).\n     * @param {mouseDetails} mouseDetails - An enriched mouse event from fin-canvas.\n     */\n    delegateClick: function(mouseDetails) {\n        this.behavior.onClick(this, mouseDetails);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Delegate mouseDrag to the behavior (model).\n     * @param {mouseDetails} mouseDetails - An enriched mouse event from fin-canvas.\n     */\n    delegateMouseDrag: function(mouseDetails) {\n        this.behavior.onMouseDrag(this, mouseDetails);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc We've been doubleclicked on. Delegate through the behavior (model).\n     * @param {mouseDetails} mouseDetails - An enriched mouse event from fin-canvas.\n     */\n    delegateDoubleClick: function(mouseDetails) {\n        this.behavior.onDoubleClick(this, mouseDetails);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Generate a function name and call it on self.\n     * @desc This should also be delegated through Behavior keeping the default implementation here though.\n     * @param {event} event - The pertinent event.\n     */\n    delegateKeyDown: function(event) {\n        this.behavior.onKeyDown(this, event);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Generate a function name and call it on self.\n     * @desc This should also be delegated through Behavior keeping the default implementation here though.\n     * @param {event} event - The pertinent event.\n     */\n    delegateKeyUp: function(event) {\n        this.behavior.onKeyUp(this, event);\n    },\n};\n","/* eslint-env browser */\n\n'use strict';\n\nvar SelectionRectangle = require('../lib/SelectionRectangle');\n\n/**\n * Additions to `Hypergrid.prototype` for modeling cell, row, and column selections.\n *\n * All members are documented on the {@link Hypergrid} page.\n * @mixin selection.mixin\n */\nexports.mixin = {\n    selectionInitialize: function() {\n        var grid = this;\n\n        /** for use by fin-selection-changed, fin-row-selection-changed, fin-column-selection-changed\n         * @memberOf Hypergrid#\n         * @private\n         */\n        this.selectionDetailGetters = {\n            get rows() { return grid.getSelectedRows(); },\n            get columns() { return grid.getSelectedColumns(); },\n            get selections() { return grid.selectionModel.getSelections(); }\n        };\n\n        /**\n         * for use by fin-context-menu, fin-mouseup, fin-mousedown\n         * @memberOf Hypergrid#\n         * @private\n         */\n        this.selectionDetailGetterDescriptors = Object.getOwnPropertyDescriptors(this.selectionDetailGetters);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {boolean} We have any selections.\n     */\n    hasSelections: function() {\n        if (!this.getSelectionModel) {\n            return; // were not fully initialized yet\n        }\n        return this.selectionModel.hasSelections();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {string} Tab separated value string from the selection and our data.\n     */\n    getSelectionAsTSV: function() {\n        switch (this.selectionModel.getLastSelectionType()) {\n            case 'cell':\n                var selections = this.getSelectionMatrix();\n                selections = selections[selections.length - 1];\n                return this.getMatrixSelectionAsTSV(selections);\n            case 'row':\n                return this.getMatrixSelectionAsTSV(this.getRowSelectionMatrix());\n            case 'column':\n                return this.getMatrixSelectionAsTSV(this.getColumnSelectionMatrix());\n        }\n    },\n\n    getMatrixSelectionAsTSV: function(selections) {\n        var result = '';\n\n        //only use the data from the last selection\n        if (selections.length) {\n            var width = selections.length,\n                height = selections[0].length,\n                area = width * height,\n                lastCol = width - 1,\n                //Whitespace will only be added on non-singular rows, selections\n                whiteSpaceDelimiterForRow = (height > 1 ? '\\n' : '');\n\n            //disallow if selection is too big\n            if (area > 20000) {\n                alert('selection size is too big to copy to the paste buffer'); // eslint-disable-line no-alert\n                return '';\n            }\n\n            for (var h = 0; h < height; h++) {\n                for (var w = 0; w < width; w++) {\n                    result += selections[w][h] + (w < lastCol ? '\\t' : whiteSpaceDelimiterForRow);\n                }\n            }\n        }\n\n        return result;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Clear all the selections.\n     */\n    clearSelections: function() {\n        var keepRowSelections = this.properties.checkboxOnlyRowSelections;\n        this.selectionModel.clear(keepRowSelections);\n        this.clearMouseDown();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Clear the most recent selection.\n     */\n    clearMostRecentSelection: function() {\n        var keepRowSelections = this.properties.checkboxOnlyRowSelections;\n        this.selectionModel.clearMostRecentSelection(keepRowSelections);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Clear the most recent column selection.\n     */\n    clearMostRecentColumnSelection: function() {\n        this.selectionModel.clearMostRecentColumnSelection();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Clear the most recent row selection.\n     */\n    clearMostRecentRowSelection: function() {\n        //this.selectionModel.clearMostRecentRowSelection(); // commented off as per GRID-112\n    },\n\n    clearRowSelection: function() {\n        this.selectionModel.clearRowSelection();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Select given region.\n     * @param {number} ox - origin x\n     * @param {number} oy - origin y\n     * @param {number} ex - extent x\n     * @param {number} ex - extent y\n     */\n    select: function(ox, oy, ex, ey) {\n        if (ox < 0 || oy < 0) {\n            //we don't select negative area\n            //also this means there is no origin mouse down for a selection rect\n            return;\n        }\n        this.selectionModel.select(ox, oy, ex, ey);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {boolean} Given point is selected.\n     * @param {number} x - The horizontal coordinate.\n     * @param {number} y - The vertical coordinate.\n     */\n    isSelected: function(x, y) {\n        return this.selectionModel.isSelected(x, y);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {boolean} The given column is selected anywhere in the entire table.\n     * @param {number} y - The row index.\n     */\n    isCellSelectedInRow: function(y) {\n        return this.selectionModel.isCellSelectedInRow(y);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {boolean} The given row is selected anywhere in the entire table.\n     * @param {number} x - The column index.\n     */\n    isCellSelectedInColumn: function(x) {\n        return this.selectionModel.isCellSelectedInColumn(x);\n    },\n\n    /**\n     * @param {boolean|number[]|string[]} [hiddenColumns=false] - _Per {@link Hypergrid~getColumns}._\n     * @returns {{}}\n     * @memberOf Hypergrid#\n     */\n    getRowSelection: function(hiddenColumns) {\n        var dataModel = this.behavior.dataModel,\n            selectedRowIndexes = this.selectionModel.getSelectedRows(),\n            columns = getColumns.call(this, hiddenColumns),\n            result = {};\n\n        for (var c = 0, C = columns.length; c < C; c++) {\n            var column = columns[c],\n                rows = result[column.name] = new Array(selectedRowIndexes.length);\n            selectedRowIndexes.forEach(getValue);\n        }\n\n        function getValue(selectedRowIndex, j) {\n            var dataRow = dataModel.getRow(selectedRowIndex);\n            rows[j] = valOrFunc(dataRow, column);\n        }\n\n        return result;\n    },\n\n    /**\n     * @param {boolean|number[]|string[]} [hiddenColumns=false] - _Per {@link Hypergrid~getColumns}._\n     * @returns {Array}\n     * @memberOf Hypergrid#\n     */\n    getRowSelectionMatrix: function(hiddenColumns) {\n        var dataModel = this.behavior.dataModel,\n            selectedRowIndexes = this.selectionModel.getSelectedRows(),\n            columns = getColumns.call(this, hiddenColumns),\n            result = new Array(columns.length);\n\n        for (var c = 0, C = columns.length; c < C; c++) {\n            var column = columns[c];\n            result[c] = new Array(selectedRowIndexes.length);\n            selectedRowIndexes.forEach(getValue);\n        }\n\n        function getValue(selectedRowIndex, r) {\n            var dataRow = dataModel.getRow(selectedRowIndex);\n            result[c][r] = valOrFunc(dataRow, column);\n        }\n\n        return result;\n    },\n\n    getColumnSelectionMatrix: function() {\n        var behavior = this.behavior,\n            dataModel = behavior.dataModel,\n            headerRowCount = this.getHeaderRowCount(),\n            selectedColumnIndexes = this.getSelectedColumns(),\n            numRows = this.getRowCount(),\n            result = new Array(selectedColumnIndexes.length);\n\n        selectedColumnIndexes.forEach(function(selectedColumnIndex, c) {\n            var column = behavior.getActiveColumn(selectedColumnIndex),\n                values = result[c] = new Array(numRows);\n\n            for (var r = headerRowCount; r < numRows; r++) {\n                var dataRow = dataModel.getRow(r);\n                values[r] = valOrFunc(dataRow, column);\n            }\n        });\n\n        return result;\n    },\n\n    getColumnSelection: function() {\n        var behavior = this.behavior,\n            dataModel = behavior.dataModel,\n            headerRowCount = this.getHeaderRowCount(),\n            selectedColumnIndexes = this.getSelectedColumns(),\n            result = {},\n            rowCount = this.getRowCount();\n\n        selectedColumnIndexes.forEach(function(selectedColumnIndex) {\n            var column = behavior.getActiveColumn(selectedColumnIndex),\n                values = result[column.name] = new Array(rowCount);\n\n            for (var r = headerRowCount; r < rowCount; r++) {\n                var dataRow = dataModel.getRow(r);\n                values[r] = valOrFunc(dataRow, column);\n            }\n        });\n\n        return result;\n    },\n\n    getSelection: function() {\n        var behavior = this.behavior,\n            dataModel = behavior.dataModel,\n            selections = this.getSelections(),\n            rects = new Array(selections.length);\n\n        selections.forEach(getRect);\n\n        function getRect(selectionRect, i) {\n            var rect = normalizeRect(selectionRect),\n                colCount = rect.width,\n                rowCount = rect.height,\n                columns = {};\n\n            for (var c = 0, x = rect.origin.x; c < colCount; c++, x++) {\n                var column = behavior.getActiveColumn(x),\n                    values = columns[column.name] = new Array(rowCount);\n\n                for (var r = 0, y = rect.origin.y; r < rowCount; r++, y++) {\n                    var dataRow = dataModel.getRow(y);\n                    values[r] = valOrFunc(dataRow, column);\n                }\n            }\n\n            rects[i] = columns;\n        }\n\n        return rects;\n    },\n\n    getSelectionMatrix: function() {\n        var behavior = this.behavior,\n            dataModel = behavior.dataModel,\n            selections = this.getSelections(),\n            rects = new Array(selections.length);\n\n        selections.forEach(getRect);\n\n        function getRect(selectionRect, i) {\n            var rect = normalizeRect(selectionRect),\n                colCount = rect.width,\n                rowCount = rect.height,\n                rows = [];\n\n            for (var c = 0, x = rect.origin.x; c < colCount; c++, x++) {\n                var values = rows[c] = new Array(rowCount),\n                    column = behavior.getActiveColumn(x);\n\n                for (var r = 0, y = rect.origin.y; r < rowCount; r++, y++) {\n                    var dataRow = dataModel.getRow(y);\n                    values[r] = valOrFunc(dataRow, column);\n                }\n            }\n\n            rects[i] = rows;\n        }\n\n        return rects;\n    },\n\n    selectCell: function(x, y, silent) {\n        var keepRowSelections = this.properties.checkboxOnlyRowSelections;\n        this.selectionModel.clear(keepRowSelections);\n        this.selectionModel.select(x, y, 0, 0, silent);\n    },\n\n    toggleSelectColumn: function(x, keys) {\n        keys = keys || [];\n        var model = this.selectionModel;\n        var alreadySelected = model.isColumnSelected(x);\n        var hasCTRL = keys.indexOf('CTRL') > -1;\n        var hasSHIFT = keys.indexOf('SHIFT') > -1;\n        if (!hasCTRL && !hasSHIFT) {\n            model.clear();\n            if (!alreadySelected) {\n                model.selectColumn(x);\n            }\n        } else {\n            if (hasCTRL) {\n                if (alreadySelected) {\n                    model.deselectColumn(x);\n                } else {\n                    model.selectColumn(x);\n                }\n            }\n            if (hasSHIFT) {\n                model.clear();\n                model.selectColumn(this.lastEdgeSelection[0], x);\n            }\n        }\n        if (!alreadySelected && !hasSHIFT) {\n            this.lastEdgeSelection[0] = x;\n        }\n        this.repaint();\n        this.fireSyntheticColumnSelectionChangedEvent();\n    },\n\n    toggleSelectRow: function(y, keys) {\n        //we can select the totals rows if they exist, but not rows above that\n        keys = keys || [];\n\n        var sm = this.selectionModel;\n        var alreadySelected = sm.isRowSelected(y);\n        var hasSHIFT = keys.indexOf('SHIFT') >= 0;\n\n        if (alreadySelected) {\n            sm.deselectRow(y);\n        } else {\n            this.singleSelect();\n            sm.selectRow(y);\n        }\n\n        if (hasSHIFT) {\n            sm.clear();\n            sm.selectRow(this.lastEdgeSelection[1], y);\n        }\n\n        if (!alreadySelected && !hasSHIFT) {\n            this.lastEdgeSelection[1] = y;\n        }\n\n        this.repaint();\n    },\n\n    singleSelect: function() {\n        var result = this.properties.singleRowSelectionMode;\n\n        if (result) {\n            this.selectionModel.clearRowSelection();\n        }\n\n        return result;\n    },\n\n    selectViewportCell: function(x, y) {\n        var vc, vr;\n        if (\n            this.getRowCount() &&\n            (vc = this.renderer.visibleColumns[x]) &&\n            (vr = this.renderer.visibleRows[y + this.getHeaderRowCount()])\n        ) {\n            x = vc.columnIndex;\n            y = vr.rowIndex;\n            this.clearSelections();\n            this.select(x, y, 0, 0);\n            this.setMouseDown(this.newPoint(x, y));\n            this.setDragExtent(this.newPoint(0, 0));\n            this.repaint();\n        }\n    },\n\n    selectToViewportCell: function(x, y) {\n        var selections, vc, vr;\n        if (\n            (selections = this.getSelections()) && selections.length &&\n            (vc = this.renderer.visibleColumns[x]) &&\n            (vr = this.renderer.visibleRows[y + this.getHeaderRowCount()])\n        ) {\n            var origin = selections[0].origin;\n            x = vc.columnIndex;\n            y = vr.rowIndex;\n            this.setDragExtent(this.newPoint(x - origin.x, y - origin.y));\n            this.select(origin.x, origin.y, x - origin.x, y - origin.y);\n            this.repaint();\n        }\n    },\n\n    selectToFinalCellOfCurrentRow: function() {\n        this.selectFinalCellOfCurrentRow(true);\n    },\n\n    selectFinalCellOfCurrentRow: function(to) {\n        if (!this.getRowCount()) {\n            return;\n        }\n        var selections = this.getSelections();\n        if (selections && selections.length) {\n            var selection = selections[0],\n                origin = selection.origin,\n                extent = selection.extent,\n                columnCount = this.getColumnCount();\n\n            this.scrollBy(columnCount, 0);\n\n            this.clearSelections();\n            if (to) {\n                this.select(origin.x, origin.y, columnCount - origin.x - 1, extent.y);\n            } else {\n                this.select(columnCount - 1, origin.y, 0, 0);\n            }\n\n            this.repaint();\n        }\n    },\n\n    selectToFirstCellOfCurrentRow: function() {\n        this.selectFirstCellOfCurrentRow(true);\n    },\n\n    selectFirstCellOfCurrentRow: function(to) {\n        if (!this.getRowCount()) {\n            return;\n        }\n        var selections = this.getSelections();\n        if (selections && selections.length) {\n            var selection = selections[0],\n                origin = selection.origin,\n                extent = selection.extent;\n\n            this.clearSelections();\n            if (to) {\n                this.select(origin.x, origin.y, -origin.x, extent.y);\n            } else {\n                this.select(0, origin.y, 0, 0);\n            }\n\n            this.setHScrollValue(0);\n            this.repaint();\n        }\n    },\n\n    selectFinalCell: function() {\n        if (!this.getRowCount()) {\n            return;\n        }\n        this.selectCellAndScrollToMakeVisible(this.getColumnCount() - 1, this.getRowCount() - 1);\n        this.repaint();\n    },\n\n    selectToFinalCell: function() {\n        if (!this.getRowCount()) {\n            return;\n        }\n        var selections = this.getSelections();\n        if (selections && selections.length) {\n            var selection = selections[0],\n                origin = selection.origin,\n                columnCount = this.getColumnCount(),\n                rowCount = this.getRowCount();\n\n            this.clearSelections();\n            this.select(origin.x, origin.y, columnCount - origin.x - 1, rowCount - origin.y - 1);\n            // this.scrollBy(columnCount, rowCount);\n            this.repaint();\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {object} An object that represents the currently selection row.\n     */\n    getSelectedRow: function() {\n        var sels = this.selectionModel.getSelections();\n        if (sels.length) {\n            var behavior = this.behavior,\n                colCount = this.getColumnCount(),\n                topRow = sels[0].origin.y,\n                row = {\n                    //hierarchy: behavior.getFixedColumnValue(0, topRow)\n                };\n\n            for (var c = 0; c < colCount; c++) {\n                row[behavior.getActiveColumn(c).header] = behavior.getValue(c, topRow);\n            }\n\n            return row;\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Synthesize and dispatch a `fin-selection-changed` event.\n     */\n    selectionChanged: function(silent) {\n        // Project the cell selection into the rows\n        this.selectRowsFromCells();\n\n        // Project the cell selection into the columns\n        this.selectColumnsFromCells();\n\n        if (!silent) {\n            this.canvas.dispatchEvent(new CustomEvent('fin-selection-changed', {\n                detail: this.selectionDetailGetters\n            }));\n        }\n    },\n\n    isColumnOrRowSelected: function() {\n        return this.selectionModel.isColumnOrRowSelected();\n    },\n    selectColumn: function(x1, x2) {\n        this.selectionModel.selectColumn(x1, x2);\n    },\n    selectRow: function(y1, y2) {\n        var sm = this.selectionModel;\n\n        if (this.singleSelect()) {\n            y1 = y2;\n        } else if (y2 === undefined) {\n            y2 = y1;\n        }\n\n        sm.selectRow(Math.min(y1, y2), Math.max(y1, y2));\n    },\n\n    selectRowsFromCells: function() {\n        if (!this.properties.checkboxOnlyRowSelections && this.properties.autoSelectRows) {\n            var last;\n\n            if (!this.properties.singleRowSelectionMode) {\n                this.selectionModel.selectRowsFromCells(0, true);\n            } else if ((last = this.selectionModel.getLastSelection())) {\n                this.selectRow(null, last.corner.y);\n            } else {\n                this.clearRowSelection();\n            }\n            this.fireSyntheticRowSelectionChangedEvent();\n        }\n    },\n    selectColumnsFromCells: function() {\n        if (this.properties.autoSelectColumns) {\n            this.selectionModel.selectColumnsFromCells();\n        }\n    },\n    getSelectedRows: function() {\n        return this.behavior.getSelectedRows();\n    },\n    getSelectedColumns: function() {\n        return this.behavior.getSelectedColumns();\n    },\n    getSelections: function() {\n        return this.behavior.getSelections();\n    },\n    getLastSelectionType: function(n) {\n        return this.selectionModel.getLastSelectionType(n);\n    },\n    isInCurrentSelectionRectangle: function(x, y) {\n        return this.selectionModel.isInCurrentSelectionRectangle(x, y);\n    },\n    selectAllRows: function() {\n        this.selectionModel.selectAllRows();\n    },\n    areAllRowsSelected: function() {\n        return this.selectionModel.areAllRowsSelected();\n    },\n    toggleSelectAllRows: function() {\n        if (this.areAllRowsSelected()) {\n            this.selectionModel.clear();\n        } else {\n            this.selectAllRows();\n        }\n        this.repaint();\n    },\n\n    /**\n     * @summary Move cell selection by offset.\n     * @desc Replace the most recent selection with a single cell selection that is moved (offsetX,offsetY) from the previous selection extent.\n     * @param {number} offsetX - x offset\n     * @param {number} offsetY - y offset\n     * @memberOf Hypergrid#\n     */\n    moveSingleSelect: function(offsetX, offsetY) {\n        var mouseCorner = this.getMouseDown().plus(this.getDragExtent());\n        this.moveToSingleSelect(\n            mouseCorner.x + offsetX,\n            mouseCorner.y + offsetY\n        );\n    },\n\n    /**\n     * @summary Move cell selection by offset.\n     * @desc Replace the most recent selection with a single cell selection that is moved (offsetX,offsetY) from the previous selection extent.\n     * @param {number} newX - x coordinate to start at\n     * @param {number} newY - y coordinate to start at\n     * @memberOf Hypergrid#\n     */\n    moveToSingleSelect: function(newX, newY) {\n        var maxColumns = this.getColumnCount() - 1,\n            maxRows = this.getRowCount() - 1,\n\n            maxViewableColumns = this.getVisibleColumnsCount() - 1,\n            maxViewableRows = this.getVisibleRowsCount() - 1;\n\n        if (!this.properties.scrollingEnabled) {\n            maxColumns = Math.min(maxColumns, maxViewableColumns);\n            maxRows = Math.min(maxRows, maxViewableRows);\n        }\n\n        newX = Math.min(maxColumns, Math.max(0, newX));\n        newY = Math.min(maxRows, Math.max(0, newY));\n\n        this.clearSelections();\n        this.select(newX, newY, 0, 0);\n        this.setMouseDown(this.newPoint(newX, newY));\n        this.setDragExtent(this.newPoint(0, 0));\n\n        this.selectCellAndScrollToMakeVisible(newX, newY);\n\n        this.repaint();\n    },\n\n    /** @summary Extend cell selection by offset.\n     * @desc Augment the most recent selection extent by (offsetX,offsetY) and scroll if necessary.\n     * @param {number} offsetX - x coordinate to start at\n     * @param {number} offsetY - y coordinate to start at\n     * @memberOf Hypergrid#\n     */\n    extendSelect: function(offsetX, offsetY) {\n        var maxColumns = this.getColumnCount() - 1,\n            maxRows = this.getRowCount() - 1,\n\n            maxViewableColumns = this.renderer.visibleColumns.length - 1,\n            maxViewableRows = this.renderer.visibleRows.length - 1,\n\n            origin = this.getMouseDown(),\n            extent = this.getDragExtent(),\n\n            newX = extent.x + offsetX,\n            newY = extent.y + offsetY;\n\n        if (!this.properties.scrollingEnabled) {\n            maxColumns = Math.min(maxColumns, maxViewableColumns);\n            maxRows = Math.min(maxRows, maxViewableRows);\n        }\n\n        newX = Math.min(maxColumns - origin.x, Math.max(-origin.x, newX));\n        newY = Math.min(maxRows - origin.y, Math.max(-origin.y, newY));\n\n        this.clearMostRecentSelection();\n\n        this.select(origin.x, origin.y, newX, newY);\n        this.setDragExtent(this.newPoint(newX, newY));\n\n        var colScrolled = this.insureModelColIsVisible(newX + origin.x, offsetX),\n            rowScrolled = this.insureModelRowIsVisible(newY + origin.y, offsetY);\n\n        this.repaint();\n\n        return colScrolled || rowScrolled;\n    },\n\n    /**\n     * @returns {undefined|CellEvent}\n     * @param {boolean} [useAllCells] - Search in all rows and columns instead of only rendered ones.\n     * @memberOf Hypergrid#\n     */\n    getGridCellFromLastSelection: function(useAllCells) {\n        var sel = this.selectionModel.getLastSelection();\n        return sel && (new this.behavior.CellEvent).resetGridXDataY(sel.origin.x, sel.origin.y, null, useAllCells);\n    }\n};\n\n/**\n * @param {boolean|number[]|string[]} [hiddenColumns=false] - One of:\n * `false` - Active column list\n * `true` - All column list\n * `Array` - Active column list with listed columns prefixed as needed (when not already in the list). Each item in the array may be either:\n * * `number` - index into all column list\n * * `string` - name of a column from the all column list\n * @returns {Column[]}\n * @memberOf Hypergrid~\n */\nfunction getColumns(hiddenColumns) {\n    var columns,\n        allColumns = this.behavior.getColumns(),\n        activeColumns = this.behavior.getActiveColumns();\n\n    if (Array.isArray(hiddenColumns)) {\n        columns = [];\n        hiddenColumns.forEach(function(index) {\n            var key = typeof index === 'number' ? 'index' : 'name',\n                column = allColumns.find(function(column) { return column[key] === index; });\n            if (activeColumns.indexOf(column) < 0) {\n                columns.push(column);\n            }\n        });\n        columns = columns.concat(activeColumns);\n    } else {\n        columns = hiddenColumns ? allColumns : activeColumns;\n    }\n\n    return columns;\n}\n\nfunction normalizeRect(rect) {\n    var o = rect.origin,\n        c = rect.corner,\n\n        ox = Math.min(o.x, c.x),\n        oy = Math.min(o.y, c.y),\n\n        cx = Math.max(o.x, c.x),\n        cy = Math.max(o.y, c.y);\n\n    return new SelectionRectangle(ox, oy, cx - ox, cy - oy);\n}\n\n/**\n * @this {dataRowObject}\n * @param column\n * @returns {string}\n */\nfunction valOrFunc(dataRow, column) {\n    var result, calculator;\n    if (dataRow) {\n        result = dataRow[column.name];\n        calculator = (typeof result)[0] === 'f' && result || column.calculator;\n        if (calculator) {\n            result = calculator(dataRow, column.name);\n        }\n    }\n    return result || result === 0 || result === false ? result : '';\n}\n","'use strict';\n\nvar Rectangle = require('rectangular').Rectangle;\n\n/*\n * The Hypergrid selection model defines a rectangle's bottom and right as inclusive rather than exclusive.\n * This definition works fine so long as it is used consistently. It does however throw off `Rectangle`'s\n * `width`, `height`, and `area` properties, all of which are getters which assume an exclusive model.\n * The following `SelectionModel` object extends (subclasses) `Rectangle` to correct this problem so that\n * those properties return accurate results.\n */\nfunction SelectionRectangle() {\n    Rectangle.apply(this, arguments);\n}\nSelectionRectangle.prototype = Object.create(Rectangle.prototype, {\n    width: {\n        get: function() {\n            return this.extent.x + 1;\n        }\n    },\n    height: {\n        get: function() {\n            return this.extent.y + 1;\n        }\n    }\n});\n\nmodule.exports = SelectionRectangle;\n","'use strict';\n\n/**\n * Hypergrid/index.js mixes this module into its prototype.\n * @mixin\n */\nexports.mixin = {\n\n    /**\n     * Save underlying data row indexes backing current grid row selections in `grid.selectedDataRowIndexes`.\n     *\n     * This call should be paired with a subsequent call to `reselectRowsByUnderlyingIndexes`.\n     * @private\n     * @this {Hypergrid}\n     * @returns {number|undefined} Number of selected rows or `undefined` if `restoreRowSelections` is falsy.\n     */\n    stashRowSelections: function() {\n        if (this.properties.restoreRowSelections) {\n            var dataModel = this.behavior.dataModel;\n\n            this.selectedDataRowIndexes = this.getSelectedRows().map(function(selectedRowIndex) {\n                return dataModel.getRowIndex(selectedRowIndex);\n            });\n\n            return this.selectedDataRowIndexes.length;\n        }\n    },\n\n    /**\n     * Re-establish grid row selections based on underlying data row indexes saved by `getSelectedDataRowIndexes` which should be called first.\n     *\n     * Note that not all previously selected rows will necessarily be available after a data transformation. Even if they appear to be available, if they are not from the same data set, restoring the selections may not make sense. When this is the case, the application should set the `restoreRowSelections` property to `false`.\n     * @private\n     * @this {Hypergrid}\n     * @returns {number|undefined} Number of rows reselected or `undefined` if there were no previously selected rows.\n     */\n    unstashRowSelections: function() {\n        var dataRowIndexes = this.selectedDataRowIndexes;\n        if (dataRowIndexes) {\n            delete this.selectedDataRowIndexes;\n\n            var i, r,\n                dataModel = this.behavior.dataModel,\n                rowCount = this.getRowCount(),\n                selectedRowCount = dataRowIndexes.length,\n                gridRowIndexes = [],\n                selectionModel = this.selectionModel;\n\n            for (r = 0; selectedRowCount && r < rowCount; ++r) {\n                i = dataRowIndexes.indexOf(dataModel.getRowIndex(r));\n                if (i >= 0) {\n                    gridRowIndexes.push(r);\n                    delete dataRowIndexes[i]; // might make indexOf increasingly faster as deleted elements are not enumerable\n                    selectedRowCount--; // count down so we can bail early if all found\n                }\n            }\n\n            gridRowIndexes.forEach(function(gridRowIndex) {\n                selectionModel.selectRow(gridRowIndex);\n            });\n\n            return gridRowIndexes.length;\n        }\n    },\n\n    /**\n     * Save data column names of current column selections in `grid.selectedColumnNames`.\n     *\n     * This call should be paired with a subsequent call to `reselectColumnsByNames`.\n     * @private\n     * @this {Hypergrid}\n     * @param sourceColumnNames\n     * @returns {number|undefined} Number of selected columns or `undefined` if `restoreColumnSelections` is falsy.\n     */\n    stashColumnSelections: function() {\n        if (this.properties.restoreColumnSelections) {\n            var behavior = this.behavior;\n\n            this.selectedColumnNames = this.getSelectedColumns().map(function(selectedColumnIndex) {\n                return behavior.getActiveColumn(selectedColumnIndex).name;\n            });\n\n            return this.selectedColumnNames.length;\n        }\n    },\n\n    /**\n     * Re-establish columns selections based on column names saved by `getSelectedColumnNames` which should be called first.\n     *\n     * Note that not all preveiously selected columns wil necessarily be available after a data transformation. Even if they appear to be available, if they are not from the same data set, restoring the selections may not make sense. When this is the case, the application should set the `restoreRowSelections` property to `false`.\n     * @private\n     * @this {Hypergrid}\n     * @param sourceColumnNames\n     * @returns {number|undefined} Number of rows reselected or `undefined` if there were no previously selected columns.\n     */\n    unstashColumnSelections: function(sourceColumnNames) {\n        var selectedColumnNames = this.selectedColumnNames;\n        if (selectedColumnNames) {\n            delete this.selectedColumnNames;\n\n            var behavior = this.behavior,\n                selectionModel = this.selectionModel;\n\n            return selectedColumnNames.reduce(function(reselectedCount, columnName) {\n                var activeColumnIndex = behavior.getActiveColumnIndex(columnName);\n                if (activeColumnIndex) {\n                    selectionModel.selectColumn(activeColumnIndex);\n                    reselectedCount++;\n                }\n                return reselectedCount;\n            }, 0);\n        }\n    }\n\n};\n","'use strict';\n\nvar Scrollbar = require('./modules').Scrollbar;\n\n/**\n * @summary Scrollbar support.\n * @desc Additions to `Hypergrid.prototype` for scrollbar support.\n *\n * All members are documented on the {@link Hypergrid} page.\n * @mixin scrolling.mixin\n */\nexports.mixin = {\n\n    /**\n     * A float value between 0.0 - 1.0 of the vertical scroll position.\n     * @type {number}\n     * @memberOf Hypergrid#\n     */\n    vScrollValue: 0,\n\n    /**\n     * A float value between 0.0 - 1.0 of the horizontal scroll position.\n     * @type {number}\n     * @memberOf Hypergrid#\n     */\n    hScrollValue: 0,\n\n    /**\n     * The verticl scroll bar model/controller.\n     * @type {FinBar}\n     * @memberOf Hypergrid#\n     */\n    sbVScroller: null,\n\n    /**\n     * The horizontal scroll bar model/controller.\n     * @type {FinBar}\n     * @memberOf Hypergrid#\n     */\n    sbHScroller: null,\n\n    /**\n     * The previous value of sbVScrollVal.\n     * @type {number}\n     * @memberOf Hypergrid#\n     */\n    sbPrevVScrollValue: null,\n\n    /**\n     * The previous value of sbHScrollValue.\n     * @type {number}\n     * @memberOf Hypergrid#\n     */\n    sbPrevHScrollValue: null,\n\n    scrollingNow: false,\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Set for `scrollingNow` field.\n     * @param {boolean} isItNow - The type of event we are interested in.\n     */\n    setScrollingNow: function(isItNow) {\n        this.scrollingNow = isItNow;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns {boolean} The `scrollingNow` field.\n     */\n    isScrollingNow: function() {\n        return this.scrollingNow;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Scroll horizontal and vertically by the provided offsets.\n     * @param {number} offsetX - Scroll in the x direction this much.\n     * @param {number} offsetY - Scroll in the y direction this much.\n     */\n    scrollBy: function(offsetX, offsetY) {\n        this.scrollHBy(offsetX);\n        this.scrollVBy(offsetY);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Scroll vertically by the provided offset.\n     * @param {number} offsetY - Scroll in the y direction this much.\n     */\n    scrollVBy: function(offsetY) {\n        var max = this.sbVScroller.range.max;\n        var oldValue = this.getVScrollValue();\n        var newValue = Math.min(max, Math.max(0, oldValue + offsetY));\n        if (newValue !== oldValue) {\n            this.setVScrollValue(newValue);\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @summary Scroll horizontally by the provided offset.\n     * @param {number} offsetX - Scroll in the x direction this much.\n     */\n    scrollHBy: function(offsetX) {\n        var max = this.sbHScroller.range.max;\n        var oldValue = this.getHScrollValue();\n        var newValue = Math.min(max, Math.max(0, oldValue + offsetX));\n        if (newValue !== oldValue) {\n            this.setHScrollValue(newValue);\n        }\n    },\n\n    scrollToMakeVisible: function(c, r) {\n        var delta,\n            dw = this.renderer.dataWindow,\n            fixedColumnCount = this.properties.fixedColumnCount,\n            fixedRowCount = this.properties.fixedRowCount;\n\n        // scroll only if target not in fixed columns\n        if (c >= fixedColumnCount) {\n            // target is to left of scrollable columns; negative delta scrolls left\n            if ((delta = c - dw.origin.x) < 0) {\n                this.sbHScroller.index += delta;\n\n                // target is to right of scrollable columns; positive delta scrolls right\n                // Note: The +1 forces right-most column to scroll left (just in case it was only partially in view)\n            } else if ((c - dw.corner.x) > 0) {\n                this.sbHScroller.index = this.renderer.getMinimumLeftPositionToShowColumn(c);\n            }\n        }\n\n        if (\n            r >= fixedRowCount && // scroll only if target not in fixed rows\n            (\n                // target is above scrollable rows; negative delta scrolls up\n                (delta = r - dw.origin.y - 1) < 0 ||\n\n                // target is below scrollable rows; positive delta scrolls down\n                (delta = r - dw.corner.y) > 0\n            )\n        ) {\n            this.sbVScroller.index += delta;\n        }\n    },\n\n    selectCellAndScrollToMakeVisible: function(c, r) {\n        this.scrollToMakeVisible(c, r);\n        this.selectCell(c, r, true);\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Set the vertical scroll value.\n     * @param {number} newValue - The new scroll value.\n     */\n    setVScrollValue: function(y) {\n        var self = this;\n        y = Math.min(this.sbVScroller.range.max, Math.max(0, Math.round(y)));\n        if (y !== this.vScrollValue) {\n            this.behavior.setScrollPositionY(y);\n            this.behavior.changed();\n            var oldY = this.vScrollValue;\n            this.vScrollValue = y;\n            this.scrollValueChangedNotification();\n            setTimeout(function() {\n                // self.sbVRangeAdapter.subjectChanged();\n                self.fireScrollEvent('fin-scroll-y', oldY, y);\n            });\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @return {number} The vertical scroll value.\n     */\n    getVScrollValue: function() {\n        return this.vScrollValue;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Set the horizontal scroll value.\n     * @param {number} newValue - The new scroll value.\n     */\n    setHScrollValue: function(x) {\n        var self = this;\n        x = Math.min(this.sbHScroller.range.max, Math.max(0, Math.round(x)));\n        if (x !== this.hScrollValue) {\n            this.behavior.setScrollPositionX(x);\n            this.behavior.changed();\n            var oldX = this.hScrollValue;\n            this.hScrollValue = x;\n            this.scrollValueChangedNotification();\n            setTimeout(function() {\n                //self.sbHRangeAdapter.subjectChanged();\n                self.fireScrollEvent('fin-scroll-x', oldX, x);\n                //self.synchronizeScrollingBoundries(); // todo: Commented off to prevent the grid from bouncing back, but there may be repercussions...\n            });\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @returns The vertical scroll value.\n     */\n    getHScrollValue: function() {\n        return this.hScrollValue;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Initialize the scroll bars.\n     */\n    initScrollbars: function() {\n        if (this.sbHScroller && this.sbVScroller){\n            return;\n        }\n\n        var self = this;\n\n        var horzBar = new Scrollbar({\n            orientation: 'horizontal',\n            deltaXFactor: this.constructor.defaults.wheelHFactor,\n            onchange: self.setHScrollValue.bind(self),\n            cssStylesheetReferenceElement: this.div\n        });\n\n        var vertBar = new Scrollbar({\n            orientation: 'vertical',\n            deltaYFactor: this.constructor.defaults.wheelVFactor,\n            onchange: self.setVScrollValue.bind(self),\n            cssStylesheetReferenceElement: this.div,\n            paging: {\n                up: self.pageUp.bind(self),\n                down: self.pageDown.bind(self)\n            }\n        });\n\n        this.sbHScroller = horzBar;\n        this.sbVScroller = vertBar;\n\n        var hPrefix = this.properties.hScrollbarClassPrefix;\n        var vPrefix = this.properties.vScrollbarClassPrefix;\n\n        if (hPrefix && hPrefix !== '') {\n            this.sbHScroller.classPrefix = hPrefix;\n        }\n\n        if (vPrefix && vPrefix !== '') {\n            this.sbVScroller.classPrefix = vPrefix;\n        }\n\n        this.div.appendChild(horzBar.bar);\n        this.div.appendChild(vertBar.bar);\n\n        this.resizeScrollbars();\n    },\n\n    resizeScrollbars: function() {\n        this.sbHScroller.shortenBy(this.sbVScroller).resize();\n        //this.sbVScroller.shortenBy(this.sbHScroller);\n        this.sbVScroller.resize();\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Scroll values have changed, we've been notified.\n     */\n    setVScrollbarValues: function(max) {\n        this.sbVScroller.range = {\n            min: 0,\n            max: max\n        };\n    },\n\n    setHScrollbarValues: function(max) {\n        this.sbHScroller.range = {\n            min: 0,\n            max: max\n        };\n    },\n\n    scrollValueChangedNotification: function() {\n        if (\n            this.hScrollValue !== this.sbPrevHScrollValue ||\n            this.vScrollValue !== this.sbPrevVScrollValue\n        ) {\n            this.sbPrevHScrollValue = this.hScrollValue;\n            this.sbPrevVScrollValue = this.vScrollValue;\n\n            if (this.cellEditor) {\n                this.cellEditor.scrollValueChangedNotification();\n            }\n\n            this.computeCellsBounds();\n        }\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc The data dimensions have changed, or our pixel boundaries have changed.\n     * Adjust the scrollbar properties as necessary.\n     */\n    synchronizeScrollingBoundaries: function() {\n        var bounds = this.getBounds();\n        if (!bounds) {\n            return;\n        }\n\n        var numFixedColumns = this.getFixedColumnCount(),\n            numColumns = this.getColumnCount(),\n            numRows = this.getRowCount(),\n            scrollableWidth = bounds.width - this.behavior.getFixedColumnsMaxWidth(),\n            gridProps = this.properties,\n            borderBox = gridProps.boxSizing === 'border-box',\n            lineGap = borderBox ? 0 : gridProps.gridLinesVWidth;\n\n        for (\n            var columnsWidth = 0, lastPageColumnCount = 0;\n            lastPageColumnCount < numColumns && columnsWidth < scrollableWidth;\n            lastPageColumnCount++\n        ) {\n            columnsWidth += this.getColumnWidth(numColumns - lastPageColumnCount - 1) + lineGap;\n        }\n        if (columnsWidth > scrollableWidth) {\n            lastPageColumnCount--;\n        }\n\n        var scrollableHeight = this.renderer.getVisibleScrollHeight();\n        lineGap = borderBox ? 0 : gridProps.gridLinesHWidth;\n\n        for (\n            var rowsHeight = 0, lastPageRowCount = 0;\n            lastPageRowCount < numRows && rowsHeight < scrollableHeight;\n            lastPageRowCount++\n        ) {\n            rowsHeight += this.getRowHeight(numRows - lastPageRowCount - 1) + lineGap;\n        }\n        if (rowsHeight > scrollableHeight) {\n            lastPageRowCount--;\n        }\n\n        // inform scroll bars\n        if (this.sbHScroller) {\n            var hMax = Math.max(0, numColumns - numFixedColumns - lastPageColumnCount);\n            this.setHScrollbarValues(hMax);\n            this.setHScrollValue(Math.min(this.getHScrollValue(), hMax));\n        }\n        if (this.sbVScroller) {\n            var vMax = Math.max(0, numRows - gridProps.fixedRowCount - lastPageRowCount);\n            this.setVScrollbarValues(vMax);\n            this.setVScrollValue(Math.min(this.getVScrollValue(), vMax));\n        }\n\n        this.computeCellsBounds();\n\n        // schedule to happen *after* the repaint\n        setTimeout(this.resizeScrollbars.bind(this));\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Scroll up one full page.\n     * @returns {number}\n     */\n    pageUp: function() {\n        var rowNum = this.renderer.getPageUpRow();\n        this.setVScrollValue(rowNum);\n        return rowNum;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Scroll down one full page.\n     * @returns {number}\n     */\n    pageDown: function() {\n        var rowNum = this.renderer.getPageDownRow();\n        this.setVScrollValue(rowNum);\n        return rowNum;\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Not yet implemented.\n     */\n    pageLeft: function() {\n        throw 'page left not yet implemented';\n    },\n\n    /**\n     * @memberOf Hypergrid#\n     * @desc Not yet implemented.\n     */\n    pageRight: function() {\n        throw 'page right not yet implemented';\n    }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\r\n\r\nfunction Queueless(element, context) {\r\n    this.element = element;\r\n    this.context = context;\r\n    this.transitioning = false;\r\n}\r\n\r\nQueueless.prototype.begin = function(callback) {\r\n    var self = this;\r\n\r\n    this.transitioning = true;\r\n\r\n    this.element.addEventListener('transitionend', function end(transEvent) {\r\n        self.element.removeEventListener('transitionend', end);\r\n\r\n        if (callback) {\r\n            callback.call(this, transEvent, self);\r\n        }\r\n\r\n        self.transitioning = false;\r\n    });\r\n};\r\n\r\nexport default Queueless;","// ComboBox.js - A combo-box is a combination of a text-box and a drop-down.\r\n// User may type into it and/or select an item from the drop-down (by clicking on the triangle at the right).\r\n// The drop-down has sections which are toggled from a control area between the text-box and the drop-down.\r\n\r\n/* eslint-env browser */\r\nimport Textfield from 'fin-hypergrid/src/cellEditors/Textfield';\r\nvar prototype = Textfield.parent('CellEditor').prototype;\r\nimport Queueless from './queueless.js';\r\n\r\n/*********************************/\r\n/* eslint-disable no-unused-vars */\r\n/*********************************/\r\n\r\nvar TOGGLE_MODE_PREFIX = 'toggle-mode-';\r\n\r\nvar stateToActionMap = {\r\n    hidden: slideDown,\r\n    visible: slideUp\r\n};\r\n\r\n/**\r\n * A combo box is a text box that also has a drop-down containing options. The drop-down consists of an actual drop-down list (a `<select>` list) plus a _control area_ above it containing toggles. The toggles control the visibility of the various \"mode lists.\"\r\n *\r\n * Functions well in Chrome, Safari, Firefox, and Internet Explorer.\r\n * @constructor\r\n * @extends Textfield\r\n */\r\nvar ComboBox = Textfield.extend('ComboBox', {\r\n\r\n    initialize: function() {\r\n        var el = this.el;\r\n\r\n        this.input = el.querySelector('input');\r\n        this.dropper = el.querySelector('span');\r\n        this.options = el.querySelector('div');\r\n        // this.controls = this.options.querySelector('div');\r\n        this.dropdown = this.options.querySelector('select');\r\n\r\n        this.controllable = this.modes.length > 1;\r\n\r\n        // set up a transition end controller\r\n        this.optionsTransition = new Queueless(this.options, this);\r\n\r\n        this.menuModesSource = this.column.menuModes || { schemaOptions: true };\r\n\r\n        // wire-ups\r\n        this.dropper.addEventListener('mousedown', this.toggleDropDown.bind(this));\r\n        this.dropdown.addEventListener('mousewheel', function(e) { e.stopPropagation(); });\r\n        this.dropdown.addEventListener('change', this.insertText.bind(this));\r\n    },\r\n\r\n    template: [\r\n'<div class=\"hypergrid-combobox\" title=\"\">',\r\n'    <input type=\"text\" lang=\"{{locale}}\" style=\"{{style}}\">',\r\n'    <span title=\"Click for options\"></span>',\r\n'    <div>',\r\n'        <select id=\"dataContainer\" size=\"15\" lang=\"{{locale}}\"></select>',\r\n'    </div>',\r\n'</div>'\r\n    ].join('\\n'),\r\n\r\n    modes: [\r\n        {\r\n            name: 'distinctValues',\r\n            appendOptions: function(optgroup) {\r\n                // get the distinct column values and sort them\r\n                var distinct = {},\r\n                    d = [],\r\n                    columnName = this.column.name,\r\n                    formatter = this.column.getFormatter();\r\n\r\n                this.grid.behavior.getData().forEach(function(dataRow) {\r\n                    var val = formatter(dataRow[columnName]);\r\n                    distinct[val] = (distinct[val] || 0) + 1;\r\n                });\r\n\r\n                for (var key in distinct) {\r\n                    d.push(key);\r\n                }\r\n\r\n                while (optgroup.firstElementChild) {\r\n                    optgroup.firstElementChild.remove();\r\n                }\r\n\r\n                d.sort().forEach(function(val) {\r\n                    var option = new Option(val + ' (' + distinct[val] + ')', val);\r\n                    optgroup.appendChild(option);\r\n                });\r\n\r\n                return d.length;\r\n            }\r\n        },{\r\n            name: 'schemaOptions',\r\n            appendOptions: function(optgroup) {\r\n                var distinct = {},\r\n                    d = [],\r\n                    columnName = this.column.name,\r\n                    formatter = this.column.getFormatter();\r\n\r\n                while (optgroup.firstElementChild) {\r\n                    optgroup.firstElementChild.remove();\r\n                }\r\n\r\n                \r\n                // this.column.schema.options.map(item => {\r\n                //     d.push(item);\r\n                // })\r\n\r\n                // d.sort().forEach(function(val) {\r\n                //     var option = new Option(val, val);\r\n                //     optgroup.appendChild(option);\r\n                // });\r\n\r\n                return d.length;\r\n            }\r\n        }\r\n    ],\r\n\r\n    showEditor: function() {\r\n        // set the initial state of the mode toggles\r\n        if (!this.built) {\r\n            var menuModesSource = this.menuModesSource,\r\n                menuModes = this.menuModes = {};\r\n\r\n            // build the proxy\r\n            this.modes.forEach(function(mode) {\r\n                var modeName = mode.name;\r\n                if (modeName in menuModesSource) {\r\n                    menuModes[modeName] = menuModesSource[modeName];\r\n                }\r\n            });\r\n\r\n            // wire-ups\r\n            // if (this.controllable) {\r\n            //     this.controls.addEventListener('click', onModeIconClick.bind(this));\r\n            // }\r\n\r\n            this.modes.forEach(function(mode) {\r\n                // create a toggle\r\n                var toggle = document.createElement('span');\r\n                if (this.controllable) {\r\n                    toggle.className = TOGGLE_MODE_PREFIX + mode.name;\r\n                    toggle.title = 'Toggle ' + (mode.label || mode.name).toLowerCase();\r\n                    if (mode.tooltip) {\r\n                        toggle.title += '\\n' + mode.tooltip;\r\n                    }\r\n                    toggle.textContent = mode.symbol;\r\n                }\r\n\r\n                // this.controls.appendChild(toggle);\r\n\r\n                // create and label a new optgroup\r\n                if (mode.selector) {\r\n                    var optgroup = document.createElement('optgroup');\r\n                    optgroup.label = mode.label;\r\n                    optgroup.className = 'submenu-' + mode.name;\r\n                    optgroup.style.backgroundColor = mode.backgroundColor;\r\n                    this.dropdown.add(optgroup);\r\n                }\r\n\r\n                setModeIconAndOptgroup.call(this, toggle, mode.name, menuModes[mode.name]);\r\n            }, this);\r\n\r\n            this.built = true;\r\n        }\r\n\r\n        prototype.showEditor.call(this);\r\n    },\r\n\r\n    hideEditor: function() {\r\n        // this is where you would persist this.menuModes\r\n        prototype.hideEditor.call(this);\r\n        if (this.dropdown.value !== this.initialValue) {\r\n            this.grid.behavior.dataModel.data[this.event.dataCell.y][this.column.schema.code] = this.dropdown.value;\r\n        }\r\n    },\r\n    cancelEditing: function() {\r\n        this.dropdown.value = this.initialValue;\r\n        this.setEditorValue(this.initialValue);\r\n        this.hideEditor();\r\n        this.grid.cellEditor = null;\r\n        this.el.remove();\r\n        this.grid.takeFocus();\r\n\r\n        return true;\r\n    },\r\n    toggleDropDown: function() {\r\n        let that = this;\r\n        let optgroup = this.dropdown;\r\n\r\n        function callback(datas){\r\n            datas.map(item => {\r\n                var option = new Option(item.label, item.value);\r\n                optgroup.appendChild(option);\r\n            })\r\n            if (!that.optionsTransition.transitioning) {\r\n                var state = window.getComputedStyle(that.dropdown).visibility;\r\n                stateToActionMap[state].call(that);\r\n            }\r\n        }\r\n        \r\n        let loaddata = this.column.schema.loaddata;\r\n        if (loaddata !== undefined) {\r\n            loaddata(this.column.schema, this.input.value, callback)\r\n        } else {\r\n            callback();\r\n        }\r\n    },\r\n\r\n    insertText: function(e) {\r\n        // replace the input text with the drop-down text\r\n        this.input.focus();\r\n        this.input.value = this.dropdown[this.dropdown.selectedIndex].label;\r\n        \r\n        this.input.setSelectionRange(0, this.input.value.length);\r\n\r\n        // close the drop-down\r\n        this.toggleDropDown();\r\n    }\r\n});\r\n\r\nfunction onModeIconClick(e) {\r\n    var ctrl = e.target;\r\n\r\n    if (ctrl.tagName === 'SPAN') {\r\n        // extra ct the mode name from the toggle control's class name\r\n        var modeClassName = Array.prototype.find.call(ctrl.classList, function(className) {\r\n                return className.indexOf(TOGGLE_MODE_PREFIX) === 0;\r\n            }),\r\n            modeName = modeClassName.substr(TOGGLE_MODE_PREFIX.length);\r\n\r\n        // toggle mode in the filter\r\n        var modeState = this.menuModes[modeName] ^= 1;\r\n\r\n        setModeIconAndOptgroup.call(this, ctrl, modeName, modeState);\r\n    }\r\n}\r\n\r\nfunction setModeIconAndOptgroup(ctrl, name, state) {\r\n    var style, optgroup, sum, display,\r\n        dropdown = this.dropdown,\r\n        mode = this.modes.find(function(mode) { return mode.name === name; }), // eslint-disable-line no-shadow\r\n        selector = mode.selector;\r\n\r\n    // set icon state (color)\r\n    ctrl.classList.toggle('active', !!state);\r\n\r\n    // empty the optgroup if hiding; rebuild it if showing\r\n    if (state) { // rebuild it\r\n        // show progress cursor for (at least) 1/3 second\r\n        style = this.el.style;\r\n        style.cursor = 'progress';\r\n        setTimeout(function() { style.cursor = null; }, 333);\r\n\r\n        if (selector) {\r\n            optgroup = dropdown.querySelector(selector);\r\n            sum = mode.appendOptions.call(this, optgroup);\r\n\r\n            // update sum\r\n            optgroup.label = optgroup.label.replace(/ \\(\\d+\\)$/, ''); // remove old sum\r\n            optgroup.label += ' (' + sum + ')';\r\n        } else {\r\n            sum = mode.appendOptions.call(this, dropdown);\r\n            if (!this.controllable) {\r\n                ctrl.textContent = sum + ' values';\r\n            }\r\n        }\r\n\r\n        display = null;\r\n    } else {\r\n        display = 'none';\r\n    }\r\n\r\n    // hide/show the group\r\n    if (!selector) {\r\n        selector = 'option,optgroup:not([class])';\r\n        var mustBeChildren = true; // work-around for ':scope>option,...' not avail in IE11\r\n    }\r\n    Array.prototype.forEach.call(dropdown.querySelectorAll(selector), iteratee);\r\n\r\n    function iteratee(el) {\r\n        if (!mustBeChildren || el.parentElement === dropdown) {\r\n            el.style.display = display;\r\n        }\r\n    }\r\n\r\n    // TODO: Reset the width of this.options to the natural width of this.dropdown. To do this, we need to remove the latter's \"width: 100%\" from the CSS and then set an explicit this.options.style.width based on the computed width of this.dropdown. This is complicated by the fact that it cannot be done before it is in the DOM.\r\n}\r\n\r\nfunction slideDown() {\r\n    // preserve the text box's current text selection, which is about to be lost\r\n    this.selectionStart = this.input.selectionStart;\r\n    this.selectionEnd = this.input.selectionEnd;\r\n\r\n    // clean up the select list from last usage\r\n    this.dropdown.selectedIndex = -1; // be kind (remove previous selection)\r\n    this.dropdown.style.scrollTop = 0; // rewind\r\n\r\n    // show the drop-down slide down effect\r\n    this.options.style.visibility = 'visible';\r\n    var dropDownTopMargin = getFloat(this.dropdown, 'marginTop'),\r\n        dropDownRows = this.dropdown.size,\r\n        optionHeight = Math.ceil((this.dropdown.length && getFloat(this.dropdown[0], 'height') || 13.1875) * 2) / 2 + 1;\r\n    this.options.style.height = dropDownTopMargin + optionHeight * dropDownRows + 5 + 'px'; // starts the slide down effect\r\n\r\n    // while in drop-down, listen for clicks in text box which means abprt\r\n    this.input.addEventListener('mousedown', this.slideUpBound = slideUp.bind(this));\r\n\r\n    // wait for transition to end\r\n    this.optionsTransition.begin();\r\n}\r\n\r\nfunction slideUp() {\r\n    // stop listening to input clicks\r\n    this.input.removeEventListener('mousedown', this.slideUpBound);\r\n\r\n    // start the slide up effect\r\n    this.options.style.height = 0;\r\n\r\n    // schedule the hide to occur after the slide up effect\r\n    this.optionsTransition.begin(function(event) {\r\n        this.style.visibility = 'hidden';\r\n    });\r\n}\r\n\r\nfunction getFloat(el, style) {\r\n    return parseFloat(window.getComputedStyle(el)[style]);\r\n}\r\n\r\n\r\nexport default ComboBox;","'use strict';\r\nimport flatpickr from \"flatpickr\";\r\nimport Textfield from 'fin-hypergrid/src/cellEditors/Textfield';\r\nvar prototype = Textfield.parent('CellEditor').prototype;\r\n\r\nlet calendar;\r\nvar Date = Textfield.extend('Datetime', {\r\n    template:  `<div class=\"hypergrid-combobox\" title=\"\">\r\n    <input type=\"text\" lang=\"{{locale}}\" style=\"{{style}}\">\r\n    <span title=\"Click for datepicker\"></span>\r\n</div>`,\r\n    initialize: function(grid) {\r\n        var el = this.el;\r\n        this.input = el.querySelector('input');\r\n        this.selectAll = function() {\r\n            var lastCharPlusOne = this.getEditorValue().length;\r\n            this.input.setSelectionRange(0, lastCharPlusOne);\r\n        };\r\n    },\r\n    showEditor: function() {\r\n        prototype.showEditor.call(this);\r\n        calendar = flatpickr(this.el, {});\r\n    },\r\n    hideEditor: function() {\r\n        // this is where you would persist this.menuModes\r\n        calendar.destroy();\r\n        prototype.hideEditor.call(this);\r\n    },\r\n});\r\n\r\n\r\nexport default Date;","'use strict';\r\nimport Queueless from './queueless.js';\r\nimport InspireTree from 'inspire-tree';\r\nimport InspireTreeDOM from 'inspire-tree-dom';\r\nimport Textfield from 'fin-hypergrid/src/cellEditors/Textfield';\r\nvar prototype = Textfield.parent('CellEditor').prototype;\r\n\r\nvar stateToActionMap = {\r\n    hidden: slideDown,\r\n    visible: slideUp\r\n};\r\n\r\nvar Date = Textfield.extend('Tree', {\r\n\r\n    template:['<div class=\"hypergrid-combobox\" title=\"\">',\r\n    '    <input type=\"text\" lang=\"{{locale}}\" style=\"{{style}}\">',\r\n    '    <span title=\"Click for options\"></span>',\r\n    '    <div>',\r\n    '       <div id=\"dataContainer\"></div>',\r\n    '    </div>',\r\n    '</div>'].join('\\n'),\r\n\r\n    initialize: function(grid) {\r\n        var el = this.el;\r\n        this.node = null;\r\n\r\n        this.input = el.querySelector('input');\r\n        this.dropper = el.querySelector('span');\r\n        this.options = el.querySelector('div');\r\n        this.dropdown = this.options.querySelector('#dataContainer');\r\n\r\n        this.optionsTransition = new Queueless(this.options, this);\r\n\r\n        this.selectAll = function() {\r\n            var lastCharPlusOne = this.getEditorValue().length;\r\n            this.input.setSelectionRange(0, lastCharPlusOne);\r\n        };\r\n\r\n        this.dropper.addEventListener('mousedown', this.toggleDropDown.bind(this));\r\n        this.dropdown.addEventListener('mousewheel', function(e) { e.stopPropagation(); });\r\n        // this.dropdown.addEventListener('change', this.insertText.bind(this));\r\n    },\r\n    showEditor: function() {\r\n        prototype.showEditor.call(this);\r\n    },\r\n    hideEditor: function() {\r\n        // this is where you would persist this.menuModes\r\n        prototype.hideEditor.call(this);\r\n        if (this.node !== null && this.node !== undefined) {\r\n            this.grid.behavior.dataModel.data[this.event.dataCell.y][this.column.schema.code] = this.node.id;\r\n        }\r\n    },\r\n    cancelEditing: function() {\r\n        this.node = null;\r\n        this.setEditorValue(this.initialValue);\r\n        this.hideEditor();\r\n        this.grid.cellEditor = null;\r\n        this.el.remove();\r\n        this.grid.takeFocus();\r\n\r\n        return true;\r\n    },\r\n    toggleDropDown: function() {\r\n        let that = this;\r\n        function callback(datas){\r\n            var tree = new InspireTree({\r\n                data: datas\r\n            });\r\n    \r\n            new InspireTreeDOM(tree, {\r\n                target: that.dropdown\r\n            });\r\n\r\n            tree.on(\"node.selected\", that.insertText.bind(that));\r\n            //function(node, isLoadEvent){\r\n            //    that.input.value = node.text;\r\n            //})\r\n\r\n            if (!that.optionsTransition.transitioning) {\r\n                var state = window.getComputedStyle(that.dropdown).visibility;\r\n                stateToActionMap[state].call(that);\r\n            }\r\n        }\r\n        let loaddata = this.column.schema.loaddata;\r\n        if (loaddata !== undefined) {\r\n            loaddata(this.column.schema, this.input.value, callback)\r\n        } else {\r\n            callback();\r\n        }\r\n    },\r\n    insertText: function(node, isLoadEvent) {\r\n        this.node = node;\r\n        this.input.focus();\r\n        this.input.value = node.text;\r\n\r\n        this.input.setSelectionRange(0, this.input.value.length);\r\n\r\n        // close the drop-down\r\n        this.toggleDropDown();\r\n    }\r\n});\r\n\r\nfunction slideDown() {\r\n    // preserve the text box's current text selection, which is about to be lost\r\n    this.selectionStart = this.input.selectionStart;\r\n    this.selectionEnd = this.input.selectionEnd;\r\n\r\n    // clean up the select list from last usage\r\n    this.dropdown.selectedIndex = -1; // be kind (remove previous selection)\r\n    this.dropdown.style.scrollTop = 0; // rewind\r\n\r\n    // show the drop-down slide down effect\r\n    this.options.style.visibility = 'visible';\r\n    var dropDownTopMargin = getFloat(this.dropdown, 'marginTop'),\r\n        dropDownRows = 20,\r\n        optionHeight = Math.ceil((this.dropdown.length && getFloat(this.dropdown[0], 'height') || 13.1875) * 2) / 2 + 1;\r\n    this.options.style.height = dropDownTopMargin + optionHeight * dropDownRows + 2 + 'px'; // starts the slide down effect\r\n    this.dropdown.style.height = dropDownTopMargin + optionHeight * dropDownRows  + 'px';\r\n\r\n    // while in drop-down, listen for clicks in text box which means abprt\r\n    this.input.addEventListener('mousedown', this.slideUpBound = slideUp.bind(this));\r\n\r\n    // wait for transition to end\r\n    this.optionsTransition.begin();\r\n}\r\n\r\nfunction slideUp() {\r\n    // stop listening to input clicks\r\n    this.input.removeEventListener('mousedown', this.slideUpBound);\r\n\r\n    // start the slide up effect\r\n    this.options.style.height = 0;\r\n\r\n    // schedule the hide to occur after the slide up effect\r\n    this.optionsTransition.begin(function(event) {\r\n        this.style.visibility = 'hidden';\r\n    });\r\n}\r\n\r\nfunction getFloat(el, style) {\r\n    return parseFloat(window.getComputedStyle(el)[style]);\r\n}\r\n\r\nexport default Date;","let font = \"14px \\\"Helvetica Neue\\\",Helvetica,\\\"PingFang SC\\\",\\\"Microsoft YaHei\\\"\";\nexport default {\n    \"themeName\": \"excel\",\n    \"cellPadding\": 12,\n    \"font\": font,\n    \"foregroundSelectionFont\": font,\n    \"columnHeaderForegroundSelectionFont\": font,\n    \"columnHeaderFont\": font,\n    \"rowHeaderFont\": font,\n    \"rowHeaderForegroundSelectionFont\": font,\n    \"defaultRowHeight\": 24,\n    \"fixedLinesHWidth\": 1,\n    \"fixedLinesVWidth\": 1,\n    \"columnHeaderBackgroundColor\": \"rgb(230,230,230)\",\n    \"rowHeaderBackgroundColor\": \"rgb(230,230,230)\",\n    \"topLeftBackgroundColor\": \"rgb(230,230,230)\",\n    \"lineColor\": \"rgb(210,210,210)\",\n    \"backgroundColor2\": \"rgb(255, 255, 255)\",\n    \"color\": \"rgb(25, 25, 25)\",\n    \"fontFamily\": \"\\\"Helvetica Neue\\\",Helvetica,\\\"PingFang SC\\\",\\\"Microsoft YaHei\\\"\",\n    \"backgroundColor\": \"rgb(255, 255, 255)\",\n    \"columnHeaderColor\": \"rgb(25, 25, 25)\",\n    \"rowHeaderColor\": \"rgb(25, 25, 25)\",\n    \"topLeftColor\": \"rgb(230,230,230)\",\n    \"backgroundSelectionColor\": \"rgb(210,210,210, 0.8)\",\n    \"foregroundSelectionColor\": \"rgb(25, 25, 25)\",\n    \"columnHeaderForegroundSelectionColor\": \"rgb(25, 25, 25)\",\n    \"columnHeaderBackgroundSelectionColor\": \"rgb(210,210,210)\",\n    \"rowHeaderForegroundSelectionColor\": \"rgb(25, 25, 25)\",\n    \"fixedColumnBackgroundSelectionColor\": \"rgb(210,210,210)\",\n    \"selectionRegionOutlineColor\":\"rgb(33,115,70)\"\n};\n","let utils = {};\r\n\r\nutils.toTreeData = function (data, parent_id, options) {\r\n    let opt = options || {ukey:\"id\", pkey:'parent_id', toCKey:'children'}\r\n    var tree = [];\r\n    var temp;\r\n    for (var i = 0; i < data.length; i++) {\r\n        if (data[i][opt.pkey] == parent_id || data[i][opt.ukey] === data[i][opt.pkey]) {\r\n            var obj = data[i];\r\n            temp = utils.toTreeData(data, data[i][opt.ukey], opt);\r\n            if (temp.length > 0) {\r\n                obj[opt.toCKey] = temp;\r\n            }\r\n            tree.push(obj);\r\n        }\r\n    }\r\n    return tree;\r\n}\r\n\r\nexport default utils;  ","import Hypergrid from 'fin-hypergrid';\r\nimport ComboBox from \"./editors/ComboBox.js\";\r\nimport Datetime from \"./editors/Datetime.js\";\r\nimport Tree from \"./editors/Tree.js\";\r\nimport excel from './excel.js';\r\nimport utils from './utils.js';\r\n\r\nexport default class TG_EDITABLE_GRID {\r\n    constructor(dom, options){\r\n        this.displayFieldFormat = options.displayFieldFormat;\r\n        this.utils = utils;\r\n        Hypergrid.registerTheme(excel);\r\n        \r\n        this.grid = new Hypergrid(dom, options);\r\n        this.grid.properties.hoverCellHighlight = {\r\n            enabled: true,\r\n            backgroundColor: 'rgba(255,255,255)'\r\n        }\r\n        this.grid.properties.hoverRowHighlight = {\r\n            enabled: false\r\n        }\r\n        this.grid.properties.hoverColumnHighlight = {\r\n            enabled: false\r\n        }\r\n        this.grid.properties.editOnDoubleClick = false;\r\n        // this.grid.properties.multipleSelections = true;\r\n        // this.grid.properties.singleRowSelectionMode = false;\r\n        this.grid.localization.date = new Intl.DateTimeFormat(\"zh-Hans-CN\", options);\r\n\r\n        this.grid.cellEditors.add(Datetime);\r\n        this.grid.cellEditors.add(ComboBox);\r\n        this.grid.cellEditors.add(Tree);\r\n        this.grid.addEventListener('fin-editor-data-change', function(val){\r\n            console.log(val, \"~~~\");\r\n        })\r\n\r\n        Hypergrid.applyTheme('excel');\r\n    }\r\n\r\n    setData(data, schema) {\r\n        let that = this;\r\n        let newSchema = [];\r\n        schema.map(field => {\r\n            let newField = field;\r\n            newField.header = newField.caption;\r\n            newField.editor = newField.xtype;\r\n            delete newField.caption;\r\n\r\n            if (this.displayFieldFormat !== \"\" && newField.name.endsWith(this.displayFieldFormat) > -1) {\r\n                let code_name = newField.name.replace(this.displayFieldFormat, \"\");\r\n                field.code = code_name;\r\n            }\r\n            switch (newField.xtype) {\r\n                case \"select\":\r\n                    newField.editor = \"comboBox\"\r\n                    newField.loaddata = that.onEditorLoadData\r\n                    break;\r\n                case \"tree\":\r\n                    newField.loaddata = that.onEditorLoadData\r\n                    break;\r\n                case \"date-local\":\r\n                    newField.editor = \"datetime\"\r\n                    break;\r\n            }\r\n            newSchema.push(newField);\r\n        })\r\n\r\n        this.grid.setData({data: data, schema: newSchema});\r\n        this.grid.getCellEditorAt = function(row) {\r\n            return this.cellEditors.create(row.column.schema.editor, row);\r\n        }\r\n\r\n        this.grid.getCell = function(config, rendererName) {\r\n            return grid.cellRenderers.get(rendererName);\r\n        };\r\n   \r\n    }\r\n\r\n    onEditorLoadData(model, value, callback) {\r\n        throw \"请实现该方法\";\r\n    }\r\n\r\n    getData() {\r\n        return this.grid.behavior.dataModel.data;\r\n    }\r\n}"],"sourceRoot":""}